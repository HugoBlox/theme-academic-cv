<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>アプリNaviブログ</title>
    <link>https://blog.opuappnavi.com/</link>
      <atom:link href="https://blog.opuappnavi.com/index.xml" rel="self" type="application/rss+xml" />
    <description>アプリNaviブログ</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ja</language><copyright>©Juris710  2020</copyright>
    <image>
      <url>https://blog.opuappnavi.com/images/icon_hude4548ff0fbec708553074fd5e552c37_155941_512x512_fill_lanczos_center_2.png</url>
      <title>アプリNaviブログ</title>
      <link>https://blog.opuappnavi.com/</link>
    </image>
    
    <item>
      <title>自己流ステージ作成方法</title>
      <link>https://blog.opuappnavi.com/post/stage-create/</link>
      <pubDate>Sat, 30 May 2020 10:17:55 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/stage-create/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;
&lt;p&gt;初めまして、アプリNaviのヤマグチです。
本日、府大バーチャル学祭にて『巡回！デリバリー屋さん』を公開させていただきました。遊んで、楽しんでもらえたのなら嬉しいです。







&lt;div id=&#34;unity_webgl_0_1&#34; style=&#34;width: 100%; margin: 15px 0; background: white; border-radius: 15px;&#34;&gt;
  &lt;div style=&#34;position: relative;&#34;&gt;
    &lt;div id=&#34;unity_webgl_0_2&#34; style=&#34;height: 0;&#34;&gt;
      &lt;iframe id=&#34;unity_webgl_0_3&#34; allowfullscreen&gt;&lt;/iframe&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
let w =  1100 ; 
let h =  700 ; 
let url = &#34;https://deliveryrun.netlify.app/&#34;; 
document.getElementById(&#34;unity_webgl_0_2&#34;).style.paddingBottom = 100 * h / w + &#34;%&#34;;
document.getElementById(&#34;unity_webgl_0_3&#34;).src = url;
let set_width = function() {
  let client_w = document.getElementById(&#34;unity_webgl_0_2&#34;).clientWidth;
  let per = client_w / w;
  let rev = 100 / per;
  let iframe = document.getElementById(&#34;unity_webgl_0_3&#34;);
  iframe.height = rev + &#34;%&#34;;
  iframe.width = rev + &#34;%&#34;;
  iframe.style = &#34;position: absolute; top: 0; left: 0;  transform:scale(&#34; + per + &#34;);-o-transform:scale(&#34; + per + &#34;);-webkit-transform:scale(&#34; + per + &#34;);-moz-transform:scale(&#34; + per + &#34;);-ms-transform:scale(&#34; + per + &#34;);transform-origin:top left; border: 0;&#34;
}
set_width();
window.onresize = function(){ set_width(); };
&lt;/script&gt;
今ゲームは2Dパズルアクションゲームで、ステージ作りにそれなりの時間を割きました。そこで、前半はステージ作りをするとき僕がどう考えていたかについて、後半はゲーム内に実装したステージを作った時に考えていたことの一部について書きます。あくまで僕自身の考え方であり他の方のものとは異なります。参考程度に読んでください。&lt;/p&gt;
&lt;h1 id=&#34;ステージ作成で大切なこと&#34;&gt;ステージ作成で大切なこと&lt;/h1&gt;
&lt;p&gt;この項では、僕がステージ作成で気にした方がいいと考えていることを書いていきます&lt;/p&gt;
&lt;h2 id=&#34;1-ステージに意図を持たせる&#34;&gt;1. ステージに意図を持たせる&lt;/h2&gt;
&lt;p&gt;皆さんはカードゲームをしたことがありますか。ない場合は武器やパーティをカスタム、編成するゲームを考えてください。カードゲームにおいて、何が一番いる能力だと思いますか。
プレイング、読み、運、魂、色々あると思います。僕の答えは構築力です。なぜ構築力なのかは、ここではあまり関係ないので省きます。
ここで重要なのは構築力が高いと、デッキ内のすべてのカードに採用する理由があるということです。完成された構築には意味のないカードはなく、製作者の意図、意志が反映されます。
限られたデッキ枚数に何を何枚採用するか。言い換えると、限られたスペースに何をどのくらい配置するか。何かに似てますね。
そうです、ステージ作成です。特に今回のゲームでは、ステージは一画面に収まる量でなくてはダメでした。なのでステージの枠組みをどうするか、設置物をどこに置くか等、それぞれの配置に自分なりの考えを持つことを意識して作成しました。&lt;/p&gt;
&lt;h2 id=&#34;2-意味のないものを作る&#34;&gt;2. 意味のないものを作る&lt;/h2&gt;
&lt;p&gt;前項で書いたことに早速矛盾しました。
しかし、意味のないものを作ることも必要です。遊んでくれる方は製作者の意図なんて知ったこっちゃありません。だからこそ、製作者にとっては無意味だとわかり切っているものにも意味があるんじゃないかと深読みしてくれます。
そうすれば、意味のないものを作ったつもりが意味のあるものを作れます。意図的に意味のないものを作ることでステージ全体に遊び心を与えることができるのです。&lt;/p&gt;
&lt;h2 id=&#34;3-ギミックの使い方を考える&#34;&gt;3. ギミックの使い方を考える&lt;/h2&gt;
&lt;p&gt;今回はステージの数が少なく、一つ一つのステージも小さいです。なので、できる限り同じ使い方でギミックを使わないことを気にしました。
同じギミックでも、あるときはプラスの役割で使い、またある時はマイナスの役割で使うというようにギミックをより効果的に使うことを心がけました。&lt;/p&gt;
&lt;h2 id=&#34;4-自分が楽しむ&#34;&gt;4. 自分が楽しむ&lt;/h2&gt;
&lt;p&gt;これが一番大切な気がします。作った人が作ったものに対しての理解が最も深いはずです。その人が楽しめないものを他の人が楽しめるとは思えません。作ったステージを自分自身が楽しめるようになりましょう。
作っている時は、作っているステージが面白いかどうかわからなくなってきます。しかし自分が面白いと思えば、少なくとも世界で誰も楽しめないステージではなくなります。
僕は今回のゲームで僕が作ったステージが一番好きです。&lt;/p&gt;
&lt;h1 id=&#34;実際に作ったステージの解説&#34;&gt;実際に作ったステージの解説&lt;/h1&gt;
&lt;p&gt;この項では、僕が今回のゲームで作ったステージのちょっとした解説をしようと思います。この先、ステージ9のネタバレを含みますのでプレイした後に読むことをお勧めします。
&lt;details&gt;
    &lt;summary&gt;以下ステージ9ネタバレ&lt;/summary&gt;
    &lt;figure &gt;
&lt;p&gt;&lt;a data-fancybox=&#34;&#34; href=&#34;./stage9.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./stage9.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;p&gt;1の意図は、ステージ全体にコンセプトを持たせることです。
初めにコンセプトを決めておくことで僕自身の中で方向性がブレないようにしました。このステージ全体のコンセプトは「ステージ一周」でした。その時に右周りでも左回りでもクリアできるようにするということを目標にしました。
ステージ全体を、荷物を取るエリアでそれぞれ区分けし、各エリアには入り口と出口を作り周回方向によって入り口、出口が入れ替わるような配置にしました。
画像では、赤枠の示す上から落ちるブロックです。これを擬似的な通行止めとして利用しました。&lt;br&gt;
2の意味のないものは、どっち周りでもクリアできるという要素です。
別に両方から進める必要は全くありません。左回りの時は右回りのギミックは不必要で、右回りの時は左回りのギミックは不必要となります。ただ、これがあることがこのステージの面白さを出しているのだと考えています。&lt;br&gt;
3のギミックの使い方は、先ほども挙げた落ちるブロックによるステージの区切りです。
他の僕の作ったステージでは、基本的にプレイヤーを倒すためだけのものでした。そこに他の役割である区切りという役割を持たせています。この使い方はプラスとマイナスの両方の使い方というわけではありませんが、違った使い方をした一例ではあります。&lt;br&gt;
4の自分が楽しむに関しては、作ってるのはすごく楽しかったです。コンセプトを思いついてからは非常にスムーズにステージ作成をすることができました。&lt;br&gt;
以上が、僕の作ったステージのちょっとした解説になります。あまり話しすぎても面白くないのでこの辺りで終わります。&lt;/p&gt;

&lt;/details&gt;
&lt;/p&gt;
&lt;h2 id=&#34;終わりに&#34;&gt;終わりに&lt;/h2&gt;
&lt;p&gt;読んでいただきありがとうございました。
まさかブログまで書くことになると思っていませんでしたが、ゲームも含めてまあ良いものになったんじゃないかなあと思っています。
最後に、ゲームを遊んでいただいた方、このブログを読んでいただいた方ありがとうございました。それではまた何かの機会に。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GAS でサクッと採点シート作ってみた</title>
      <link>https://blog.opuappnavi.com/post/gas-scoring/</link>
      <pubDate>Sat, 30 May 2020 10:04:44 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/gas-scoring/</guid>
      <description>&lt;p&gt;全然需要ないかもですが、GAS の紹介第二弾です。&lt;/p&gt;
&lt;p&gt;今回は GAS を使って、以前ハッカソンの採点シートをちゃっと作った話をしたい思います。&lt;/p&gt;
&lt;p&gt;手軽にできるので、JavaScript など、プログラミングを最近学び始めた方はちょっと実践がてらに GAS を利用して何か作ってみたらどうでしょう？みたいな気持ちで書いたので、読んでもらえたら幸いです。（GAS は一応 JavaScript ベースでできています(^^)/)&lt;/p&gt;
&lt;h2 id=&#34;gas-って&#34;&gt;GAS って？&lt;/h2&gt;
&lt;p&gt;こちらで紹介しているので良ければ見ていってください！&lt;/p&gt;







    



    









  


&lt;div class=&#34;card-simple&#34;&gt;

  
    


&lt;div class=&#34;article-metadata&#34;&gt;

  
  
  
  
  &lt;div&gt;
    

  
  &lt;span&gt;&lt;a href=&#34;https://blog.opuappnavi.com/author/nobu/&#34;&gt;Nobu&lt;/a&gt;&lt;/span&gt;
  &lt;/div&gt;
  
  

  
  &lt;span class=&#34;article-date&#34;&gt;
    
    
      
          最終更新
      
    
    2020/05/28
  &lt;/span&gt;
  

  

  

  
  
  

  
  

&lt;/div&gt;

  

  
  
  

  &lt;h3 class=&#34;article-title mb-1 mt-3&#34;&gt;
    &lt;a href=&#34;https://blog.opuappnavi.com/post/gas-recommendation/&#34;&gt;手軽に始める！GAS を使ってみませんか～&lt;/a&gt;
  &lt;/h3&gt;

  
  &lt;div class=&#34;article-style&#34;&gt;
    &lt;p&gt;Google Apps Scriptの紹介&lt;/p&gt;
  &lt;/div&gt;
  

  

&lt;/div&gt;

 
&lt;h2 id=&#34;作った経緯ついでにハッカソンの紹介&#34;&gt;作った経緯（ついでにハッカソンの紹介）&lt;/h2&gt;
&lt;p&gt;アプリ Navi では毎年、長期休みのどこかで、ハッカソンというものを開催しています。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ハッカソンとは&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ハッカソン（英語: hackathon 、別名:hack day ,hackfest ,codefest ）とは、ソフトウェア開発分野のプログラマやグラフィックデザイナー、ユーザインタフェース設計者、プロジェクトマネージャらが集中的に作業をするソフトウェア関連プロジェクトのイベントである
(
&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%83%E3%82%AB%E3%82%BD%E3%83%B3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia より抜粋&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;とのこと。なんかヤバそう&amp;hellip;&lt;/p&gt;
&lt;p&gt;もちろん、この文から読み取れるようなそこまでヤバそうな感じではないです（笑）&lt;/p&gt;
&lt;p&gt;一言でいうと、参加者同士が、チームを組んで一つの作品を作ろうというイベントになっています。twitter にて簡単に紹介しているので良ければ見てください。&lt;/p&gt;
&lt;p&gt;ハッカソンの紹介
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/%E5%A4%A7%E9%98%AA%E5%BA%9C%E7%AB%8B%E5%A4%A7%E5%AD%A6?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#大阪府立大学&lt;/a&gt;&lt;br&gt;&lt;br&gt;今日紹介するのは、ハッカソンです！&lt;br&gt;&lt;br&gt;年に２回、コンピュータハウスランダムさんも交えてハッカソンを主催しています！&lt;br&gt;アプリNaviでは部員同士でチームを組んで、発表されるお題に沿って、約２日で一つのゲームやアプリを制作、発表する形式をとっています。&lt;br&gt;&lt;br&gt;↓リプ欄に続く &lt;a href=&#34;https://t.co/pZdAznwB0V&#34;&gt;pic.twitter.com/pZdAznwB0V&lt;/a&gt;&lt;/p&gt;&amp;mdash; OPU アプリNavi (@OPUAppNavi) &lt;a href=&#34;https://twitter.com/OPUAppNavi/status/1246644279813926912?ref_src=twsrc%5Etfw&#34;&gt;April 5, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;ハッカソンの紹介はこの程度にして、そこでは審査員の方もお呼びして、それぞれの作品を審査してもらう形を取っています。&lt;/p&gt;
&lt;p&gt;その審査の際、採点用紙が必要だったので、ちょうど GAS を勉強し始めたこともあり自作することにしました。&lt;/p&gt;
&lt;h2 id=&#34;作ったもの&#34;&gt;作ったもの&lt;/h2&gt;
&lt;p&gt;それ専用に作ったので、完全に内輪向けですが画像としてはこんなものです。&lt;/p&gt;















&lt;figure id=&#34;figure-作ったもの&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./HackathonScoreSheet.png&#34; data-caption=&#34;作ったもの&#34;&gt;


  &lt;img src=&#34;./HackathonScoreSheet.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    作ったもの
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;見た目等はいまいちですが、ちゃんと動きます。&lt;/p&gt;
&lt;p&gt;審査員の方に審査するチーム名を選択してもらい、それぞれの項目について点数を付け送信してもらうといった流れです。&lt;/p&gt;
&lt;p&gt;こういうの何かの初歩の題材でありそうですね&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;どうして-gas-で&#34;&gt;どうして GAS で？&lt;/h2&gt;
&lt;p&gt;大きな理由としては、GAS を知り始めて使ってみたかったというのがありますが、&lt;/p&gt;
&lt;p&gt;その使ってみたくなるという前提となるのが、手軽に作成できるからです。&lt;/p&gt;
&lt;p&gt;その理湯としては大きく分けて２つあります。&lt;/p&gt;
&lt;h4 id=&#34;サーバー等の手続きがいらず簡単に公開できる&#34;&gt;サーバー等の手続きがいらず、簡単に公開できる&lt;/h4&gt;
&lt;p&gt;GAS では Google のサーバーを使っているので、このような簡単なサイトでもサーバーを借りるなどの作業がいらず、実質ワンクリックで公開、利用できます。&lt;/p&gt;
&lt;p&gt;GAS のエディタから、おおよそここをクリックしたら公開できます&lt;/p&gt;















&lt;figure id=&#34;figure-公開方法&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./GAS_Release.png&#34; data-caption=&#34;公開方法&#34;&gt;


  &lt;img src=&#34;./GAS_Release.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    公開方法
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h4 id=&#34;spreadsheet-を簡易的なデータベースのように利用できる&#34;&gt;SpreadSheet を簡易的なデータベースのように利用できる&lt;/h4&gt;
&lt;p&gt;個人的には SpreadSheet を簡易的なデータベースとして利用できるのは大きいと思います。&lt;/p&gt;
&lt;p&gt;SpreadSheet を簡易的なデータベースとして用いることで、データベースの知識がなくても簡単な事ならできますし、なんにせよ上限はありますが、無料で利用できるので、少なくとも何かをパッと作りたいときにはいいのではないかと！&lt;/p&gt;
&lt;p&gt;一応、ちょっとした例として、ユーザーの入力を SpreadSheet に追加するコードを載せておきます…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML の&lt;code&gt;&amp;lt;form&amp;gt;&amp;lt;/form&amp;gt;&lt;/code&gt;に入力された内容を SpreadSheet に記述&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-html:index.html&#34;&gt;&amp;lt;form method=&amp;quot;post&amp;quot; action=&amp;quot;送信先のURL&amp;quot;&amp;gt;
  ....
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-JavaScript:input.gs&#34;&gt;function doPost(e){
  //データを記録するスプレッドシート
  var sheet =SpreadsheetApp.openByUrl(&amp;quot;//利用したいSpreadSheetのURL//&amp;quot;);
  ...
  //チーム名、各採点項目の情報を取得
  var name = e.parameter.name;
  var theme = e.parameter.theme;
  var uniqe = e.parameter.uniqe;
  var practice = e.parameter.practice;
  var presentation = e.parameter.presentation;
  var comment = e.parameter.comment;

  //データ
  var array = [userEmail,name,theme,uniqe,practice,presentation,comment];

  //SpreadSheetにデータを追加
  sheet.appendRow(array);
  ...
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;データの保存だけですが、このように SpreadSheet を用いることで手軽に簡易的なデータベースを利用することができます。&lt;/p&gt;
&lt;p&gt;また SpreadSheet を Sheet API として利用することで GAS のプロジェクトだけではなく、その他の web 開発やスマホアプリ開発などにもデータベースとして活用できるので知っておいて損はないかと思います。&lt;/p&gt;
&lt;h2 id=&#34;コード&#34;&gt;コード&lt;/h2&gt;
&lt;p&gt;こんなので公開していいのかという思いもありますが、大まかなコードを載せておきます。お見苦しいですが、何卒ご容赦下さい、、、
恐らくすごく簡単というのが分かると思います。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html:index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;base target=&amp;quot;_top&amp;quot; /&amp;gt;
    &amp;lt;!-- GASでのcssの読み込み--&amp;gt;
    &amp;lt;?!= HtmlService.createHtmlOutputFromFile(&#39;css&#39;).getContent(); ?&amp;gt;
    &amp;lt;meta
      name=&amp;quot;viewport&amp;quot;
      content=&amp;quot;width=device-width,initial-scale=1.0,minimum-scale=1.0&amp;quot;
    /&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;
      &amp;lt;h1&amp;gt;ハッカソン 採点シート&amp;lt;/h1&amp;gt;
      &amp;lt;p&amp;gt;
        使い方:&amp;lt;br /&amp;gt;採点欄がチームごとに４つの項目があるので各１０点、&amp;lt;br /&amp;gt;
        合計40点で採点をお願いします。&amp;lt;br /&amp;gt;
        各チームの採点が終わり次第、一番下の送信ボタンをおしてください。&amp;lt;br /&amp;gt;
        また申し訳ありませんが、誤送信など、なにかございましたらすぐにご連絡ください
      &amp;lt;/p&amp;gt;
      &amp;lt;form method=&amp;quot;post&amp;quot; action=&amp;quot;送信先のURL&amp;quot;&amp;gt;
        &amp;lt;table border=&amp;quot;1&amp;quot; width=&amp;quot;100%&amp;quot; height=&amp;quot;30rem&amp;quot;&amp;gt;
          &amp;lt;tr&amp;gt;
            &amp;lt;th&amp;gt;チーム名&amp;lt;/th&amp;gt;
            &amp;lt;th&amp;gt;
              &amp;lt;select name=&amp;quot;name&amp;quot;&amp;gt;
                &amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;選択してください&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;quot;/*チーム名*/&amp;quot;&amp;gt;/*チーム名*/&amp;lt;/option&amp;gt;
                ...
              &amp;lt;/select&amp;gt;
            &amp;lt;/th&amp;gt;
          &amp;lt;/tr&amp;gt;
          &amp;lt;tr&amp;gt;
            &amp;lt;th colspan=&amp;quot;2&amp;quot;&amp;gt;採点項目&amp;lt;/th&amp;gt;
          &amp;lt;/tr&amp;gt;
          &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;/*採点項目*/&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;&amp;lt;input type=&amp;quot;number&amp;quot; name=&amp;quot;name&amp;quot; min=&amp;quot;0&amp;quot; max=&amp;quot;10&amp;quot; /&amp;gt;/10&amp;lt;/td&amp;gt;
            ...
          &amp;lt;/tr&amp;gt;

          &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;コメント&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;
              &amp;lt;textarea
                id=&amp;quot;commit&amp;quot;
                name=&amp;quot;comment&amp;quot;
                placeholder=&amp;quot;こちらに何かチームに向けてコメントあればお願いします！&amp;quot;
              &amp;gt;&amp;lt;/textarea&amp;gt;
            &amp;lt;/td&amp;gt;
          &amp;lt;/tr&amp;gt;
        &amp;lt;/table&amp;gt;
        &amp;lt;p&amp;gt;
          &amp;lt;input
            type=&amp;quot;submit&amp;quot;
            value=&amp;quot;送信する&amp;quot;
            style=&amp;quot;width:200px;height:100px;font-size:30px;float:right&amp;quot;
          /&amp;gt;
        &amp;lt;/p&amp;gt;
      &amp;lt;/form&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-JavaScript:コード.gs&#34;&gt;//htmlを読み込む
function doGet() {
  var template = &#39;index&#39;;
  return HtmlService.createTemplateFromFile(template).evaluate();
}
//得点計算処理
function myFunction() {

  var sum = [];

  var teamList = [&amp;quot;/*チームリスト*/&amp;quot;];

  for(var j = 0; j &amp;lt; 8;j++){
    sum[j] = 0;
  }
//spreadsheetのデータを取得する処理(細かい解説は省きます)
  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = spreadsheet.getActiveSheet();

  var lastRow = sheet.getLastRow();
  Logger.log(lastRow);

  for(i = 9; i &amp;lt;= lastRow;i++){
    var range = sheet.getRange(i,2);

    for(k = 0; k &amp;lt; 8;k++){

      if(range.getValue() == teamList[k]){
        var range = sheet.getRange(i,3,1,4);
        var valueArray = range.getValues();
        for(var u = 0; u &amp;lt; 4;u++){
          sum[k] += valueArray[0][u];
    }
      }
  }
  }
  for(i = 0;i &amp;lt; 8;i++){
    sheet.getRange(i + 1 ,9).setValue(sum[i]);
  }
}

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;作ってみた感想&#34;&gt;作ってみた感想&lt;/h2&gt;
&lt;p&gt;コード自体も非常に簡単ながら、データの保存等も SpreadSheet で行い、利用してもらうための公開もすぐにできるので、サクッと作ることが出来ました。
ただやはり GAS 自体の勉強もいるかなという感じです。
また勉強だけでなく、大小あれど自分で実際に使ってもらうものを作ることができたので、その点は良かったと思います。&lt;/p&gt;
&lt;h2 id=&#34;最後に&#34;&gt;最後に&lt;/h2&gt;
&lt;p&gt;今回は本当に簡単な例をあげましたが、かなりざっくりしていたので、説明不足の点も多々あって申し訳ないです。ただ、こんなのがあるとだけ伝われば幸いです。
また、もちろん GAS にはもっと様々な事に利用することができるので、ご興味のある方は一度調べてみてください！&lt;/p&gt;
&lt;p&gt;追伸&lt;/p&gt;
&lt;p&gt;普通に Google Form とかでやればええやん、とかは言わないで m(_ _)m&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>手軽に始める！GAS を使ってみませんか～</title>
      <link>https://blog.opuappnavi.com/post/gas-recommendation/</link>
      <pubDate>Thu, 28 May 2020 19:47:24 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/gas-recommendation/</guid>
      <description>&lt;p&gt;どうもこんにちは、今回は自分がよく使っている、GAS について紹介したいと思います。&lt;/p&gt;
&lt;p&gt;ちなみにタイトルの通り、手軽に始められるので、最近プログラミングを始めたという方にもおススメなのでぜひ見ていってください(^-^)&lt;/p&gt;
&lt;h1 id=&#34;gas-って&#34;&gt;GAS って?&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;GAS&lt;/strong&gt;とは &lt;strong&gt;Google Apps Script&lt;/strong&gt;の略でプログラミング言語の一つです。&lt;/p&gt;
&lt;p&gt;読み方はガス、ギャスなどと言われることが多いです。&lt;/p&gt;
&lt;p&gt;一応、

&lt;a href=&#34;https://developers.google.com/gsuite/aspects/appsscript?hl=ja&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;公式&lt;/a&gt;の文言を載せておくと、&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Google Apps Script は JavaScript ベースのスクリプト言語で、ドキュメント、スプレッドシート、スライド、フォームなどの G Suite サービスをカスタマイズ、拡張できます。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;とのこと。（抜粋）&lt;/p&gt;
&lt;h1 id=&#34;gas-で何ができるの&#34;&gt;GAS で何ができるの？&lt;/h1&gt;
&lt;p&gt;じゃあ GAS で何ができるのかというと、色々とあると思うのですが、とりあえず大きく分けてこの２つかなと。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Google のサービスをより便利に活用する&lt;/li&gt;
&lt;li&gt;web アプリケーションの作成、公開&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;順に紹介していきます。&lt;/p&gt;
&lt;h1 id=&#34;google-のサービスをより便利に活用する&#34;&gt;Google のサービスをより便利に活用する&lt;/h1&gt;
&lt;p&gt;GAS では Google のサービスをより自由に効率的に使うことが出来ます。&lt;/p&gt;
&lt;p&gt;下記のようなサービスを利用する際、GAS のコードを加えることで、面倒な作業を自動化したりなどが可能です。&lt;/p&gt;
&lt;h2 id=&#34;利用できるサービス例&#34;&gt;利用できるサービス例&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Google Document&lt;/li&gt;
&lt;li&gt;G Mail&lt;/li&gt;
&lt;li&gt;Google SpreadSheet&lt;/li&gt;
&lt;li&gt;Google Calender&lt;/li&gt;
&lt;li&gt;Google Form 　　　　などなど…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらのサービスを使っている人も比較的多いのではないでしょうか？&lt;/p&gt;
&lt;h2 id=&#34;使用例&#34;&gt;使用例&lt;/h2&gt;
&lt;p&gt;具体的に GAS で Google のサービスをより効果的に用いた使用例としてはこのようなものがあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;カレンダーに自動でスケジュールを記入&lt;/li&gt;
&lt;li&gt;事務的メールを複数人に指定の時間に自動送信&lt;/li&gt;
&lt;li&gt;Google Formを自分好みに改造&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;もちろん他にも色々とありますが、例のように日常の何気ない作業を自動化したり、普段用いているサービスの機能を拡張するようなことができます。&lt;/p&gt;
&lt;h1 id=&#34;web-アプリケーションの作成公開&#34;&gt;Web アプリケーションの作成、公開&lt;/h1&gt;
&lt;p&gt;GAS では、google のサービスと連携して、web アプリケーションを開発、公開する機能があります。&lt;/p&gt;
&lt;p&gt;またアプリケーションの機能として、googleのサービスと連携しているのでその機能を簡単に用いることができ、少しのコードでちょっと素敵な事を行うことが可能です。&lt;/p&gt;
&lt;h2 id=&#34;使用例-1&#34;&gt;使用例&lt;/h2&gt;
&lt;p&gt;簡単に例をあげると&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SpreadSheetを簡易的なデータベースのように使う&lt;/li&gt;
&lt;li&gt;G Mailを用いてメール送信機能を作る&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などがあります。&lt;/p&gt;
&lt;p&gt;他にも外部アプリケーションとの連携などを組合せて、様々な事ができると思うので、ぜひ試してください！&lt;/p&gt;
&lt;h1 id=&#34;gasを使用するメリット&#34;&gt;GASを使用するメリット&lt;/h1&gt;
&lt;p&gt;GASで何ができるかというのを紹介したところで、タイトルの&lt;strong&gt;お手軽&lt;/strong&gt;という理由を紹介していきます。&lt;/p&gt;
&lt;h2 id=&#34;開発環境構築がいらない&#34;&gt;開発環境構築がいらない！&lt;/h2&gt;
&lt;p&gt;GASでは新しく言語をはじめるときの面倒な環境構築はほとんどありません。&lt;/p&gt;
&lt;p&gt;必要なのは&lt;strong&gt;Googleアカウント&lt;/strong&gt;だけ。&lt;/p&gt;
&lt;p&gt;加えて、実行はGoogleのサーバーを利用するので、レンタルサーバーを用意したり、それ関係のツールを利用することもなく開発をすることができます。&lt;/p&gt;
&lt;h2 id=&#34;無料&#34;&gt;無料！&lt;/h2&gt;
&lt;p&gt;利用するのに基本的にお金はかかりません。&lt;/p&gt;
&lt;h2 id=&#34;学習コストが低い勉強になる&#34;&gt;学習コストが低い、勉強になる！&lt;/h2&gt;
&lt;p&gt;GASはJavaScriptベースで、そしてwebサイトを開発する時に良く用いられるHTML,CSSを使用して開発することが可能なので、一般的に学習コストはそこまで高くないです。&lt;/p&gt;
&lt;p&gt;それにJavaScriptを勉強中の方はそれを使って手軽にアプリケーションを作ったりできるので、その学習の実践の場として助けにもなると思います。&lt;/p&gt;
&lt;h1 id=&#34;デメリットもあります&#34;&gt;デメリットもあります…&lt;/h1&gt;
&lt;p&gt;メリットの反面、やはりデメリットもあります。&lt;/p&gt;
&lt;p&gt;その例として一つあげると無料で利用できる反面、Googleのサーバーを利用していているので、ユーザーによる過剰な負担を避けるために利用するのに制限があります。&lt;/p&gt;
&lt;p&gt;もっとも大きな制限として考えられるのは実行制限で、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1回あたりの実行制限時間: 6分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;となっています。&lt;/p&gt;
&lt;p&gt;これは工夫せずに重い処理を何度も書くと、引っかかってしまうので注意が必要です…&lt;/p&gt;
&lt;p&gt;そのためGASはそこまで大きなプロジェクトには向いていないと言えます&amp;hellip;&lt;/p&gt;
&lt;p&gt;詳しい公式の制限は
&lt;a href=&#34;https://developers.google.com/apps-script/guides/services/quotas&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;コチラ&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;さっそく始めてみよう&#34;&gt;さっそく始めてみよう&lt;/h1&gt;
&lt;p&gt;始める方法はとても簡単です。せっかくなので実際にやってみます。&lt;/p&gt;
&lt;ol start=&#34;0&#34;&gt;
&lt;li&gt;
&lt;p&gt;googleアカウントの作成（無い方は）&lt;br&gt;
こちらより必要事項を記入して

&lt;a href=&#34;https://support.google.com/accounts/answer/27441?hl=ja&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google アカウントを作成&lt;/a&gt;
します。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ブラウザで
&lt;a href=&#34;https://www.google.co.jp/drive/apps.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Drive&lt;/a&gt;にアクセスします。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google DriveにGoogle Apps Scriptを追加する&lt;br&gt;
左上の新規＋ボタンをクリックし、その他→アプリを追加→Google Apps Scriptを探し、接続をクリック&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;もう一度新規＋を押し、その他にGoogle Apps Scriptが出てきたら完了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;















&lt;figure id=&#34;figure-helloworld&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./nobu_GAS_img_1.png&#34; data-caption=&#34;HelloWorld&#34;&gt;


  &lt;img src=&#34;./nobu_GAS_img_1.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    HelloWorld
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;それをクリックすると、エディタがでてくるので、これでGASをはじめる準備が出来ました！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ちなみにHello Worldはこんな感じです。&lt;/p&gt;















&lt;figure id=&#34;figure-完了後&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./nobu_GAS_img_2.png&#34; data-caption=&#34;完了後&#34;&gt;


  &lt;img src=&#34;./nobu_GAS_img_2.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    完了後
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h1 id=&#34;最後に&#34;&gt;最後に&lt;/h1&gt;
&lt;p&gt;今回はざっくりでしたがGASについて簡単に紹介しました。&lt;/p&gt;
&lt;p&gt;GASの存在だけでも知ってもらい、機会があれば何かで使ってもらえたら幸いです。&lt;/p&gt;
&lt;p&gt;また、GASを十分使いこなせているとは言えない自分ですが、おすすめしたい参考サイトも載せておくので興味がある人は見てみてください！&lt;/p&gt;
&lt;h2 id=&#34;参考サイト&#34;&gt;参考サイト&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://tonari-it.com/google-apps-script-manual/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;【保存版】初心者向け実務で使えるGoogle Apps Script完全マニュアル&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHubのforkとライセンス</title>
      <link>https://blog.opuappnavi.com/post/github-fork-mit/</link>
      <pubDate>Sun, 24 May 2020 22:37:45 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/github-fork-mit/</guid>
      <description>&lt;h1 id=&#34;githubのfork&#34;&gt;GitHubのfork&lt;/h1&gt;
&lt;p&gt;GitHubにはforkという機能があります。既に存在するリポジトリをコピーして、オリジナルのリポジトリに影響を与えることなく変更を加えることができます。&lt;br&gt;
このサイトは
&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic Kickstart&lt;/a&gt;というリポジトリをforkして開発しています。&lt;/p&gt;
&lt;h1 id=&#34;ライセンス&#34;&gt;ライセンス&lt;/h1&gt;
&lt;p&gt;GitHubのリポジトリにはたいてい、LICENSEという名前のファイルがあります。ライセンスはそのプログラムの改変・商用利用などをしても良いかなどを記したファイルで、何を許可するかによって様々なライセンスが存在します。&lt;br&gt;
その中で一番多く用いられているライセンスの１つがMITライセンスです。
&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic Kickstart&lt;/a&gt;もMITライセンスです。
MITライセンスが設定されたリポジトリは、以下の2つを守れば改変・商用利用など自由に使うことができます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元の著作権表示(&lt;code&gt;Copyright (c) 年 作者名&lt;/code&gt;)をそのまま掲載すること&lt;/li&gt;
&lt;li&gt;ライセンスの全文（あるいは全文が掲載されたサイトのURL）を掲載すること&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;詳しくは
&lt;a href=&#34;https://wisdommingle.com/mit-license/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;このサイト&lt;/a&gt;などを参照してください。&lt;/p&gt;
&lt;h1 id=&#34;forkとライセンス&#34;&gt;forkとライセンス&lt;/h1&gt;
&lt;p&gt;このサイトを開発する中で、「forkしたリポジトリのライセンスはどう変更するべきなのか」という疑問を持ち、検索してみました。その結果わかった2つの方法を紹介します。&lt;/p&gt;
&lt;h2 id=&#34;方法1一行下に自分の著作権表示を追加&#34;&gt;方法1　一行下に自分の著作権表示を追加&lt;/h2&gt;
&lt;details&gt;
    &lt;summary&gt;方法1&lt;/summary&gt;
    &lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;The MIT License (MIT)

Copyright (c) 年 foo

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上のようなライセンスのリポジトリをforkする場合、次のように変更します。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;The MIT License (MIT)

Copyright (c) 年 foo
Copyright (c) 年 作者名(自分)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;

&lt;/details&gt;

&lt;h2 id=&#34;方法2ライセンスを併記&#34;&gt;方法2　ライセンスを併記&lt;/h2&gt;
&lt;details&gt;
    &lt;summary&gt;方法2&lt;/summary&gt;
    &lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;The MIT License (MIT)

Copyright (c) 年 foo

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上のようなライセンスのリポジトリをforkする場合、書き方は色々ありますが、例えば次のように変更します。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;The MIT License (MIT)

Copyright (c) 年 作者名(自分)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Here is the original copyright notice:

The MIT License (MIT)

Copyright (c) 年 foo

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;GitHubはライセンスの種類を認識し、説明を表示する機能があります。この方法だとGitHubがGitHuMITライセンスだと認識してくれないという問題があります。&lt;/p&gt;

&lt;/details&gt;

&lt;h1 id=&#34;検証&#34;&gt;検証&lt;/h1&gt;
&lt;p&gt;forkしたリポジトリのライセンス変更に、実際どのような方法が取られているか検証することにしました。検証するリポジトリは
&lt;a href=&#34;https://github.com/tokyo-metropolitan-gov/covid19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;東京都コロナウイルス対策サイト&lt;/a&gt;です。GitHubにMITライセンスのリポジトリが公開されており、多くの都道府県が(公式 / 非公式で)このリポジトリをforkした対策サイトを作成しています。
&lt;a href=&#34;https://github.com/tokyo-metropolitan-gov/covid19/blob/development/FORKED_SITES.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;派生したサイト一覧&lt;/a&gt;に掲載されているリポジトリについて、&lt;code&gt;master&lt;/code&gt;ブランチの&lt;code&gt;LICENSE.txt&lt;/code&gt;の権利表記を比較すると、以下のような結果になりました。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;著作権表示に加えられた変更&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;リポジトリ数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;そのまま&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;51&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;書き換え&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;方法1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;方法2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;東京都のリポジトリの権利表記&lt;code&gt;Copyright (c) 2020 Tokyo Metropolitan Government and other contributors.&lt;/code&gt;をforkした側の名前に書き換えているリポジトリがいくつかありました。厳密に言えばこれはMITライセンスの規約違反になるので意外でした。「コロナ対策サイト」で著作権の問題は起こらないでしょうから、ライセンス関連はあまり気にしていないのかもしれません。&lt;/p&gt;
&lt;h1 id=&#34;参考サイト&#34;&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/ja/github/getting-started-with-github/fork-a-repo&#34;&gt;https://help.github.com/ja/github/getting-started-with-github/fork-a-repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wisdommingle.com/mit-license/&#34;&gt;https://wisdommingle.com/mit-license/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/fbaierl/1d740a7925a6e0e608824eb27a429370&#34;&gt;https://gist.github.com/fbaierl/1d740a7925a6e0e608824eb27a429370&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://opensource.stackexchange.com/questions/6119/forking-github-repository-mit-what-references-to-the-original-author-should-r&#34;&gt;https://opensource.stackexchange.com/questions/6119/forking-github-repository-mit-what-references-to-the-original-author-should-r&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.stackoverflow.com/questions/3040/mit%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9%E3%81%AE%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%82%92%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AF%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%AE%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9%E8%A1%A8%E8%A8%98&#34;&gt;https://ja.stackoverflow.com/questions/3040/mit%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9%E3%81%AE%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%82%92%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AF%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%AE%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9%E8%A1%A8%E8%A8%98&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://softwareengineering.stackexchange.com/questions/277688/if-i-fork-a-project-on-github-that-is-licensed-under-mit-how-to-i-handle-the-at&#34;&gt;https://softwareengineering.stackexchange.com/questions/277688/if-i-fork-a-project-on-github-that-is-licensed-under-mit-how-to-i-handle-the-at&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;forkした側のライセンスを別ファイルに掲載しているリポジトリを含みます。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://blog.opuappnavi.com/slides/test/</link>
      <pubDate>Sun, 17 May 2020 17:58:10 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/slides/test/</guid>
      <description>&lt;h1 id=&#34;テスト&#34;&gt;テスト&lt;/h1&gt;
&lt;p&gt;こんにちは&lt;/p&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&#34;language-c:helloworld.c&#34;&gt;#include&amp;lt;stdio.h&amp;gt;
int main(void){
  printf(&amp;quot;Hello, World!&amp;quot;);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Windowsでもビデオ会議でバ美肉したい！</title>
      <link>https://blog.opuappnavi.com/post/windows-babiniku-video-conference/</link>
      <pubDate>Sun, 17 May 2020 15:47:06 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/windows-babiniku-video-conference/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;
&lt;h2 id=&#34;バ美肉とは&#34;&gt;バ美肉とは&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;バ美肉（バびにく）とは、バーチャル美少女受肉またはバーチャル美少女セルフ受肉の略語。美少女のアバターを纏うこと、あるいは纏った上でバーチャルな美少女として、VRChat等のバーチャル空間で活動したり、バーチャルYouTuber・バーチャルアイドル等として活動することを指す。(Wikipedia)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;ビデオ会議でバ美肉&#34;&gt;ビデオ会議でバ美肉&lt;/h2&gt;
&lt;p&gt;Qiitaで「バ美肉」と検索すると、VTuberなどの姿でビデオ会議に参加する方法を解説する記事が複数投稿されています。しかしながら、それらの記事はMacでのやり方解説であり、Windowsでの方法を解説した記事は（ざっと見た限りでは）見つかりませんでした。&lt;/p&gt;
&lt;h1 id=&#34;windowsでのやり方&#34;&gt;Windowsでのやり方&lt;/h1&gt;
&lt;h2 id=&#34;仮想カメラの準備&#34;&gt;仮想カメラの準備&lt;/h2&gt;
&lt;p&gt;バ美肉した映像をカメラとしてビデオ会議ソフトに認識してもらうために仮想カメラが必要です。Qiitaの記事では&lt;code&gt;CamTwist&lt;/code&gt;というソフトが使われていますが、Mac版しか存在しません。そのため、代わりに&lt;code&gt;OBS Studio&lt;/code&gt;というフリーソフトを使用します。録画・配信用のソフトウェアですが、&lt;code&gt;OBS Virtualcam&lt;/code&gt;というプラグインを使用することで仮想カメラになります。
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    今回使用した&lt;code&gt;OBS Virtualcam&lt;/code&gt;のバージョンは&lt;code&gt;2.0.5&lt;/code&gt;です。それ以下のバージョンだと上手くいかない可能性があります。
  &lt;/div&gt;
&lt;/div&gt;

まず、 &lt;a href=&#34;https://obsproject.com/ja&#34;&gt;https://obsproject.com/ja&lt;/a&gt; から&lt;code&gt;OBS Studio&lt;/code&gt;をインストールします。















&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./obs_studio_installation.png&#34; &gt;


  &lt;img src=&#34;./obs_studio_installation.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;

次に、 &lt;a href=&#34;https://obsproject.com/forum/resources/obs-virtualcam.949/&#34;&gt;https://obsproject.com/forum/resources/obs-virtualcam.949/&lt;/a&gt; から&lt;code&gt;OBS Virtualcam&lt;/code&gt;をインストールします。画面右の&lt;code&gt;Go to download&lt;/code&gt;をクリックすることでインストーラーがダウンロードできます。















&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./obs_virtualcam_installation.png&#34; &gt;


  &lt;img src=&#34;./obs_virtualcam_installation.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;バ美肉する&#34;&gt;バ美肉する&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://facevtuber.com/&#34;&gt;https://facevtuber.com/&lt;/a&gt;にアクセスします。&lt;br&gt;
&lt;code&gt;Start&lt;/code&gt;をクリックします。&lt;br&gt;
一回目のみ、カメラの使用を許可してください。&lt;br&gt;
&lt;code&gt;Start&lt;/code&gt;の上にカメラ映像が表示されるまで（20秒くらい）待ってください。&lt;br&gt;
&lt;code&gt;Set&lt;/code&gt;をクリックします。&lt;br&gt;
&lt;code&gt;popWindow&lt;/code&gt;をクリックします。&lt;br&gt;
子ウインドウが開き映像が表示されます。&lt;/p&gt;
&lt;h2 id=&#34;obs-studioにバ美肉した映像を表示&#34;&gt;OBS Studioにバ美肉した映像を表示&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;OBS Studio&lt;/code&gt;を起動します。&lt;br&gt;
&lt;code&gt;ソース&lt;/code&gt;の項目の&lt;code&gt;+&lt;/code&gt;をクリックし、&lt;code&gt;ウインドウキャプチャ&lt;/code&gt;を選択します。&lt;br&gt;















&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./obs_studio_source.png&#34; &gt;


  &lt;img src=&#34;./obs_studio_source.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;code&gt;ソースを作成/選択&lt;/code&gt;ダイアログで、&lt;code&gt;OK&lt;/code&gt;をクリックします。&lt;br&gt;
&lt;code&gt;&#39;ウインドウキャプチャ&#39;のプロパティ&lt;/code&gt;ダイアログで、&lt;code&gt;ウインドウ&lt;/code&gt;のドロップダウンリストから子ウインドウの名前（Chromeなら&lt;code&gt;[chrome.exe]:無題-Google Chrome&lt;/code&gt;）を選択し&lt;code&gt;OK&lt;/code&gt;をクリックします。&lt;/p&gt;
&lt;h2 id=&#34;仮想カメラ起動&#34;&gt;仮想カメラ起動&lt;/h2&gt;
&lt;p&gt;左上の&lt;code&gt;ツール&lt;/code&gt;メニューから&lt;code&gt;VirtualCam&lt;/code&gt;を選択します。&lt;br&gt;
&lt;code&gt;VirtucalCam&lt;/code&gt;ダイアログで、&lt;code&gt;Start&lt;/code&gt;をクリックすることで仮想カメラに映像が出力されます。
&lt;code&gt;Stop&lt;/code&gt;をクリックすれば映像出力が止まります。















&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./obs_virtualcam_dialog.png&#34; &gt;


  &lt;img src=&#34;./obs_virtualcam_dialog.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;ビデオ会議に参加&#34;&gt;ビデオ会議に参加&lt;/h2&gt;
&lt;p&gt;カメラとして&lt;code&gt;OBS-Camera&lt;/code&gt;を選択すれば、バ美肉した姿でビデオ会議に参加できます。&lt;/p&gt;
&lt;h1 id=&#34;tipsfacevtubercom&#34;&gt;Tips(facevtuber.com)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;モデルを変更したい場合
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;ファイルを選択&amp;quot;をクリックし、MMDモデル入りzipファイルを選択&lt;/li&gt;
&lt;li&gt;権利表記を確認するダイアログが複数表示されるので、ダイアログが表示されなくなるまで&lt;code&gt;OK&lt;/code&gt;を押し続ける&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;zoomでバーチャル背景を使用する場合は背景色で&lt;code&gt;Green&lt;/code&gt;を選択すると、グリーンバックの代わりになります。&lt;/li&gt;
&lt;li&gt;facevtuber.comのページや子ウインドウを最小化すると映像が止まります。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;moveLeftHandByMouse&lt;/code&gt;、&lt;code&gt;moveRightHandByMouse&lt;/code&gt;にチェックが入っているとマウスの動きに合わせて手が動きます。手の位置がおかしくなったら&lt;code&gt;ResetPose&lt;/code&gt;をクリックしてください。&lt;/li&gt;
&lt;li&gt;子ウインドウはできるだけ画面下に移動させると、マウスカーソルが映り込むことがなくなります。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考サイト&#34;&gt;参考サイト&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://note.com/d_v_osorezan/n/nd9130e2012dd&#34;&gt;https://note.com/d_v_osorezan/n/nd9130e2012dd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tktktktk/items/a024b9df15efe7b36ad6&#34;&gt;https://qiita.com/tktktktk/items/a024b9df15efe7b36ad6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/585371.html&#34;&gt;https://forest.watch.impress.co.jp/docs/news/585371.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>(個人的)プログラマーなら使えたほうがいいファイル形式</title>
      <link>https://blog.opuappnavi.com/post/file-format-should-able-use/</link>
      <pubDate>Tue, 05 May 2020 21:46:39 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/file-format-should-able-use/</guid>
      <description>&lt;p&gt;プログラミング入門講座を学び、UnityやAndroid、Webなどの開発を始めた脱プログラミング初心者に向けた記事です。何を開発するかに関わらず、内容を理解出来たり自分で書けたりすれば役にたつと思うファイル形式を3つ紹介します。&lt;/p&gt;
&lt;h1 id=&#34;markdown&#34;&gt;Markdown&lt;/h1&gt;
&lt;p&gt;Markdown（マークダウン）は、文書を記述するための軽量マークアップ言語のひとつです。
ソフトウェアのインストールし使用する前の注意事項などを記述した&lt;code&gt;Readme&lt;/code&gt;ファイルなどに用いられています。また、このサイトの記事も全てMarkdownファイルです。&lt;/p&gt;
&lt;h1 id=&#34;json&#34;&gt;JSON&lt;/h1&gt;
&lt;p&gt;JSONは&lt;code&gt;Javascript Object Notation&lt;/code&gt;の略で、データを記述するための言語です。&lt;/p&gt;
&lt;h2 id=&#34;unity&#34;&gt;Unity&lt;/h2&gt;
&lt;p&gt;Unityでは&lt;code&gt;JsonUtility&lt;/code&gt;クラスを使用することで、オブジェクトをJSON形式の文字列に変換したり、逆にJSON形式の文字列からオブジェクトを生成することができます。といっても、オブジェクト指向に詳しくない人にはよく分からない説明だったと思います。簡単に言えば、JSONファイルからキャラクターのステータスなどのデータを読み込むことがとても簡単にできます。&lt;/p&gt;
&lt;h2 id=&#34;web-api&#34;&gt;Web API&lt;/h2&gt;
&lt;p&gt;Web APIとは、ものすごく乱暴に言えば、HTTP通信によって利用できる便利機能です。様々な種類のWebAPIがあり、WebAPIごとに特定のURLにアクセスすることで様々な機能を利用することができます。例えば、天気予報や鉄道の路線情報といったデータを取得したり、AIを用いた画像認識を利用したりすることが可能です。WebAPIを利用した結果は、JSON形式やXML形式の文字列で取得できることが多いです。&lt;/p&gt;
&lt;h1 id=&#34;xml&#34;&gt;XML&lt;/h1&gt;
&lt;p&gt;XMLは&lt;code&gt;Extensible Markup Language&lt;/code&gt;の略で、文書やデータの意味や構造を記述するためのマークアップ言語の一つです。マークアップ言語とは、「タグ」と呼ばれる特定の文字列で地の文に情報の意味や構造、装飾などを埋め込んでいく言語です。&lt;/p&gt;
&lt;h2 id=&#34;web-api-1&#34;&gt;Web API&lt;/h2&gt;
&lt;p&gt;WebAPIを利用した結果は、JSON形式やXML形式の文字列で取得できることが多いです。詳しくは




    
    
        
    


&lt;a href=&#34;#JSON&#34;&gt;JSON&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;h2 id=&#34;android&#34;&gt;Android&lt;/h2&gt;
&lt;p&gt;Android StudioでのAndroidアプリ開発では、UIのレイアウトやスタイル、多言語対応の文字列などに関してxmlで記述されています。&lt;/p&gt;
&lt;h2 id=&#34;unity-1&#34;&gt;Unity&lt;/h2&gt;
&lt;p&gt;Unity開発でも将来的にXMLを使うことになるかもしれません。&lt;br&gt;
Unity 2019から&lt;code&gt;UI Elements&lt;/code&gt;という新しいUIシステムが使えます。&lt;code&gt;UI Elements&lt;/code&gt;はwebに近い設計で、UIをレイアウト、スタイル、ロジックに分けて記述します。XMLをベースとしたUXMLファイルを記述することでレイアウトをカスタマイズすることができます。
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;UI Builder&lt;/code&gt;(preview版)を使えば、マウスクリックやドラッグ＆ドロップなどでレイアウトやスタイルをカスタマイズできます。
  &lt;/div&gt;
&lt;/div&gt;

&lt;code&gt;UI Elements&lt;/code&gt;は現状、エディタ拡張のUI(現在のIMGUI)にしか対応していませんが、将来的にはゲーム内UI(現在のuGUI)にも対応する予定とのことです。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/Markdown&#34;&gt;https://ja.wikipedia.org/wiki/Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%AA%E3%83%BC%E3%83%89%E3%83%9F%E3%83%BC&#34;&gt;https://ja.wikipedia.org/wiki/%E3%83%AA%E3%83%BC%E3%83%89%E3%83%9F%E3%83%BC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/JavaScript_Object_Notation&#34;&gt;https://ja.wikipedia.org/wiki/JavaScript_Object_Notation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/mikan3rd/items/ba4737023f08bb2ca161&#34;&gt;https://qiita.com/mikan3rd/items/ba4737023f08bb2ca161&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/NagaokaKenichi/items/df4c8455ab527aeacf02&#34;&gt;https://qiita.com/NagaokaKenichi/items/df4c8455ab527aeacf02&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://itpropartners.com/blog/8546/&#34;&gt;https://itpropartners.com/blog/8546/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E8%A8%98%E8%BF%B0%E8%A8%80%E8%AA%9E&#34;&gt;https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E8%A8%98%E8%BF%B0%E8%A8%80%E8%AA%9E&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://e-words.jp/w/XML.html&#34;&gt;http://e-words.jp/w/XML.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.unity3d.com/jp/2019/04/23/whats-new-with-uielements-in-2019-1/&#34;&gt;https://blogs.unity3d.com/jp/2019/04/23/whats-new-with-uielements-in-2019-1/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5UTiLOIU8TE&#34;&gt;https://www.youtube.com/watch?v=5UTiLOIU8TE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Unity製ゲームをWebで共有する方法</title>
      <link>https://blog.opuappnavi.com/post/unity-github-pages/</link>
      <pubDate>Mon, 04 May 2020 20:17:22 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/unity-github-pages/</guid>
      <description>&lt;p&gt;Gitに詳しくない人向けに書いています。Gitに詳しい人は&lt;code&gt;詳しくない人向け&lt;/code&gt;の部分は読まなくて大丈夫です。&lt;/p&gt;
&lt;h1 id=&#34;必要なもの&#34;&gt;必要なもの&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Unity&lt;/li&gt;
&lt;li&gt;GitHub アカウント&lt;/li&gt;
&lt;li&gt;Git：
&lt;a href=&#34;https://git-scm.com/downloads&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ここ&lt;/a&gt;からダウンロードできます&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-unityでゲームをビルドする&#34;&gt;1. Unityでゲームをビルドする&lt;/h1&gt;
&lt;h2 id=&#34;11-build-settingsを開く&#34;&gt;1.1 Build Settingsを開く&lt;/h2&gt;
&lt;p&gt;左上のメニューで&lt;code&gt;File&lt;/code&gt;&amp;gt;&lt;code&gt;Build Settings&lt;/code&gt;をクリックしてください。&lt;/p&gt;
&lt;h2 id=&#34;12-プラットフォームの変更&#34;&gt;1.2 プラットフォームの変更&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;WebGL&lt;/code&gt;を選択し、&lt;code&gt;Switch Platform&lt;/code&gt;をクリックしてください。&lt;/p&gt;
&lt;h2 id=&#34;13-ゲームをビルド&#34;&gt;1.3 ゲームをビルド&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Build&lt;/code&gt;をクリックしてください。ビルド先はどこでも構いません。私は&lt;code&gt;(プロジェクト名)/Builds/WebGL&lt;/code&gt;を選択しています。&lt;/p&gt;
&lt;h1 id=&#34;2-githubにアップロード&#34;&gt;2. GitHubにアップロード&lt;/h1&gt;
&lt;p&gt;ビルドの結果、以下の3つのファイルが生成されます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Build&lt;/code&gt;フォルダ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TemplateData&lt;/code&gt;フォルダ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index.html&lt;/code&gt;ファイル&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらのファイルをGitHubにアップロードします。&lt;br&gt;
&lt;details&gt;
    &lt;summary&gt;詳しくない人向け&lt;/summary&gt;
    &lt;h2 id=&#34;21-githubにサインイン&#34;&gt;2.1 GitHubにサインイン&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;にアクセスし、サインインしてください。&lt;/p&gt;
&lt;h2 id=&#34;22-新しいリポジトリの作成&#34;&gt;2.2 新しいリポジトリの作成&lt;/h2&gt;
&lt;figure class=&#34;left&#34; &gt;
&lt;p&gt;&lt;a data-fancybox=&#34;&#34; href=&#34;./GitHub_New_Repository.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./GitHub_New_Repository.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Repositories&lt;/code&gt;の右にある&lt;code&gt;New&lt;/code&gt;をクリックしてください。&lt;/p&gt;
&lt;figure class=&#34;left&#34; &gt;
&lt;p&gt;&lt;a data-fancybox=&#34;&#34; href=&#34;./GitHub_New_Repository2.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./GitHub_New_Repository2.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Repository name&lt;/code&gt;は任意の名前で構いませんが、ゲームをプレイする人も見ることができるので注意してください。&lt;br&gt;
&lt;code&gt;Public&lt;/code&gt;と&lt;code&gt;Private&lt;/code&gt;を選択できますが、&lt;code&gt;Public&lt;/code&gt;を選択してください。&lt;br&gt;
&lt;code&gt;Create repository&lt;/code&gt;を選択してリポジトリを作成してください。&lt;/p&gt;
&lt;figure class=&#34;left&#34; &gt;
&lt;p&gt;&lt;a data-fancybox=&#34;&#34; href=&#34;./GitHub_New_Repository3.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./GitHub_New_Repository3.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/figure&gt;
&lt;p&gt;赤い枠で囲まれたボタンを押してください。左のURLがクリップボードにコピーされます。&lt;/p&gt;
&lt;h2 id=&#34;23-ファイルのアップロード&#34;&gt;2.3 ファイルのアップロード&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Git Bash&lt;/code&gt;を起動してください。
起動時のフォルダは&lt;code&gt;C:\Users\(ユーザー名)&lt;/code&gt;なので、ビルド結果があるフォルダに移動してください。&lt;code&gt;cd (フォルダ名)&lt;/code&gt;コマンドで移動できます。
移動したら、以下のコマンドを一行ずつ実行してください。&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;code&gt;Git Bash&lt;/code&gt;では&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;Insert&lt;/code&gt;で貼り付けができます
  &lt;/div&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;git init
git add .
git commit -m &amp;quot;Initial Commit&amp;quot;
git remote add origin (先ほどコピーしたURL)
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/details&gt;
&lt;/p&gt;
&lt;h1 id=&#34;3-webにゲームを公開&#34;&gt;3. Webにゲームを公開&lt;/h1&gt;
&lt;p&gt;














&lt;figure class=&#34;left&#34; &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./GitHub_Pages.png&#34; &gt;


  &lt;img src=&#34;./GitHub_Pages.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;code&gt;Settings&lt;/code&gt;をクリックしてください。















&lt;figure class=&#34;left&#34; &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./GitHub_Pages2.png&#34; &gt;


  &lt;img src=&#34;./GitHub_Pages2.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;

スクロールし、&lt;code&gt;GitHub Pages&lt;/code&gt;の&lt;code&gt;Source&lt;/code&gt;の下にあるドロップダウンリストで&lt;code&gt;master branch&lt;/code&gt;を選択してください。&lt;/p&gt;
&lt;h1 id=&#34;公開したゲームをプレイ&#34;&gt;公開したゲームをプレイ&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;https://(ユーザー名).github.io/(リポジトリ名)/&lt;/code&gt;というURLにアクセスすると、作ったゲームをプレイすることができます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub for Unityの紹介</title>
      <link>https://blog.opuappnavi.com/post/github-for-unity/</link>
      <pubDate>Thu, 30 Apr 2020 20:18:25 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/github-for-unity/</guid>
      <description>&lt;h1 id=&#34;使用したunityのバージョン&#34;&gt;使用したUnityのバージョン&lt;/h1&gt;
&lt;p&gt;Unity 2018.4.22f1&lt;/p&gt;
&lt;h1 id=&#34;導入方法&#34;&gt;導入方法&lt;/h1&gt;
&lt;p&gt;プロジェクトごとに行う必要があります。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Asset Storeから「GitHub for Unity」をインポート&lt;/li&gt;
&lt;li&gt;メニューで&lt;code&gt;Window&lt;/code&gt;&amp;gt;&lt;code&gt;GitHub&lt;/code&gt;を選択&lt;br&gt;















&lt;figure class=&#34;left&#34; &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./GitHub_Tab_Menu.png&#34; &gt;


  &lt;img src=&#34;./GitHub_Tab_Menu.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;

GitHubタブが開きます。















&lt;figure class=&#34;left&#34; &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./GitHub_Tab.png&#34; &gt;


  &lt;img src=&#34;./GitHub_Tab.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;(初回のみ)&lt;/strong&gt; &lt;code&gt;Sign In&lt;/code&gt;をクリック&lt;br&gt;















&lt;figure class=&#34;left&#34; &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./GitHub_SignIn.png&#34; &gt;


  &lt;img src=&#34;./GitHub_SignIn.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;

ダイアログが表示されるので、GitHubアカウントでサインインしてください。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Initialize a git repository for this project&lt;/code&gt;をクリック&lt;br&gt;
少し待つと、タブの中身が変化します。&lt;br&gt;















&lt;figure class=&#34;left&#34; &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./GitHub_AfterGitInit.png&#34; &gt;


  &lt;img src=&#34;./GitHub_AfterGitInit.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;使い方&#34;&gt;使い方&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Changes&lt;/code&gt;を選択してください。前回保存した状態から変更があったファイルが一覧表示されます。















&lt;figure class=&#34;left&#34; &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;./GitHub_Changes.png&#34; &gt;


  &lt;img src=&#34;./GitHub_Changes.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;変更を保存する&#34;&gt;変更を保存する&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;リストから保存したい変更をチェックマークをクリックして選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Commit summary&lt;/code&gt;に変更内容を記述&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Commit description&lt;/code&gt;に変更内容の詳細を記述（任意）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Commit to [master]&lt;/code&gt;をクリック&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;変更内容を確認する&#34;&gt;変更内容を確認する&lt;/h2&gt;
&lt;p&gt;前回保存した状態と現在の状態との差分を見ることができます。
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    差分を比較するソフトウェア(&lt;a href=&#34;https://forest.watch.impress.co.jp/library/software/winmerge/&#34;&gt;WinMerge&lt;/a&gt;など)をインストールする必要があります。
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;リストから差分を見たいファイルを右クリック&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Show Diff&lt;/code&gt;をクリック&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;変更を取り消す&#34;&gt;変更を取り消す&lt;/h3&gt;
&lt;p&gt;加えた変更を無かったことにして、前回保存した状態に戻すことができます。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;リストから変更を取り消したいファイルを右クリック&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Discard&lt;/code&gt;をクリック&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;その他&#34;&gt;その他&lt;/h1&gt;
&lt;h2 id=&#34;比較ソフトウェアを変更したい&#34;&gt;比較ソフトウェアを変更したい&lt;/h2&gt;
&lt;p&gt;比較ソフトウェアが複数インストールされていて、変更したい場合&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;UnityのPreferenceを開く&lt;/li&gt;
&lt;li&gt;&lt;code&gt;External Tools&lt;/code&gt;を選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Revision Controll Diff/Merge&lt;/code&gt;でソフトウェアを選択&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;details&gt;
    &lt;summary&gt;GitHubやGitに詳しい人向け&lt;/summary&gt;
    &lt;h2 id=&#34;revert&#34;&gt;Revert&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;History&lt;/code&gt;を選択&lt;/li&gt;
&lt;li&gt;コミットを右クリック&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Revert&lt;/code&gt;をクリック&lt;/li&gt;
&lt;/ol&gt;

&lt;/details&gt;

</description>
    </item>
    
    <item>
      <title>Truck Quiz</title>
      <link>https://blog.opuappnavi.com/post/truck-quiz/</link>
      <pubDate>Tue, 28 Apr 2020 15:07:58 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/truck-quiz/</guid>
      <description>&lt;p&gt;Unityについて勉強するため春休みの間に作成した、&amp;ldquo;Truck Quiz&amp;quot;を紹介します。&lt;/p&gt;
&lt;h1 id=&#34;ゲームの説明&#34;&gt;ゲームの説明&lt;/h1&gt;
&lt;p&gt;某有名クイズ番組のクイズを模したゲームです。
2択問題が5問出題されます。間違えてた時点でゲームオーバーです。
キーボード操作、タッチ操作の両方に対応しています。&lt;/p&gt;







&lt;div id=&#34;unity_webgl_0_1&#34; style=&#34;width: 100%; margin: 15px 0; background: white; border-radius: 15px;&#34;&gt;
  &lt;div style=&#34;position: relative;&#34;&gt;
    &lt;div id=&#34;unity_webgl_0_2&#34; style=&#34;height: 0;&#34;&gt;
      &lt;iframe id=&#34;unity_webgl_0_3&#34; allowfullscreen&gt;&lt;/iframe&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
let w =  980 ; 
let h =  700 ; 
let url = &#34;https://juris710.github.io/TruckQuizSample/&#34;; 
document.getElementById(&#34;unity_webgl_0_2&#34;).style.paddingBottom = 100 * h / w + &#34;%&#34;;
document.getElementById(&#34;unity_webgl_0_3&#34;).src = url;
let set_width = function() {
  let client_w = document.getElementById(&#34;unity_webgl_0_2&#34;).clientWidth;
  let per = client_w / w;
  let rev = 100 / per;
  let iframe = document.getElementById(&#34;unity_webgl_0_3&#34;);
  iframe.height = rev + &#34;%&#34;;
  iframe.width = rev + &#34;%&#34;;
  iframe.style = &#34;position: absolute; top: 0; left: 0;  transform:scale(&#34; + per + &#34;);-o-transform:scale(&#34; + per + &#34;);-webkit-transform:scale(&#34; + per + &#34;);-moz-transform:scale(&#34; + per + &#34;);-ms-transform:scale(&#34; + per + &#34;);transform-origin:top left; border: 0;&#34;
}
set_width();
window.onresize = function(){ set_width(); };
&lt;/script&gt;
&lt;h1 id=&#34;工夫した点&#34;&gt;工夫した点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;クイズの問題やゲーム設定をJSONファイルで管理&lt;/li&gt;
&lt;li&gt;画像のアスペクト比を維持するように&lt;/li&gt;
&lt;li&gt;解答の取り消し、問題の差し替え機能実装&lt;/li&gt;
&lt;li&gt;ゲーム内の文章ほぼ全てにフリガナを付ける（フリガナ表示・非表示切り替え可能）&lt;/li&gt;
&lt;li&gt;問題の解説に文章だけでなく選択肢の画像も利用できるように&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;実装の概説&#34;&gt;実装の概説&lt;/h1&gt;
&lt;details&gt;
    &lt;summary&gt;Unityに詳しい人向け&lt;/summary&gt;
    &amp;ldquo;Truck Quiz&amp;quot;を主に動かしているのは&lt;code&gt;StateMachineBehaviour&lt;/code&gt;です。&lt;code&gt;StateMachineBehaviour&lt;/code&gt;について軽く説明すると、アニメーションの開始時、終了時、Update時(MonoBehaviourのUpdate関数同様、アニメーションの再生中定期的に呼ばれる)に任意の処理を挟むことのできるクラスです。&lt;br&gt;
トロッコとUIで2つのAnimatorがあり、「選択肢を選んだアニメーション」が終了したら「トロッコが曲がるアニメーション」を開始する、みたいな処理をGameManagerクラス内で実装しています。
&lt;/details&gt;

&lt;h1 id=&#34;改良予定&#34;&gt;改良予定&lt;/h1&gt;
&lt;details&gt;
    &lt;summary&gt;Unityに詳しい人向け&lt;/summary&gt;
    &lt;h2 id=&#34;assetbundleを使用した画像管理&#34;&gt;AssetBundleを使用した画像管理&lt;/h2&gt;
&lt;p&gt;現状Resourceクラスで問題の画像を管理していますが、公式が「Resourceクラスは使うな」と言っているので、AssetBundleへの切替を検討しています&lt;/p&gt;
&lt;h2 id=&#34;unityバージョンのアップグレード&#34;&gt;Unityバージョンのアップグレード&lt;/h2&gt;
&lt;p&gt;現在使用しているUnityのバージョンは2018ですが、2018ではpreview版である&lt;code&gt;Input System&lt;/code&gt;を使用したいため、2019へのアップグレードを検討しています。&lt;/p&gt;
&lt;h2 id=&#34;デザイン面の改善&#34;&gt;デザイン面の改善&lt;/h2&gt;
&lt;p&gt;UIデザインの改善を検討しています。&lt;/p&gt;

&lt;/details&gt;

</description>
    </item>
    
    <item>
      <title>府大バーチャル学祭</title>
      <link>https://blog.opuappnavi.com/project/opu-virtual-festival-2020/</link>
      <pubDate>Tue, 28 Apr 2020 00:04:07 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/project/opu-virtual-festival-2020/</guid>
      <description>&lt;p&gt;新型コロナウイルス感染拡大により、2020年5月30日、31日に開催予定だった第59回友好祭が中止となりました。中止となった友好祭に代わるイベントとして、コンピュータハウスランダムさんが提案されたのが、非公式オンラインイベント「府大バーチャル学祭」です。





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://blog.opuappnavi.com/project/opu-virtual-festival-2020/festival-image_hu2622289715c90b6ab17c1ba3b3cabf34_184214_2000x2000_fit_q90_lanczos.jpg&#34; &gt;


  &lt;img data-src=&#34;https://blog.opuappnavi.com/project/opu-virtual-festival-2020/festival-image_hu2622289715c90b6ab17c1ba3b3cabf34_184214_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1707&#34; height=&#34;960&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;


&lt;div style=&#34;display: flex; justify-content: space-around;&#34;&gt;
  &lt;a href=&#34;https://ch-random.net/post/167&#34;&gt;一覧ページ&lt;/a&gt;
  &lt;a href=&#34;mailto:computer.house.random@gmail.com&#34;&gt;お問い合わせ&lt;/a&gt;
&lt;/div&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;【拡散希望】&lt;br&gt;大阪府立大学の有志イベント&lt;br&gt;府大バーチャル学祭のPV、デザインを担当させていただきました。&lt;br&gt;&lt;br&gt;各団体のイベント内容などの情報は &lt;a href=&#34;https://twitter.com/hashtag/%E5%BA%9C%E5%A4%A7%E3%83%90%E3%83%BC%E3%83%81%E3%83%A3%E3%83%AB%E5%AD%A6%E7%A5%AD?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#府大バーチャル学祭&lt;/a&gt; に追加していきます。&lt;a href=&#34;https://twitter.com/hashtag/%E6%98%A5%E3%81%8B%E3%82%89%E5%BA%9C%E5%A4%A7?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#春から府大&lt;/a&gt;　&lt;a href=&#34;https://twitter.com/hashtag/system?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#system&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/aftereffects?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#aftereffects&lt;/a&gt; &lt;a href=&#34;https://t.co/GtVtrQV5TI&#34;&gt;pic.twitter.com/GtVtrQV5TI&lt;/a&gt;&lt;/p&gt;&amp;mdash; SYSTEM-府大のオンライン団体- (@SystemOpu) &lt;a href=&#34;https://twitter.com/SystemOpu/status/1263016918182539264?ref_src=twsrc%5Etfw&#34;&gt;May 20, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

アプリNaviの展示内容は、このサイトでのブログ記事公開と、下記特設サイトでのゲーム展示です。&lt;br&gt;

&lt;a href=&#34;http://appnavi.html.xdomain.jp/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;アプリNavi 府大バーチャル学祭特設サイト&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>記事の書き方</title>
      <link>https://blog.opuappnavi.com/post/how-to-write-an-article/</link>
      <pubDate>Tue, 28 Apr 2020 00:01:09 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/how-to-write-an-article/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;
&lt;p&gt;このサイトでの記事の書き方をまとめました。英語でも構わない場合は
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;公式ドキュメント&lt;/a&gt;も参照してください。&lt;/p&gt;
&lt;h1 id=&#34;markdown記法&#34;&gt;Markdown記法&lt;/h1&gt;
&lt;p&gt;全ての記事はMarkdown記法で書く必要があります。書き方については
&lt;a href=&#34;https://qiita.com/kamorits/items/6f342da395ad57468ae3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;このサイト&lt;/a&gt;を参照してください。&lt;/p&gt;
&lt;h2 id=&#34;画像を挿入する場合&#34;&gt;画像を挿入する場合&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;![&lt;span class=&#34;code-em&#34;&gt;代替テキスト&lt;/span&gt;](&lt;span class=&#34;code-em&#34;&gt;./画像名&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    「画像名」には拡張子も含めてください
  &lt;/div&gt;
&lt;/div&gt;

画像のサイズを変えたい、または画像を左寄せ・右寄せしたい場合は下の




    


    

&lt;a href=&#34;#%E7%94%BB%E5%83%8F%E3%81%AE%E6%8C%BF%E5%85%A5&#34;&gt;Shortcode&lt;/a&gt;を参照してください&lt;/p&gt;
&lt;h1 id=&#34;shortcodes&#34;&gt;Shortcodes&lt;/h1&gt;
&lt;p&gt;ShortcodesとはHugo独自の機能で、Markdownファイルに書くことができるスニペットです。&lt;/p&gt;
&lt;h2 id=&#34;画像の挿入&#34;&gt;画像の挿入&lt;/h2&gt;
&lt;p&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; figure src=&#34;&lt;span class=&#34;code-em&#34;&gt;./画像名&lt;/span&gt;&#34; title=&#34;&lt;span class=&#34;code-em&#34;&gt;代替テキスト&lt;/span&gt;&#34; &gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    「画像名」には拡張子も含めてください
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;画像の左寄せ右寄せ&#34;&gt;画像の左寄せ、右寄せ&lt;/h3&gt;
&lt;p&gt;&lt;details&gt;
    &lt;summary&gt;左寄せ&lt;/summary&gt;
    &lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; figure src=&#34;&lt;span class=&#34;code-em&#34;&gt;./画像名&lt;/span&gt;&#34; title=&#34;&lt;span class=&#34;code-em&#34;&gt;代替テキスト&lt;/span&gt;&#34;  class=&#34;left&#34; &gt;}}&lt;/code&gt;&lt;/pre&gt;

&lt;/details&gt;

&lt;details&gt;
    &lt;summary&gt;右寄せ&lt;/summary&gt;
    &lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; figure src=&#34;&lt;span class=&#34;code-em&#34;&gt;./画像名&lt;/span&gt;&#34; title=&#34;&lt;span class=&#34;code-em&#34;&gt;代替テキスト&lt;/span&gt;&#34;  class=&#34;right&#34; &gt;}}&lt;/code&gt;&lt;/pre&gt;

&lt;/details&gt;

&lt;details&gt;
    &lt;summary&gt;左寄せ(float)&lt;/summary&gt;
    &lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; figure src=&#34;&lt;span class=&#34;code-em&#34;&gt;./画像名&lt;/span&gt;&#34; title=&#34;&lt;span class=&#34;code-em&#34;&gt;代替テキスト&lt;/span&gt;&#34;  class=&#34;float-left&#34; &gt;}}&lt;/code&gt;&lt;/pre&gt;

&lt;/details&gt;

&lt;details&gt;
    &lt;summary&gt;右寄せ(float)&lt;/summary&gt;
    &lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; figure src=&#34;&lt;span class=&#34;code-em&#34;&gt;./画像名&lt;/span&gt;&#34; title=&#34;&lt;span class=&#34;code-em&#34;&gt;代替テキスト&lt;/span&gt;&#34;  class=&#34;float-right&#34; &gt;}}&lt;/code&gt;&lt;/pre&gt;

&lt;/details&gt;

他にも、画像の幅・高さなどをカスタムすることができます。詳しくは
&lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#figure&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;公式ドキュメント&lt;/a&gt;  を参照してください。&lt;/p&gt;
&lt;h2 id=&#34;youtube動画埋め込み&#34;&gt;Youtube動画埋め込み&lt;/h2&gt;
&lt;p&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; youtube &lt;span class=&#34;code-em&#34;&gt;動画のID&lt;/span&gt; &gt;}}&lt;/code&gt;&lt;/pre&gt; 
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    YoutubeのURLは「https://www.youtube.com/watch?v=動画のID」という形式になっています
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;unity-webglの埋め込み&#34;&gt;Unity WebGLの埋め込み&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://ch-random.net/post/93/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ランダムさんの記事&lt;/a&gt;の内容を少し改変した自作Shortcodeです。Unity WebGLのゲームをページ内でプレイすることができます。



&lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; unity src=&#34;&lt;span class=&#34;code-em&#34;&gt;URL&lt;/span&gt;&#34;　&gt;}}&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h2 id=&#34;ツイートの埋め込み&#34;&gt;ツイートの埋め込み&lt;/h2&gt;
&lt;p&gt;


&lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; tweet &lt;span class=&#34;code-em&#34;&gt;ツイートID&lt;/span&gt; &gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    ツイートのURLは「https://twitter.com/&amp;hellip;/status/ツイートID」という形式になっています。
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;折りたたみ&#34;&gt;折りたたみ&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&amp;lt; collapsable &#34;折りたたまれている時に表示する文字列&#34; &amp;gt;}}
  展開された時に表示する文章(複数行可)
{{&amp;lt; /collapsable &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;自作Shortcodeです。折りたたまれている時、展開された時ともに、Markdown記法を用いた文章が使えます。例えば&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&amp;lt; collapsable &#34;`Hello`&#34; &amp;gt;}}
  foo
  *bar*
  &gt; Hello, World!
{{&amp;lt; /collapsable &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;のように書けば、下のように表示されます。
&lt;details&gt;
    &lt;summary&gt;&lt;code&gt;Hello&lt;/code&gt;&lt;/summary&gt;
    &lt;p&gt;foo&lt;br&gt;
&lt;em&gt;bar&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hello, World!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/details&gt;
&lt;/p&gt;
&lt;h2 id=&#34;ページへのリンクカード表示&#34;&gt;ページへのリンク（カード表示）&lt;/h2&gt;
&lt;p&gt;自作Shortcodeです。



&lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; page &#34;&lt;span class=&#34;code-em&#34;&gt;表示したいページのパス(ホームからの相対パス)&lt;/span&gt;&#34; &gt;}}&lt;/code&gt;&lt;/pre&gt;
例えば&lt;code&gt;{{&amp;lt; page &amp;quot;project/opu-virtual-festival-2020&amp;quot; &amp;gt;}}&lt;/code&gt;と記述すると、下のように表示されます。









    









  


&lt;div class=&#34;card-simple&#34;&gt;

  
    


&lt;div class=&#34;article-metadata&#34;&gt;

  
  
  
  
  &lt;div&gt;
    

  
  &lt;span&gt;&lt;a href=&#34;https://blog.opuappnavi.com/author/juris710/&#34;&gt;Juris710&lt;/a&gt;&lt;/span&gt;, &lt;span&gt;&lt;a href=&#34;https://blog.opuappnavi.com/author/nobu/&#34;&gt;Nobu&lt;/a&gt;&lt;/span&gt;, &lt;span&gt;&lt;a href=&#34;https://blog.opuappnavi.com/author/%E3%83%A4%E3%83%9E%E3%82%AF%E3%83%81/&#34;&gt;ヤマグチ&lt;/a&gt;&lt;/span&gt;
  &lt;/div&gt;
  
  

  
  &lt;span class=&#34;article-date&#34;&gt;
    
    
      
          最終更新
      
    
    2020/05/30
  &lt;/span&gt;
  

  

  

  
  
  

  
  

&lt;/div&gt;

  

  
  
  

  &lt;h3 class=&#34;article-title mb-1 mt-3&#34;&gt;
    &lt;a href=&#34;https://blog.opuappnavi.com/project/opu-virtual-festival-2020/&#34;&gt;府大バーチャル学祭&lt;/a&gt;
  &lt;/h3&gt;

  
  &lt;div class=&#34;article-style&#34;&gt;
    &lt;p&gt;OPU Virtual Festival&lt;/p&gt;
  &lt;/div&gt;
  

  

&lt;/div&gt;

 &lt;/p&gt;
&lt;h2 id=&#34;ページ内リンク&#34;&gt;ページ内リンク&lt;/h2&gt;
&lt;p&gt;&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    ページ内リンク&lt;code&gt;{{&amp;lt;jump &amp;quot;見出し名&amp;quot; &amp;quot;リンクテキスト&amp;quot;&amp;gt;}}&lt;/code&gt;は非推奨になりました。&lt;br&gt;
Markdown標準の&lt;code&gt;[見出し名](#リンクテキスト)&lt;/code&gt;を使用してください。
  &lt;/div&gt;
&lt;/div&gt;

クリックすると同じページ内の見出しに飛ぶことができるリンクを挿入する自作Shortcodeです。
Markdown記法だけでも書けるのですが、見出し付近がナビゲーションバーに隠れてしまうバグがあるため、それを解消しています。



&lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; jump &#34;&lt;span class=&#34;code-em&#34;&gt;見出し名&lt;/span&gt;&#34; &#34;&lt;span class=&#34;code-em&#34;&gt;リンクテキスト&lt;/span&gt;&#34; &gt;}}&lt;/code&gt;&lt;/pre&gt;
&lt;code&gt;&amp;quot;リンクテキスト&amp;quot;&lt;/code&gt;は省略可能です。&lt;br&gt;
例えば&lt;code&gt;{{&amp;lt;jump &amp;quot;折りたたみ&amp;quot;&amp;gt;}}&lt;/code&gt;と書くと




    
    


    

&lt;a href=&#34;#%E6%8A%98%E3%82%8A%E3%81%9F%E3%81%9F%E3%81%BF&#34;&gt;折りたたみ&lt;/a&gt;のようなリンクが作れます。&lt;/p&gt;
&lt;h1 id=&#34;その他&#34;&gt;その他&lt;/h1&gt;
&lt;h2 id=&#34;数式&#34;&gt;数式&lt;/h2&gt;
&lt;p&gt;$\LaTeX$ 記法を用いることで数式を表示することができます。数式は&lt;code&gt;$$&lt;/code&gt;で囲む必要があります。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$$ F=G\frac{Mm}{r^2} $$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下のように表示されます。
$$ F=G\frac{Mm}{r^2} $$
&lt;code&gt;$$&lt;/code&gt;の代わりに&lt;code&gt;$&lt;/code&gt;で囲むと $ F=G\frac{Mm}{r^2} $ のようにインライン表示できます。&lt;/p&gt;
&lt;h2 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h2&gt;
&lt;p&gt;mermaid記法を使った図の挿入が可能です。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-md&#34;&gt;```mermaid
graph TD;
  A--&amp;gt;B;
  A--&amp;gt;C;
  B--&amp;gt;D;
  C--&amp;gt;D;
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下のように表示されます。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD;
  A--&amp;gt;B;
  A--&amp;gt;C;
  B--&amp;gt;D;
  C--&amp;gt;D;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;スライド&#34;&gt;スライド&lt;/h2&gt;
&lt;p&gt;Markdown記法で簡易的なスライドを作成することができます。



&lt;pre&gt;&lt;code class=&#34;language-bash hljs&#34;&gt;{{&lt; slide-frame src=&#34;&lt;span class=&#34;code-em&#34;&gt;スライド名&lt;/span&gt;&#34; &gt;}}&lt;/code&gt;&lt;/pre&gt;




&lt;iframe id=test src=https://blog.opuappnavi.com/slides/test width=640 height=360 allowfullscreen=true&gt;&lt;/iframe&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>このサイトについて</title>
      <link>https://blog.opuappnavi.com/post/site-introduction/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:59 +0900</pubDate>
      <guid>https://blog.opuappnavi.com/post/site-introduction/</guid>
      <description>&lt;h1 id=&#34;サイト制作の経緯&#34;&gt;サイト制作の経緯&lt;/h1&gt;
&lt;p&gt;4月末に、コンピュータハウスランダムさんからオンライン友好祭が提案されました。









    









  


&lt;div class=&#34;card-simple&#34;&gt;

  
    


&lt;div class=&#34;article-metadata&#34;&gt;

  
  
  
  
  &lt;div&gt;
    

  
  &lt;span&gt;&lt;a href=&#34;https://blog.opuappnavi.com/author/juris710/&#34;&gt;Juris710&lt;/a&gt;&lt;/span&gt;, &lt;span&gt;&lt;a href=&#34;https://blog.opuappnavi.com/author/nobu/&#34;&gt;Nobu&lt;/a&gt;&lt;/span&gt;, &lt;span&gt;&lt;a href=&#34;https://blog.opuappnavi.com/author/%E3%83%A4%E3%83%9E%E3%82%AF%E3%83%81/&#34;&gt;ヤマグチ&lt;/a&gt;&lt;/span&gt;
  &lt;/div&gt;
  
  

  
  &lt;span class=&#34;article-date&#34;&gt;
    
    
      
          最終更新
      
    
    2020/05/30
  &lt;/span&gt;
  

  

  

  
  
  

  
  

&lt;/div&gt;

  

  
  
  

  &lt;h3 class=&#34;article-title mb-1 mt-3&#34;&gt;
    &lt;a href=&#34;https://blog.opuappnavi.com/project/opu-virtual-festival-2020/&#34;&gt;府大バーチャル学祭&lt;/a&gt;
  &lt;/h3&gt;

  
  &lt;div class=&#34;article-style&#34;&gt;
    &lt;p&gt;OPU Virtual Festival&lt;/p&gt;
  &lt;/div&gt;
  

  

&lt;/div&gt;

 
オンライン友好祭において、ゲーム展示以外にできることはないかと考え、部員がブログを書くのはどうだろうかと考えました。既に存在していた
&lt;a href=&#34;https://opuappnavi.com/#/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;アプリNaviのウェブサイト&lt;/a&gt;には
ブログ投稿機能がなかったことに加え、今まで触ったことがなかったWeb開発をしてみたかったこともありこのサイトを作成しました。&lt;br&gt;
サイトの作成にあたり、アプリNaviと同じく大阪府立大学の部活である、コンピュータハウスランダムさんの
&lt;a href=&#34;https://ch-random.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ウェブサイト&lt;/a&gt;を参考にしました。&lt;/p&gt;
&lt;h1 id=&#34;hugo&#34;&gt;Hugo&lt;/h1&gt;
&lt;p&gt;このサイトは、静的サイトジェネレーターであるHugoを用いて作成しました。htmlやcssについてある程度知っている程度でWeb関連に明るくない私でも、Hugoを使うことでとても簡単にWebサイトを作成できました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://blog.opuappnavi.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://blog.opuappnavi.com/about/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
