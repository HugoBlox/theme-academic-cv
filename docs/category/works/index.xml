<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Works | AppNaviブログ</title>
    <link>https://juris710.github.io/AppNaviBlog/category/works/</link>
      <atom:link href="https://juris710.github.io/AppNaviBlog/category/works/index.xml" rel="self" type="application/rss+xml" />
    <description>Works</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ja</language><copyright>©Juris710  2020</copyright><lastBuildDate>Tue, 28 Apr 2020 15:07:58 +0900</lastBuildDate>
    <image>
      <url>https://juris710.github.io/AppNaviBlog/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Works</title>
      <link>https://juris710.github.io/AppNaviBlog/category/works/</link>
    </image>
    
    <item>
      <title>Truck Quiz</title>
      <link>https://juris710.github.io/AppNaviBlog/post/truck-quiz/</link>
      <pubDate>Tue, 28 Apr 2020 15:07:58 +0900</pubDate>
      <guid>https://juris710.github.io/AppNaviBlog/post/truck-quiz/</guid>
      <description>&lt;p&gt;Unityについて勉強するため春休みの間に作成した、&amp;ldquo;Truck Quiz&amp;quot;を紹介します。&lt;/p&gt;
&lt;h1 id=&#34;ゲームの説明&#34;&gt;ゲームの説明&lt;/h1&gt;
&lt;p&gt;某有名クイズ番組のクイズを模したゲームです。
2択問題が5問出題されます。間違えてた時点でゲームオーバーです。
キーボード操作、タッチ操作の両方に対応しています。&lt;/p&gt;







&lt;div id=&#34;unity_webgl_0_1&#34; style=&#34;width: 100%; margin: 15px 0; background: white; border-radius: 15px;&#34;&gt;
  &lt;div style=&#34;position: relative;&#34;&gt;
    &lt;div id=&#34;unity_webgl_0_2&#34; style=&#34;height: 0;&#34;&gt;
      &lt;iframe id=&#34;unity_webgl_0_3&#34; allowfullscreen&gt;&lt;/iframe&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
let w =  980 ; 
let h =  700 ; 
let url = &#34;https://juris710.github.io/TruckQuizSample/&#34;; 
document.getElementById(&#34;unity_webgl_0_2&#34;).style.paddingBottom = 100 * h / w + &#34;%&#34;;
document.getElementById(&#34;unity_webgl_0_3&#34;).src = url;
let set_width = function() {
  let client_w = document.getElementById(&#34;unity_webgl_0_2&#34;).clientWidth;
  let per = client_w / w;
  let rev = 100 / per;
  let iframe = document.getElementById(&#34;unity_webgl_0_3&#34;);
  iframe.height = rev + &#34;%&#34;;
  iframe.width = rev + &#34;%&#34;;
  iframe.style = &#34;position: absolute; top: 0; left: 0;  transform:scale(&#34; + per + &#34;);-o-transform:scale(&#34; + per + &#34;);-webkit-transform:scale(&#34; + per + &#34;);-moz-transform:scale(&#34; + per + &#34;);-ms-transform:scale(&#34; + per + &#34;);transform-origin:top left; border: 0;&#34;
}
set_width();
window.onresize = function(){ set_width(); };
&lt;/script&gt;
&lt;h1 id=&#34;工夫した点&#34;&gt;工夫した点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;クイズの問題やゲーム設定をJSONファイルで管理&lt;/li&gt;
&lt;li&gt;画像のアスペクト比を維持するように&lt;/li&gt;
&lt;li&gt;解答の取り消し、問題の差し替え機能実装&lt;/li&gt;
&lt;li&gt;ゲーム内の文章ほぼ全てにフリガナを付ける（フリガナ表示・非表示切り替え可能）&lt;/li&gt;
&lt;li&gt;問題の解説に文章だけでなく選択肢の画像も利用できるように&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;実装の概説&#34;&gt;実装の概説&lt;/h1&gt;
&lt;details&gt;
    &lt;summary&gt;Unityに詳しい人向け&lt;/summary&gt;
    &amp;ldquo;Truck Quiz&amp;quot;を主に動かしているのは&lt;code&gt;StateMachineBehaviour&lt;/code&gt;です。&lt;code&gt;StateMachineBehaviour&lt;/code&gt;について軽く説明すると、アニメーションの開始時、終了時、Update時(MonoBehaviourのUpdate関数同様、アニメーションの再生中定期的に呼ばれる)に任意の処理を挟むことのできるクラスです。&lt;br&gt;
トロッコとUIで2つのAnimatorがあり、「選択肢を選んだアニメーション」が終了したら「トロッコが曲がるアニメーション」を開始する、みたいな処理をGameManagerクラス内で実装しています。
&lt;/details&gt;

&lt;h1 id=&#34;改良予定&#34;&gt;改良予定&lt;/h1&gt;
&lt;details&gt;
    &lt;summary&gt;Unityに詳しい人向け&lt;/summary&gt;
    &lt;h2 id=&#34;assetbundleを使用した画像管理&#34;&gt;AssetBundleを使用した画像管理&lt;/h2&gt;
&lt;p&gt;現状Resourceクラスで問題の画像を管理していますが、公式が「Resourceクラスは使うな」と言っているので、AssetBundleへの切替を検討しています&lt;/p&gt;
&lt;h2 id=&#34;unityバージョンのアップグレード&#34;&gt;Unityバージョンのアップグレード&lt;/h2&gt;
&lt;p&gt;現在使用しているUnityのバージョンは2018ですが、2018ではpreview版である&lt;code&gt;Input System&lt;/code&gt;を使用したいため、2019へのアップグレードを検討しています。&lt;/p&gt;
&lt;h2 id=&#34;デザイン面の改善&#34;&gt;デザイン面の改善&lt;/h2&gt;
&lt;p&gt;UIデザインの改善を検討しています。&lt;/p&gt;

&lt;/details&gt;

</description>
    </item>
    
  </channel>
</rss>
