[{"authors":["juris710"],"categories":null,"content":"このサイトの開発者です。\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"ja","lastmod":1590766330,"objectID":"e5bcb0db953cb26a633d46c60da507ae","permalink":"https://blog.opuappnavi.com/author/juris710/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/juris710/","section":"authors","summary":"このサイトの開発者です。","tags":null,"title":"Juris710","type":"authors"},{"authors":["nobu"],"categories":null,"content":"webとかUnityとかちょっとずつかじってます。\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"ja","lastmod":1590766330,"objectID":"b12134a4c6d3497fe66814b116cc8488","permalink":"https://blog.opuappnavi.com/author/nobu/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/nobu/","section":"authors","summary":"webとかUnityとかちょっとずつかじってます。","tags":null,"title":"Nobu","type":"authors"},{"authors":["yamaguchi"],"categories":null,"content":"頼み事を最初に聞く係です。\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"ja","lastmod":1590804446,"objectID":"a64eb2d8aa2e5147152576bb0591c5ee","permalink":"https://blog.opuappnavi.com/author/%E3%83%A4%E3%83%9E%E3%82%AF%E3%83%81/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E3%83%A4%E3%83%9E%E3%82%AF%E3%83%81/","section":"authors","summary":"頼み事を最初に聞く係です。","tags":null,"title":"ヤマグチ","type":"authors"},{"authors":["Juris710"],"categories":[],"content":"UnityでWebGLをプラットフォームに選択し、Build And Runを押すと、ブラウザが起動して、作ったゲームをプレイすることができます。WebGLのビルドにはとても時間がかかるので、毎回ビルドするのではなく、一度ビルドしたゲームを複数回プレイしたくなります。ですが、ただ単に出力されたファイルindex.htmlを開くだけではプレイできません。\n\r\rindex.htmlを開くと、このようなエラーメッセージが表示される\r\r\rそこで、Visual Studio Code(VSCode)を使ってビルドしたゲームをプレイする方法を紹介します。\n\rVSCodeは https://code.visualstudio.com/ からダウンロードできます。\r\r\r1. 拡張機能のインストール VSCodeを起動し、画面左のボタンを押して拡張機能パネルを開きます。 \r\r拡張機能パネルを開くボタン\r\r\rパネル上の検索ボックスにlive serverと入力し、検索結果の一番上にあるLive Serverをクリックします。拡張機能:Live Serverタブが開くので、インストールをクリックします。 \r\r「拡張機能：Live Server」タブ\r\r\r(補足) VSCode日本語化 検索ボックスにjapaneseと入力し、検索結果の一番上にある拡張機能Japanese Language Pack for Visual Studio Codeをインストールすることで日本語化できます。 \r\r「Japanese Language Pack for Visual Studio Code」(インストール済み)\r\r\r2. ビルドしたゲームをVSCodeで開く メニューのファイル(F)からフォルダを開く... Ctrl+K Ctrl+Oをクリックします。フォルダ選択ダイアログが表示されるので、出力されたBuildフォルダとTemplateDataフォルダ、index.htmlファイルのあるフォルダを選択します。\n3. ゲームをプレイ 正しくフォルダを開けていると画面右下にGo Liveボタンが表示されます。このボタンをクリックするとブラウザが起動し、ゲームをプレイできます。 \r\rGo Live ボタン\r\r\rGo Liveがあった場所に表示されるPort:5050をクリックすれば、ブラウザでのプレイを停止できます。VSCodeを閉じれば自動的に停止するはずですが、プレイを止める際にはボタンを押すことをおすすめします。\n","date":1590824703,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590852938,"objectID":"fd5f74cef6ad7bacdb932c3ac97856a1","permalink":"https://blog.opuappnavi.com/post/unity-webgl-locally/","publishdate":"2020-05-30T16:45:03+09:00","relpermalink":"/post/unity-webgl-locally/","section":"post","summary":"VSCode拡張機能紹介","tags":["Unity","Visual Studio Code"],"title":"Unity WebGLのゲームをローカルでプレイする方法","type":"post"},{"authors":["ヤマグチ"],"categories":[],"content":"はじめに 初めまして、アプリNaviのヤマグチです。\n本日、府大バーチャル学祭開催に合わせ、『巡回！デリバリー屋さん』を\r特設ページにて公開させていただきました。遊んで、楽しんでもらえたのなら嬉しいです。\n今ゲームは2Dパズルアクションゲームで、ステージ作りにそれなりの時間を割きました。\nそこで、前半はステージ作りをするとき僕がどう考えていたかについて、後半はゲーム内に実装したステージを作った時に考えていたことの一部について書きます。\nあくまで僕自身の考え方であり他の方のものとは異なります。参考程度に読んでください。\nステージ作成で大切なこと この項では、僕がステージ作成で気にした方がいいと考えていることを書いていきます\n1. ステージに意図を持たせる 皆さんはカードゲームをしたことがありますか。ない場合は武器やパーティをカスタム、編成するゲームを考えてください。カードゲームにおいて、何が一番いる能力だと思いますか。\nプレイング、読み、運、色々あると思います。\n僕の答えは構築力です。なぜ構築力なのかは、ここではあまり関係ないので省きますが、構築力が高いデッキはデッキ内のすべてのカードに採用する理由があります。完成された構築には意味のないカードはなく、製作者の意図、意志が反映されます。 限られたデッキ枚数に何を何枚採用するか。\n言い換えると、限られたスペースに何をどのくらい配置するか、何かに似てますね。\nそうです、ステージ作成です。特に今回のゲームでは、ステージは一画面に収まる量でなくてはダメでした。\nそこで、ステージの枠組みをどうするか、設置物をどこに置くか等、それぞれの配置に自分なりの考えを持つことを意識して作成しました。\n2. 意味のないものを作る 前項で書いたことに早速矛盾しました。\nしかし、意味のないものを作ることも必要です。遊んでくれる方は製作者の意図なんて知ったこっちゃありません。だからこそ、製作者にとっては無意味だとわかり切っているものにも意味があるんじゃないかと深読みしてくれます。 そうすれば、意味のないものを作ったつもりが意味のあるものを作れます。\n意図的に意味のないものを作ることでステージ全体に遊び心を与えることができるのです。\n3. ギミックの使い方を考える 今回はステージの数が少なく、一つ一つのステージも小さいです。なので、できる限り同じ使い方でギミックを使わないことを気にしました。\n同じギミックでも、あるときはプラスの役割で使い、またある時はマイナスの役割で使うというようにギミックをより効果的に使うことを心がけました。\n4. 自分が楽しむ これが一番大切な気がします。\n作った人が作ったものに対しての理解が最も深いはずです。その人が楽しめないものを他の人が楽しめるとは思えません。作ったステージを自分自身が楽しめるようになることが望ましいです。 作っている時は、作っているステージが面白いかどうかわからなくなってきます。しかし自分が面白いと思えば、少なくとも世界で誰も楽しめないステージではなくなります。\n僕は今回のゲーム内のステージでは僕が作ったステージが一番好きです。\n実際に作ったステージの解説 この項では、僕が今回のゲームで作ったステージのちょっとした解説をしようと思います。\nこの先、ステージ9のネタバレを含みますのでプレイした後に読むことをお勧めします。 \r以下ステージ9ネタバレ\r\n\r1の意図は、ステージ全体にコンセプトを持たせることです。\n初めにコンセプトを決めておくことで僕自身の中で方向性がブレないようにしました。このステージ全体のコンセプトは「ステージ一周」でした。その時に右周りでも左回りでもクリアできるようにするということを目標にしました。\nステージ全体を荷物を取るエリアでそれぞれ区分けし、各エリアには入り口と出口を作り、周回方向によって入り口、出口が入れ替わるような配置にしました。\n上の画像では、赤枠の示す上から落ちるブロックを擬似的な通行止めとして利用しています。\n2の意味のないものは、どっち周りでもクリアできるという要素です。\n別に両方から進める必要は全くありません。左回りの時は右回りのギミックは不必要で、右回りの時は左回りのギミックは不必要となります。\nただ、これがあることでこのステージの面白さが出ていると考えています。\n3のギミックの使い方は、先ほども挙げた落ちるブロックによるステージの区切りです。\n他の僕の作ったステージでは、基本的にプレイヤーを倒すためだけのものでした。そこに他の役割である区切りという役割を持たせています。\nこの使い方はプラスとマイナスの両方の使い方というわけではありませんが、違った使い方をした一例ではあります。\n4の自分が楽しむに関しては、作ってる間すごく楽しかったです。コンセプトを思いついてからは非常にスムーズにステージ作成をすることができました。\n以上が、僕の作ったステージのちょっとした解説になります。あまり話しすぎても面白くないのでこの辺りで終わります。\n\r終わりに 読んでいただきありがとうございました。\nまさかブログまで書くことになると思っていませんでしたが、ゲームも含めてまあ良いものになったんじゃないかなあと思っています。\n最後に、ゲームを遊んでいただいた方、このブログを読んでいただいた方ありがとうございました。それではまた何かの機会に。\n","date":1590801475,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590852684,"objectID":"9e2d3e852e879ac4b02ed628dd72241a","permalink":"https://blog.opuappnavi.com/post/stage-create/","publishdate":"2020-05-30T10:17:55+09:00","relpermalink":"/post/stage-create/","section":"post","summary":"2Dステージ作成の時に僕が考えていたことのまとめです","tags":["Unity"],"title":"自己流ステージ作成方法","type":"post"},{"authors":["Nobu"],"categories":[],"content":"全然需要ないかもですが、GAS の紹介第二弾です。\n今回は GAS を使って、以前ハッカソンの採点シートをちゃっと作った話をしたい思います。\n手軽にできるので、JavaScript など、プログラミングを最近学び始めた方はちょっと実践がてらに GAS を利用して何か作ってみたらどうでしょう？みたいな気持ちで書いたので、読んでもらえたら幸いです。（GAS は一応 JavaScript ベースでできています(^^)/)\nGAS って？ こちらで紹介しているので良ければ見ていってください！\n\rNobu\r\r最終更新\r2020/05/30\r\r\r手軽に始める！GAS を使ってみませんか～\r\rGoogle Apps Scriptの紹介\n\r\r作った経緯（ついでにハッカソンの紹介） アプリ Navi では毎年、長期休みのどこかで、ハッカソンというものを開催しています。\nハッカソンとは\n ハッカソン（英語: hackathon 、別名:hack day ,hackfest ,codefest ）とは、ソフトウェア開発分野のプログラマやグラフィックデザイナー、ユーザインタフェース設計者、プロジェクトマネージャらが集中的に作業をするソフトウェア関連プロジェクトのイベントである (\rWikipedia より抜粋)\n とのこと。なんかヤバそう\u0026hellip;\nもちろん、この文から読み取れるようなそこまでヤバそうな感じではないです（笑）\n一言でいうと、参加者同士が、チームを組んで一つの作品を作ろうというイベントになっています。twitter にて簡単に紹介しているので良ければ見てください。\nハッカソンの紹介 #大阪府立大学\n今日紹介するのは、ハッカソンです！\n年に２回、コンピュータハウスランダムさんも交えてハッカソンを主催しています！\nアプリNaviでは部員同士でチームを組んで、発表されるお題に沿って、約２日で一つのゲームやアプリを制作、発表する形式をとっています。\n↓リプ欄に続く pic.twitter.com/pZdAznwB0V\n\u0026mdash; OPU アプリNavi (@OPUAppNavi) April 5, 2020  ハッカソンの紹介はこの程度にして、そこでは審査員の方もお呼びして、それぞれの作品を審査してもらう形を取っています。\nその審査の際、採点用紙が必要だったので、ちょうど GAS を勉強し始めたこともあり自作することにしました。\n作ったもの それ専用に作ったので、完全に内輪向けですが画像としてはこんなものです。\n\r\r作ったもの\r\r\r見た目等はいまいちですが、ちゃんと動きます。\n審査員の方に審査するチーム名を選択してもらい、それぞれの項目について点数を付け送信してもらうといった流れです。\nこういうの何かの初歩の題材でありそうですね\u0026hellip;\nどうして GAS で？ 大きな理由としては、GAS を知り始めて使ってみたかったというのがありますが、\nその使ってみたくなるという前提となるのが、手軽に作成できるからです。\nその理湯としては大きく分けて２つあります。\nサーバー等の手続きがいらず、簡単に公開できる GAS では Google のサーバーを使っているので、このような簡単なサイトでもサーバーを借りるなどの作業がいらず、実質ワンクリックで公開、利用できます。\nGAS のエディタから、おおよそここをクリックしたら公開できます\n\r\r公開方法\r\r\rSpreadSheet を簡易的なデータベースのように利用できる 個人的には SpreadSheet を簡易的なデータベースとして利用できるのは大きいと思います。\nSpreadSheet を簡易的なデータベースとして用いることで、データベースの知識がなくても簡単な事ならできますし、なんにせよ上限はありますが、無料で利用できるので、少なくとも何かをパッと作りたいときにはいいのではないかと！\n一応、ちょっとした例として、ユーザーの入力を SpreadSheet に追加するコードを載せておきます…\n HTML の\u0026lt;form\u0026gt;\u0026lt;/form\u0026gt;に入力された内容を SpreadSheet に記述  \u0026lt;form method=\u0026quot;post\u0026quot; action=\u0026quot;送信先のURL\u0026quot;\u0026gt;\r....\r\u0026lt;/form\u0026gt;\r function doPost(e){\r//データを記録するスプレッドシート\rvar sheet =SpreadsheetApp.openByUrl(\u0026quot;//利用したいSpreadSheetのURL//\u0026quot;);\r...\r//チーム名、各採点項目の情報を取得\rvar name = e.parameter.name;\rvar theme = e.parameter.theme;\rvar uniqe = e.parameter.uniqe;\rvar practice = e.parameter.practice;\rvar presentation = e.parameter.presentation;\rvar comment = e.parameter.comment;\r//データ\rvar array = [userEmail,name,theme,uniqe,practice,presentation,comment];\r//SpreadSheetにデータを追加\rsheet.appendRow(array);\r...\r}\r データの保存だけですが、このように SpreadSheet を用いることで手軽に簡易的なデータベースを利用することができます。\nまた SpreadSheet を Sheet API として利用することで GAS のプロジェクトだけではなく、その他の web 開発やスマホアプリ開発などにもデータベースとして活用できるので知っておいて損はないかと思います。\nコード こんなので公開していいのかという思いもありますが、大まかなコードを載せておきます。お見苦しいですが、何卒ご容赦下さい、、、 恐らくすごく簡単というのが分かると思います。\n\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;ja\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;base target=\u0026quot;_top\u0026quot; /\u0026gt;\r\u0026lt;!-- GASでのcssの読み込み--\u0026gt;\r\u0026lt;?!= HtmlService.createHtmlOutputFromFile('css').getContent(); ?\u0026gt;\r\u0026lt;meta\rname=\u0026quot;viewport\u0026quot;\rcontent=\u0026quot;width=device-width,initial-scale=1.0,minimum-scale=1.0\u0026quot;\r/\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;div class=\u0026quot;wrap\u0026quot;\u0026gt;\r\u0026lt;h1\u0026gt;ハッカソン 採点シート\u0026lt;/h1\u0026gt;\r\u0026lt;p\u0026gt;\r使い方:\u0026lt;br /\u0026gt;採点欄がチームごとに４つの項目があるので各１０点、\u0026lt;br /\u0026gt;\r合計40点で採点をお願いします。\u0026lt;br /\u0026gt;\r各チームの採点が終わり次第、一番下の送信ボタンをおしてください。\u0026lt;br /\u0026gt;\rまた申し訳ありませんが、誤送信など、なにかございましたらすぐにご連絡ください\r\u0026lt;/p\u0026gt;\r\u0026lt;form method=\u0026quot;post\u0026quot; action=\u0026quot;送信先のURL\u0026quot;\u0026gt;\r\u0026lt;table border=\u0026quot;1\u0026quot; width=\u0026quot;100%\u0026quot; height=\u0026quot;30rem\u0026quot;\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th\u0026gt;チーム名\u0026lt;/th\u0026gt;\r\u0026lt;th\u0026gt;\r\u0026lt;select name=\u0026quot;name\u0026quot;\u0026gt;\r\u0026lt;option value=\u0026quot;\u0026quot;\u0026gt;選択してください\u0026lt;/option\u0026gt;\r\u0026lt;option value=\u0026quot;/*チーム名*/\u0026quot;\u0026gt;/*チーム名*/\u0026lt;/option\u0026gt;\r...\r\u0026lt;/select\u0026gt;\r\u0026lt;/th\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;th colspan=\u0026quot;2\u0026quot;\u0026gt;採点項目\u0026lt;/th\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;/*採点項目*/\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;\u0026lt;input type=\u0026quot;number\u0026quot; name=\u0026quot;name\u0026quot; min=\u0026quot;0\u0026quot; max=\u0026quot;10\u0026quot; /\u0026gt;/10\u0026lt;/td\u0026gt;\r...\r\u0026lt;/tr\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td\u0026gt;コメント\u0026lt;/td\u0026gt;\r\u0026lt;td\u0026gt;\r\u0026lt;textarea\rid=\u0026quot;commit\u0026quot;\rname=\u0026quot;comment\u0026quot;\rplaceholder=\u0026quot;こちらに何かチームに向けてコメントあればお願いします！\u0026quot;\r\u0026gt;\u0026lt;/textarea\u0026gt;\r\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/table\u0026gt;\r\u0026lt;p\u0026gt;\r\u0026lt;input\rtype=\u0026quot;submit\u0026quot;\rvalue=\u0026quot;送信する\u0026quot;\rstyle=\u0026quot;width:200px;height:100px;font-size:30px;float:right\u0026quot;\r/\u0026gt;\r\u0026lt;/p\u0026gt;\r\u0026lt;/form\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r //htmlを読み込む\rfunction doGet() {\rvar template = 'index';\rreturn HtmlService.createTemplateFromFile(template).evaluate();\r}\r//得点計算処理\rfunction myFunction() {\rvar sum = [];\rvar teamList = [\u0026quot;/*チームリスト*/\u0026quot;];\rfor(var j = 0; j \u0026lt; 8;j++){\rsum[j] = 0;\r}\r//spreadsheetのデータを取得する処理(細かい解説は省きます)\rvar spreadsheet = SpreadsheetApp.getActiveSpreadsheet();\rvar sheet = spreadsheet.getActiveSheet();\rvar lastRow = sheet.getLastRow();\rLogger.log(lastRow);\rfor(i = 9; i \u0026lt;= lastRow;i++){\rvar range = sheet.getRange(i,2);\rfor(k = 0; k \u0026lt; 8;k++){\rif(range.getValue() == teamList[k]){\rvar range = sheet.getRange(i,3,1,4);\rvar valueArray = range.getValues();\rfor(var u = 0; u \u0026lt; 4;u++){\rsum[k] += valueArray[0][u];\r}\r}\r}\r}\rfor(i = 0;i \u0026lt; 8;i++){\rsheet.getRange(i + 1 ,9).setValue(sum[i]);\r}\r}\r 作ってみた感想 コード自体も非常に簡単ながら、データの保存等も SpreadSheet で行い、利用してもらうための公開もすぐにできるので、サクッと作ることが出来ました。 ただやはり GAS 自体の勉強もいるかなという感じです。 また勉強だけでなく、大小あれど自分で実際に使ってもらうものを作ることができたので、その点は良かったと思います。\n最後に 今回は本当に簡単な例をあげましたが、かなりざっくりしていたので、説明不足の点も多々あって申し訳ないです。ただ、こんなのがあるとだけ伝われば幸いです。 また、もちろん GAS にはもっと様々な事に利用することができるので、ご興味のある方は一度調べてみてください！\n追伸\n普通に Google Form とかでやればええやん、とかは言わないで m(_ _)m\n","date":1590800684,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590851849,"objectID":"0b2d7a296dc584d62ef2047a382c28fc","permalink":"https://blog.opuappnavi.com/post/gas-scoring/","publishdate":"2020-05-30T10:04:44+09:00","relpermalink":"/post/gas-scoring/","section":"post","summary":"全然需要ないかもですが、GAS の紹介第二弾です。 今回は GAS を使","tags":["Google Apps Script"],"title":"GAS でサクッと採点シート作ってみた","type":"post"},{"authors":["Nobu"],"categories":[],"content":"どうもこんにちは、今回は自分がよく使っている、GAS について紹介したいと思います。\nちなみにタイトルの通り、手軽に始められるので、最近プログラミングを始めたという方にもおススメなのでぜひ見ていってください(^-^)\nGAS って? GASとは Google Apps Scriptの略でプログラミング言語の一つです。\n読み方はガス、ギャスなどと言われることが多いです。\n一応、 公式の文言を載せておくと、\n Google Apps Script は JavaScript ベースのスクリプト言語で、ドキュメント、スプレッドシート、スライド、フォームなどの G Suite サービスをカスタマイズ、拡張できます。\n とのこと。（抜粋）\nGAS で何ができるの？ じゃあ GAS で何ができるのかというと、色々とあると思うのですが、とりあえず大きく分けてこの２つかなと。\n Google のサービスをより便利に活用する web アプリケーションの作成、公開  順に紹介していきます。\nGoogle のサービスをより便利に活用する GAS では Google のサービスをより自由に効率的に使うことが出来ます。\n下記のようなサービスを利用する際、GAS のコードを加えることで、面倒な作業を自動化したりなどが可能です。\n利用できるサービス例  Google Document G Mail Google SpreadSheet Google Calender Google Form などなど…  これらのサービスを使っている人も比較的多いのではないでしょうか？\n使用例 具体的に GAS で Google のサービスをより効果的に用いた使用例としてはこのようなものがあります。\n カレンダーに自動でスケジュールを記入 事務的メールを複数人に指定の時間に自動送信 Google Formを自分好みに改造  もちろん他にも色々とありますが、例のように日常の何気ない作業を自動化したり、普段用いているサービスの機能を拡張するようなことができます。\nWeb アプリケーションの作成、公開 GAS では、google のサービスと連携して、web アプリケーションを開発、公開する機能があります。\nまたアプリケーションの機能として、googleのサービスと連携しているのでその機能を簡単に用いることができ、少しのコードでちょっと素敵な事を行うことが可能です。\n使用例 簡単に例をあげると\n SpreadSheetを簡易的なデータベースのように使う G Mailを用いてメール送信機能を作る  などがあります。\n他にも外部アプリケーションとの連携などを組合せて、様々な事ができると思うので、ぜひ試してください！\nGASを使用するメリット GASで何ができるかというのを紹介したところで、タイトルのお手軽という理由を紹介していきます。\n開発環境構築がいらない！ GASでは新しく言語をはじめるときの面倒な環境構築はほとんどありません。\n必要なのはGoogleアカウントだけ。\n加えて、実行はGoogleのサーバーを利用するので、レンタルサーバーを用意したり、それ関係のツールを利用することもなく開発をすることができます。\n無料！ 利用するのに基本的にお金はかかりません。\n学習コストが低い、勉強になる！ GASはJavaScriptベースで、そしてwebサイトを開発する時に良く用いられるHTML,CSSを使用して開発することが可能なので、一般的に学習コストはそこまで高くないです。\nそれにJavaScriptを勉強中の方はそれを使って手軽にアプリケーションを作ったりできるので、その学習の実践の場として助けにもなると思います。\nデメリットもあります… メリットの反面、やはりデメリットもあります。\nその例として一つあげると無料で利用できる反面、Googleのサーバーを利用していているので、ユーザーによる過剰な負担を避けるために利用するのに制限があります。\nもっとも大きな制限として考えられるのは実行制限で、\n 1回あたりの実行制限時間: 6分  となっています。\nこれは工夫せずに重い処理を何度も書くと、引っかかってしまうので注意が必要です…\nそのためGASはそこまで大きなプロジェクトには向いていないと言えます\u0026hellip;\n詳しい公式の制限は\rコチラ\nさっそく始めてみよう 始める方法はとても簡単です。せっかくなので実際にやってみます。\n googleアカウントの作成（無い方は）\nこちらより必要事項を記入して Google アカウントを作成 します。\n  ブラウザで\rGoogle Driveにアクセスします。\n  Google DriveにGoogle Apps Scriptを追加する\n左上の新規＋ボタンをクリックし、その他→アプリを追加→Google Apps Scriptを探し、接続をクリック\n  もう一度新規＋を押し、その他にGoogle Apps Scriptが出てきたら完了 \r\rHelloWorld\r\r\r  それをクリックすると、エディタがでてくるので、これでGASをはじめる準備が出来ました！\n  ちなみにHello Worldはこんな感じです。\n\r\r完了後\r\r\r最後に 今回はざっくりでしたがGASについて簡単に紹介しました。\nGASの存在だけでも知ってもらい、機会があれば何かで使ってもらえたら幸いです。\nまた、GASを十分使いこなせているとは言えない自分ですが、おすすめしたい参考サイトも載せておくので興味がある人は見てみてください！\n参考サイト \r【保存版】初心者向け実務で使えるGoogle Apps Script完全マニュアル\n","date":1590662844,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590850795,"objectID":"66163d2d3f386e209a558df2d1f23db6","permalink":"https://blog.opuappnavi.com/post/gas-recommendation/","publishdate":"2020-05-28T19:47:24+09:00","relpermalink":"/post/gas-recommendation/","section":"post","summary":"Google Apps Scriptの紹介","tags":["Google Apps Script"],"title":"手軽に始める！GAS を使ってみませんか～","type":"post"},{"authors":["Juris710"],"categories":[],"content":"GitHubのfork GitHubにはforkという機能があります。既に存在するリポジトリをコピーして、オリジナルのリポジトリに影響を与えることなく変更を加えることができます。\nこのサイトは\rAcademic Kickstartというリポジトリをforkして開発しています。\nライセンス GitHubのリポジトリにはたいてい、LICENSEという名前のファイルがあります。ライセンスはそのプログラムの改変・商用利用などをしても良いかなどを記したファイルで、何を許可するかによって様々なライセンスが存在します。\nその中で一番多く用いられているライセンスの１つがMITライセンスです。\rAcademic KickstartもMITライセンスです。 MITライセンスが設定されたリポジトリは、以下の2つを守れば改変・商用利用など自由に使うことができます。\n 元の著作権表示(Copyright (c) 年 作者名)をそのまま掲載すること ライセンスの全文（あるいは全文が掲載されたサイトのURL）を掲載すること  詳しくは\rこのサイトなどを参照してください。\nforkとライセンス このサイトを開発する中で、「forkしたリポジトリのライセンスはどう変更するべきなのか」という疑問を持ち、検索してみました。その結果わかった2つの方法を紹介します。\n方法1　一行下に自分の著作権表示を追加 \r方法1\rThe MIT License (MIT)\rCopyright (c) 年 foo\rPermission is hereby granted, free of charge, to any person obtaining a copy\rof this software and associated documentation files (the \u0026quot;Software\u0026quot;), to deal\rin the Software without restriction, including without limitation the rights\rto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\rcopies of the Software, and to permit persons to whom the Software is\rfurnished to do so, subject to the following conditions:\rThe above copyright notice and this permission notice shall be included in all\rcopies or substantial portions of the Software.\rTHE SOFTWARE IS PROVIDED \u0026quot;AS IS\u0026quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\rIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\rFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\rAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\rLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\rOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\rSOFTWARE.\r 上のようなライセンスのリポジトリをforkする場合、次のように変更します。\nThe MIT License (MIT)\rCopyright (c) 年 foo\rCopyright (c) 年 作者名(自分)\rPermission is hereby granted, free of charge, to any person obtaining a copy\rof this software and associated documentation files (the \u0026quot;Software\u0026quot;), to deal\rin the Software without restriction, including without limitation the rights\rto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\rcopies of the Software, and to permit persons to whom the Software is\rfurnished to do so, subject to the following conditions:\rThe above copyright notice and this permission notice shall be included in all\rcopies or substantial portions of the Software.\rTHE SOFTWARE IS PROVIDED \u0026quot;AS IS\u0026quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\rIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\rFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\rAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\rLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\rOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\rSOFTWARE.\r \r方法2　ライセンスを併記 \r方法2\rThe MIT License (MIT)\rCopyright (c) 年 foo\rPermission is hereby granted, free of charge, to any person obtaining a copy\rof this software and associated documentation files (the \u0026quot;Software\u0026quot;), to deal\rin the Software without restriction, including without limitation the rights\rto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\rcopies of the Software, and to permit persons to whom the Software is\rfurnished to do so, subject to the following conditions:\rThe above copyright notice and this permission notice shall be included in all\rcopies or substantial portions of the Software.\rTHE SOFTWARE IS PROVIDED \u0026quot;AS IS\u0026quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\rIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\rFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\rAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\rLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\rOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\rSOFTWARE.\r 上のようなライセンスのリポジトリをforkする場合、書き方は色々ありますが、例えば次のように変更します。\nThe MIT License (MIT)\rCopyright (c) 年 作者名(自分)\rPermission is hereby granted, free of charge, to any person obtaining a copy\rof this software and associated documentation files (the \u0026quot;Software\u0026quot;), to deal\rin the Software without restriction, including without limitation the rights\rto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\rcopies of the Software, and to permit persons to whom the Software is\rfurnished to do so, subject to the following conditions:\rThe above copyright notice and this permission notice shall be included in all\rcopies or substantial portions of the Software.\rTHE SOFTWARE IS PROVIDED \u0026quot;AS IS\u0026quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\rIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\rFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\rAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\rLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\rOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\rSOFTWARE.\rHere is the original copyright notice:\rThe MIT License (MIT)\rCopyright (c) 年 foo\rPermission is hereby granted, free of charge, to any person obtaining a copy\rof this software and associated documentation files (the \u0026quot;Software\u0026quot;), to deal\rin the Software without restriction, including without limitation the rights\rto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\rcopies of the Software, and to permit persons to whom the Software is\rfurnished to do so, subject to the following conditions:\rThe above copyright notice and this permission notice shall be included in all\rcopies or substantial portions of the Software.\rTHE SOFTWARE IS PROVIDED \u0026quot;AS IS\u0026quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\rIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\rFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\rAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\rLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\rOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\rSOFTWARE.\r GitHubはライセンスの種類を認識し、説明を表示する機能があります。この方法だとGitHubがGitHuMITライセンスだと認識してくれないという問題があります。\n\r検証 forkしたリポジトリのライセンス変更に、実際どのような方法が取られているか検証することにしました。検証するリポジトリは\r東京都コロナウイルス対策サイトです。GitHubにMITライセンスのリポジトリが公開されており、多くの都道府県が(公式 / 非公式で)このリポジトリをforkした対策サイトを作成しています。\r派生したサイト一覧に掲載されているリポジトリについて、masterブランチのLICENSE.txtの権利表記を比較すると、以下のような結果になりました。\n   著作権表示に加えられた変更 リポジトリ数     そのまま1 51   書き換え 7   方法1 1   方法2 0    東京都のリポジトリの権利表記Copyright (c) 2020 Tokyo Metropolitan Government and other contributors.をforkした側の名前に書き換えているリポジトリがいくつかありました。厳密に言えばこれはMITライセンスの規約違反になるので意外でした。「コロナ対策サイト」で著作権の問題は起こらないでしょうから、ライセンス関連はあまり気にしていないのかもしれません。\n参考サイト  https://help.github.com/ja/github/getting-started-with-github/fork-a-repo https://wisdommingle.com/mit-license/ https://gist.github.com/fbaierl/1d740a7925a6e0e608824eb27a429370 https://opensource.stackexchange.com/questions/6119/forking-github-repository-mit-what-references-to-the-original-author-should-r https://ja.stackoverflow.com/questions/3040/mit%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9%E3%81%AE%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%82%92%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AF%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%AE%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9%E8%A1%A8%E8%A8%98 https://softwareengineering.stackexchange.com/questions/277688/if-i-fork-a-project-on-github-that-is-licensed-under-mit-how-to-i-handle-the-at    forkした側のライセンスを別ファイルに掲載しているリポジトリを含みます。 \u0026#x21a9;\u0026#xfe0e;\n   ","date":1590327465,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590852224,"objectID":"7c034dd1da9164f3121daa4cee640615","permalink":"https://blog.opuappnavi.com/post/github-fork-mit/","publishdate":"2020-05-24T22:37:45+09:00","relpermalink":"/post/github-fork-mit/","section":"post","summary":"GitHubを使ったことのある人向け","tags":["GitHub"],"title":"GitHubのforkとライセンス","type":"post"},{"authors":["Juris710"],"categories":[],"content":"スライド機能 Markdown記法＋αでスライドを作成することができます。\n 操作方法  次のスライド: Right Arrow または Space 前のスライド: Left Arrow 最初のスライド: Home 最後のスライド: End 一覧表示: Esc スピーカーノート: S フルスクリーン: F ズーム: Alt + Click   シンタックスハイライト機能 インラインコード:print(\u0026quot;Hello, World!\u0026quot;)\n#include\u0026lt;stdio.h\u0026gt;\rint main(void){\rprintf(\u0026quot;Hello, World!\u0026quot;);\rreturn 0;\r}\r  数式表示 インライン表示:$ F=G\\frac{Mm}{r^2} $\n$$ F=G\\frac{Mm}{r^2} $$\n+++\n縦スクロール 補足情報など\n Fragments 後からコンテンツを表示します\n{{% fragment %}} One {{% /fragment %}}\r{{% fragment %}} **Two** {{% /fragment %}}\r{{% fragment %}} Three {{% /fragment %}}\r Right ArrowかSpaceを押すと現れます\nOne  Two  Three \n+++\nFragments補足 A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   スピーカーノート スピーカーノートを追加できます\n{{% speaker_note %}}\r- スピーカーだけが見れるメモです\r- `S`を押さないとみれません\r{{% /speaker_note %}}\r Sを押すとスピーカーノートを見れます\n スピーカーだけが見れるメモです Sを押さないとみれません  \r スライドのカスタマイズ {{\u0026lt; slide background-image=\u0026quot;/img/画像名\u0026quot; \u0026gt;}}\r {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}}\r {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}\r  Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links  +++\n night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  ","date":1589705890,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1589705890,"objectID":"6362197c56c1e34e70b7317b9651d1a5","permalink":"https://blog.opuappnavi.com/slides/slide-introduction/","publishdate":"2020-05-17T17:58:10+09:00","relpermalink":"/slides/slide-introduction/","section":"slides","summary":"スライドの書き方紹介","tags":[],"title":"Test","type":"slides"},{"authors":["Juris710"],"categories":[],"content":"はじめに バ美肉とは  バ美肉（バびにく）とは、バーチャル美少女受肉またはバーチャル美少女セルフ受肉の略語。美少女のアバターを纏うこと、あるいは纏った上でバーチャルな美少女として、VRChat等のバーチャル空間で活動したり、バーチャルYouTuber・バーチャルアイドル等として活動することを指す。(Wikipedia)\n ビデオ会議でバ美肉 Qiitaで「バ美肉」と検索すると、VTuberなどの姿でビデオ会議に参加する方法を解説する記事が複数投稿されています。しかしながら、それらの記事はMacでのやり方解説であり、Windowsでの方法を解説した記事は（ざっと見た限りでは）見つかりませんでした。\nWindowsでのやり方 仮想カメラの準備 バ美肉した映像をカメラとしてビデオ会議ソフトに認識してもらうために仮想カメラが必要です。Qiitaの記事ではCamTwistというソフトが使われていますが、Mac版しか存在しません。そのため、代わりにOBS Studioというフリーソフトを使用します。録画・配信用のソフトウェアですが、OBS Virtualcamというプラグインを使用することで仮想カメラになります。 \r今回使用したOBS Virtualcamのバージョンは2.0.5です。それ以下のバージョンだと上手くいかない可能性があります。\r\r\rまず、 https://obsproject.com/ja からOBS Studioをインストールします。 \r\r次に、 https://obsproject.com/forum/resources/obs-virtualcam.949/ からOBS Virtualcamをインストールします。画面右のGo to downloadをクリックすることでインストーラーがダウンロードできます。 \r\rバ美肉する https://facevtuber.com/にアクセスします。\nStartをクリックします。\n一回目のみ、カメラの使用を許可してください。\nStartの上にカメラ映像が表示されるまで（20秒くらい）待ってください。\nSetをクリックします。\npopWindowをクリックします。\n子ウインドウが開き映像が表示されます。\nOBS Studioにバ美肉した映像を表示 OBS Studioを起動します。\nソースの項目の+をクリックし、ウインドウキャプチャを選択します。\n\r\rソースを作成/選択ダイアログで、OKをクリックします。\n'ウインドウキャプチャ'のプロパティダイアログで、ウインドウのドロップダウンリストから子ウインドウの名前（Chromeなら[chrome.exe]:無題-Google Chrome）を選択しOKをクリックします。\n仮想カメラ起動 左上のツールメニューからVirtualCamを選択します。\nVirtucalCamダイアログで、Startをクリックすることで仮想カメラに映像が出力されます。 Stopをクリックすれば映像出力が止まります。 \r\rビデオ会議に参加 カメラとしてOBS-Cameraを選択すれば、バ美肉した姿でビデオ会議に参加できます。\nTips(facevtuber.com)  モデルを変更したい場合  \u0026ldquo;ファイルを選択\u0026quot;をクリックし、MMDモデル入りzipファイルを選択 権利表記を確認するダイアログが複数表示されるので、ダイアログが表示されなくなるまでOKを押し続ける   zoomでバーチャル背景を使用する場合は背景色でGreenを選択すると、グリーンバックの代わりになります。 facevtuber.comのページや子ウインドウを最小化すると映像が止まります。 moveLeftHandByMouse、moveRightHandByMouseにチェックが入っているとマウスの動きに合わせて手が動きます。手の位置がおかしくなったらResetPoseをクリックしてください。 子ウインドウはできるだけ画面下に移動させると、マウスカーソルが映り込むことがなくなります。  参考サイト  https://note.com/d_v_osorezan/n/nd9130e2012dd https://qiita.com/tktktktk/items/a024b9df15efe7b36ad6 https://forest.watch.impress.co.jp/docs/news/585371.html  ","date":1589698026,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590852993,"objectID":"cc5f7f198a71a3ccc899904ee502fda4","permalink":"https://blog.opuappnavi.com/post/windows-babiniku-video-conference/","publishdate":"2020-05-17T15:47:06+09:00","relpermalink":"/post/windows-babiniku-video-conference/","section":"post","summary":"VTuberの姿でビデオ会議に参加する方法","tags":[],"title":"Windowsでもビデオ会議でバ美肉したい！","type":"post"},{"authors":["Juris710"],"categories":[],"content":"プログラミング入門講座を学び、UnityやAndroid、Webなどの開発を始めた脱プログラミング初心者に向けた記事です。何を開発するかに関わらず、内容を理解出来たり自分で書けたりすれば役にたつと思うファイル形式を3つ紹介します。\nMarkdown Markdown（マークダウン）は、文書を記述するための軽量マークアップ言語のひとつです。 ソフトウェアのインストールし使用する前の注意事項などを記述したReadmeファイルなどに用いられています。また、このサイトの記事も全てMarkdownファイルです。\nJSON JSONはJavascript Object Notationの略で、データを記述するための言語です。\nUnity UnityではJsonUtilityクラスを使用することで、オブジェクトをJSON形式の文字列に変換したり、逆にJSON形式の文字列からオブジェクトを生成することができます。といっても、オブジェクト指向に詳しくない人にはよく分からない説明だったと思います。簡単に言えば、JSONファイルからキャラクターのステータスなどのデータを読み込むことがとても簡単にできます。\nWeb API Web APIとは、ものすごく乱暴に言えば、HTTP通信によって利用できる便利機能です。様々な種類のWebAPIがあり、WebAPIごとに特定のURLにアクセスすることで様々な機能を利用することができます。例えば、天気予報や鉄道の路線情報といったデータを取得したり、AIを用いた画像認識を利用したりすることが可能です。WebAPIを利用した結果は、JSON形式やXML形式の文字列で取得できることが多いです。\nXML XMLはExtensible Markup Languageの略で、文書やデータの意味や構造を記述するためのマークアップ言語の一つです。マークアップ言語とは、「タグ」と呼ばれる特定の文字列で地の文に情報の意味や構造、装飾などを埋め込んでいく言語です。\nWeb API WebAPIを利用した結果は、JSON形式やXML形式の文字列で取得できることが多いです。詳しくは\rJSONを参照してください。\nAndroid Android StudioでのAndroidアプリ開発では、UIのレイアウトやスタイル、多言語対応の文字列などに関してxmlで記述されています。\nUnity Unity開発でも将来的にXMLを使うことになるかもしれません。\nUnity 2019からUI Elementsという新しいUIシステムが使えます。UI Elementsはwebに近い設計で、UIをレイアウト、スタイル、ロジックに分けて記述します。XMLをベースとしたUXMLファイルを記述することでレイアウトをカスタマイズすることができます。 \rUI Builder(preview版)を使えば、マウスクリックやドラッグ＆ドロップなどでレイアウトやスタイルをカスタマイズできます。\r\r\rUI Elementsは現状、エディタ拡張のUI(現在のIMGUI)にしか対応していませんが、将来的にはゲーム内UI(現在のuGUI)にも対応する予定とのことです。\n参考  https://ja.wikipedia.org/wiki/Markdown https://ja.wikipedia.org/wiki/%E3%83%AA%E3%83%BC%E3%83%89%E3%83%9F%E3%83%BC https://ja.wikipedia.org/wiki/JavaScript_Object_Notation https://qiita.com/mikan3rd/items/ba4737023f08bb2ca161 https://qiita.com/NagaokaKenichi/items/df4c8455ab527aeacf02 https://itpropartners.com/blog/8546/ https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E8%A8%98%E8%BF%B0%E8%A8%80%E8%AA%9E http://e-words.jp/w/XML.html https://blogs.unity3d.com/jp/2019/04/23/whats-new-with-uielements-in-2019-1/ https://www.youtube.com/watch?v=5UTiLOIU8TE  ","date":1588682799,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1591279788,"objectID":"b2071ff1800c992b4ef6244e07c9d82c","permalink":"https://blog.opuappnavi.com/post/file-format-should-able-use/","publishdate":"2020-05-05T21:46:39+09:00","relpermalink":"/post/file-format-should-able-use/","section":"post","summary":"脱プログラミング初心者向け","tags":["Markdown","JSON","XML"],"title":"(個人的)プログラマーなら使えたほうがいいファイル形式","type":"post"},{"authors":["Juris710"],"categories":[],"content":"Gitに詳しくない人向けに書いています。Gitに詳しい人は詳しくない人向けの部分は読まなくて大丈夫です。\n必要なもの  Unity GitHub アカウント Git：\rここからダウンロードできます  1. Unityでゲームをビルドする 1.1 Build Settingsを開く 左上のメニューでFile\u0026gt;Build Settingsをクリックしてください。\n1.2 プラットフォームの変更 WebGLを選択し、Switch Platformをクリックしてください。\n1.3 ゲームをビルド Buildをクリックしてください。ビルド先はどこでも構いません。私は(プロジェクト名)/Builds/WebGLを選択しています。\n2. GitHubにアップロード ビルドの結果、以下の3つのファイルが生成されます。\n Buildフォルダ TemplateDataフォルダ index.htmlファイル  これらのファイルをGitHubにアップロードします。\n\r詳しくない人向け\r2.1 GitHubにサインイン GitHubにアクセスし、サインインしてください。\n2.2 新しいリポジトリの作成 \n\rRepositoriesの右にあるNewをクリックしてください。\n\n\rRepository nameは任意の名前で構いませんが、ゲームをプレイする人も見ることができるので注意してください。\nPublicとPrivateを選択できますが、Publicを選択してください。\nCreate repositoryを選択してリポジトリを作成してください。\n\n\r赤い枠で囲まれたボタンを押してください。左のURLがクリップボードにコピーされます。\n2.3 ファイルのアップロード Git Bashを起動してください。 起動時のフォルダはC:\\Users\\(ユーザー名)なので、ビルド結果があるフォルダに移動してください。cd (フォルダ名)コマンドで移動できます。 移動したら、以下のコマンドを一行ずつ実行してください。\n\rGit BashではShift+Insertで貼り付けができます\r\r\rgit init\rgit add .\rgit commit -m \u0026quot;Initial Commit\u0026quot;\rgit remote add origin (先ほどコピーしたURL)\rgit push -u origin master\r \r3. Webにゲームを公開 \r\r\rSettingsをクリックしてください。 \r\rスクロールし、GitHub PagesのSourceの下にあるドロップダウンリストでmaster branchを選択してください。\n公開したゲームをプレイ https://(ユーザー名).github.io/(リポジトリ名)/というURLにアクセスすると、作ったゲームをプレイすることができます。\n","date":1588591042,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590852901,"objectID":"2150ef7f33f2a6ec86bd03cc354523b5","permalink":"https://blog.opuappnavi.com/post/unity-github-pages/","publishdate":"2020-05-04T20:17:22+09:00","relpermalink":"/post/unity-github-pages/","section":"post","summary":"Unityで作ったゲームを誰でもプレイできるようにする方法の解説です","tags":["Unity","GitHub"],"title":"Unity製ゲームをWebで共有する方法","type":"post"},{"authors":["Juris710"],"categories":[],"content":"使用したUnityのバージョン Unity 2018.4.22f1\n導入方法 プロジェクトごとに行う必要があります。\n Asset Storeから「GitHub for Unity」をインポート メニューでWindow\u0026gt;GitHubを選択\n\r\rGitHubタブが開きます。 \r\r (初回のみ) Sign Inをクリック\n\r\rダイアログが表示されるので、GitHubアカウントでサインインしてください。 Initialize a git repository for this projectをクリック\n少し待つと、タブの中身が変化します。\n\r\r  使い方 Changesを選択してください。前回保存した状態から変更があったファイルが一覧表示されます。 \r\r変更を保存する  リストから保存したい変更をチェックマークをクリックして選択 Commit summaryに変更内容を記述 Commit descriptionに変更内容の詳細を記述（任意） Commit to [master]をクリック  変更内容を確認する 前回保存した状態と現在の状態との差分を見ることができます。 \r差分を比較するソフトウェア(WinMergeなど)をインストールする必要があります。\r\r\r リストから差分を見たいファイルを右クリック Show Diffをクリック  変更を取り消す 加えた変更を無かったことにして、前回保存した状態に戻すことができます。\n リストから変更を取り消したいファイルを右クリック Discardをクリック  その他 比較ソフトウェアを変更したい 比較ソフトウェアが複数インストールされていて、変更したい場合\n UnityのPreferenceを開く External Toolsを選択 Revision Controll Diff/Mergeでソフトウェアを選択   \rGitHubやGitに詳しい人向け\rRevert  Historyを選択 コミットを右クリック Revertをクリック  \r","date":1588245505,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590852098,"objectID":"34a5017a019dd902673f26f1fdc1297f","permalink":"https://blog.opuappnavi.com/post/github-for-unity/","publishdate":"2020-04-30T20:18:25+09:00","relpermalink":"/post/github-for-unity/","section":"post","summary":"Unityアセット紹介","tags":["Unity","GitHub"],"title":"GitHub for Unityの紹介","type":"post"},{"authors":["Juris710"],"categories":["Works"],"content":"Unityについて勉強するため春休みの間に作成した、\u0026ldquo;Truck Quiz\u0026quot;を紹介します。\nゲームの説明 某有名クイズ番組のクイズを模したゲームです。 2択問題が5問出題されます。間違えてた時点でゲームオーバーです。 キーボード操作、タッチ操作の両方に対応しています。\n\r\r\r\r\rlet w = 980 ; let h = 700 ; let url = \"https://juris710.github.io/TruckQuizSample/\"; document.getElementById(\"unity_webgl_0_2\").style.paddingBottom = 100 * h / w + \"%\";\rdocument.getElementById(\"unity_webgl_0_3\").src = url;\rlet set_width = function() {\rlet client_w = document.getElementById(\"unity_webgl_0_2\").clientWidth;\rlet per = client_w / w;\rlet rev = 100 / per;\rlet iframe = document.getElementById(\"unity_webgl_0_3\");\riframe.height = rev + \"%\";\riframe.width = rev + \"%\";\riframe.style = \"position: absolute; top: 0; left: 0; transform:scale(\" + per + \");-o-transform:scale(\" + per + \");-webkit-transform:scale(\" + per + \");-moz-transform:scale(\" + per + \");-ms-transform:scale(\" + per + \");transform-origin:top left; border: 0;\"\r}\rset_width();\rwindow.onresize = function(){ set_width(); };\r 工夫した点  クイズの問題やゲーム設定をJSONファイルで管理 画像のアスペクト比を維持するように 解答の取り消し、問題の差し替え機能実装 ゲーム内の文章ほぼ全てにフリガナを付ける（フリガナ表示・非表示切り替え可能） 問題の解説に文章だけでなく選択肢の画像も利用できるように  実装の概説 \rUnityに詳しい人向け\r\u0026ldquo;Truck Quiz\u0026quot;を主に動かしているのはStateMachineBehaviourです。StateMachineBehaviourについて軽く説明すると、アニメーションの開始時、終了時、Update時(MonoBehaviourのUpdate関数同様、アニメーションの再生中定期的に呼ばれる)に任意の処理を挟むことのできるクラスです。\nトロッコとUIで2つのAnimatorがあり、「選択肢を選んだアニメーション」が終了したら「トロッコが曲がるアニメーション」を開始する、みたいな処理をGameManagerクラス内で実装しています。\r\r改良予定 \rUnityに詳しい人向け\rAssetBundleを使用した画像管理 現状Resourceクラスで問題の画像を管理していますが、公式が「Resourceクラスは使うな」と言っているので、AssetBundleへの切替を検討しています\nUnityバージョンのアップグレード 現在使用しているUnityのバージョンは2018ですが、2018ではpreview版であるInput Systemを使用したいため、2019へのアップグレードを検討しています。\nデザイン面の改善 UIデザインの改善を検討しています。\n\r","date":1588054078,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590852751,"objectID":"01de5fac7d4608be54537a9a7ba22f51","permalink":"https://blog.opuappnavi.com/post/truck-quiz/","publishdate":"2020-04-28T15:07:58+09:00","relpermalink":"/post/truck-quiz/","section":"post","summary":"作品紹介","tags":["Unity"],"title":"Truck Quiz","type":"post"},{"authors":["Juris710","Nobu","ヤマグチ"],"categories":[],"content":"新型コロナウイルス感染拡大により、2020年5月30日、31日に開催予定だった第59回友好祭が中止となりました。中止となった友好祭に代わるイベントとして、コンピュータハウスランダムさんが提案されたのが、非公式オンラインイベント「府大バーチャル学祭」です。 \r\r一覧ページ\rお問い合わせ\r\r【拡散希望】\n大阪府立大学の有志イベント\n府大バーチャル学祭のPV、デザインを担当させていただきました。\n各団体のイベント内容などの情報は #府大バーチャル学祭 に追加していきます。#春から府大　#system #aftereffects pic.twitter.com/GtVtrQV5TI\n\u0026mdash; SYSTEM-府大のオンライン団体- (@SystemOpu) May 20, 2020  アプリNaviの展示内容は、このサイトでのブログ記事公開と、下記特設サイトでのゲーム展示です。\nアプリNavi 府大バーチャル学祭特設サイト\n","date":1587999847,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590804446,"objectID":"cfb2068b0320392351052f38681d9a9c","permalink":"https://blog.opuappnavi.com/project/opu-virtual-festival-2020/","publishdate":"2020-04-28T00:04:07+09:00","relpermalink":"/project/opu-virtual-festival-2020/","section":"project","summary":"OPU Virtual Festival","tags":[],"title":"府大バーチャル学祭","type":"project"},{"authors":["Juris710"],"categories":[],"content":"はじめに このサイトでの記事の書き方をまとめました。英語でも構わない場合は\r公式ドキュメントも参照してください。\nMarkdown記法 全ての記事はMarkdown記法で書く必要があります。書き方については\rこのサイトを参照してください。\n画像を挿入する場合 ![代替テキスト](./画像名)\r \r「画像名」には拡張子も含めてください\r\r\r画像のサイズを変えたい、または画像を左寄せ・右寄せしたい場合は下の\r画像の挿入を参照してください\nShortcodes ShortcodesとはHugo独自の機能で、Markdownファイルに書くことができるスニペットです。\n画像の挿入 {{\u0026lt;figure src=\u0026quot;./画像名\u0026quot; title=\u0026quot;代替テキスト\u0026quot;\u0026gt;}}\r \r「画像名」には拡張子も含めてください\r\r\r画像の左寄せ、右寄せ \r左寄せ\r{{\u0026lt;figure src=\u0026quot;./画像名\u0026quot; title=\u0026quot;代替テキスト\u0026quot; class=\u0026quot;left\u0026quot;\u0026gt;}}\r \r\r右寄せ\r{{\u0026lt;figure src=\u0026quot;./画像名\u0026quot; title=\u0026quot;代替テキスト\u0026quot; class=\u0026quot;right\u0026quot;\u0026gt;}}\r \r\r左寄せ(float)\r{{\u0026lt;figure src=\u0026quot;./画像名\u0026quot; title=\u0026quot;代替テキスト\u0026quot; class=\u0026quot;float-left\u0026quot;\u0026gt;}}\r \r\r右寄せ(float)\r{{\u0026lt;figure src=\u0026quot;./画像名\u0026quot; title=\u0026quot;代替テキスト\u0026quot; class=\u0026quot;float-right\u0026quot;\u0026gt;}}\r \r他にも、画像の幅・高さなどをカスタムすることができます。詳しくは\r公式ドキュメント を参照してください。\nYoutube動画埋め込み {{\u0026lt;youtube 動画のID\u0026gt;}}\r \rYoutubeのURLは「https://www.youtube.com/watch?v=動画のID」という形式になっています\r\r\rUnity WebGLの埋め込み \rランダムさんの記事の内容を少し改変した自作Shortcodeです。Unity WebGLのゲームをページ内でプレイすることができます。\n{{\u0026lt;unity src=\u0026quot;URL\u0026quot;\u0026gt;}}\r ツイートの埋め込み {{\u0026lt;tweet ツイートID\u0026gt;}}\r \rツイートのURLは「https://twitter.com/\u0026hellip;/status/ツイートID」という形式になっています。\r\r\r折りたたみ {{\u0026lt;collapsable \u0026quot;折りたたまれている時に表示する文字列\u0026quot;\u0026gt;}}\r展開された時に表示する文章(複数行可)\r{{\u0026lt;/collapsable\u0026gt;}}\r 自作Shortcodeです。折りたたまれている時、展開された時ともに、Markdown記法を用いた文章が使えます。例えば\n{{\u0026lt;collapsable \u0026quot;`Hello`\u0026quot;\u0026gt;}}\rfoo\r*bar*\r\u0026gt; Hello, World!\r{{\u0026lt;/collapsable\u0026gt;}}\r のように書けば、下のように表示されます。\n\rHello\rfoo\nbar\n Hello, World!\n \rページへのリンク（カード表示） 自作Shortcodeです。\n{{\u0026lt;page \u0026quot;表示したいページのパス(ホームからの相対パス)\u0026quot;\u0026gt;}}\r 例えば{{\u0026lt; page \u0026quot;project/opu-virtual-festival-2020\u0026quot;\u0026gt;}}と記述すると、下のように表示されます。 \rJuris710, Nobu, ヤマグチ\r\r最終更新\r2020/05/30\r\r\r府大バーチャル学祭\r\rOPU Virtual Festival\n\r\rその他 数式 $\\LaTeX$ 記法を用いることで数式を表示することができます。数式は$$で囲む必要があります。\n$$ F=G\\frac{Mm}{r^2} $$\r 下のように表示されます。 $$ F=G\\frac{Mm}{r^2} $$ $$の代わりに$で囲むと $ F=G\\frac{Mm}{r^2} $ のようにインライン表示できます。\nDiagrams mermaid記法を使った図の挿入が可能です。\n```mermaid\rgraph TD;\rA--\u0026gt;B;\rA--\u0026gt;C;\rB--\u0026gt;D;\rC--\u0026gt;D;\r```\r 以下のように表示されます。\ngraph TD;\rA--\u0026gt;B;\rA--\u0026gt;C;\rB--\u0026gt;D;\rC--\u0026gt;D;\r スライド Markdown記法で簡易的なスライドを作成することができます。\n{{\u0026lt;slide-frame src=\u0026quot;スライド名\u0026quot;\u0026gt;}}\r \r","date":1587999669,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1591280288,"objectID":"3a4388ce9d841105db3288db4ef1ab50","permalink":"https://blog.opuappnavi.com/post/how-to-write-an-article/","publishdate":"2020-04-28T00:01:09+09:00","relpermalink":"/post/how-to-write-an-article/","section":"post","summary":"(部員用)記事を投稿する方法のまとめです。","tags":["Markdown","Hugo"],"title":"記事の書き方","type":"post"},{"authors":["Juris710"],"categories":[],"content":"サイト制作の経緯 4月末に、コンピュータハウスランダムさんからオンライン友好祭が提案されました。 \rJuris710, Nobu, ヤマグチ\r\r最終更新\r2020/05/30\r\r\r府大バーチャル学祭\r\rOPU Virtual Festival\n\r\rオンライン友好祭において、ゲーム展示以外にできることはないかと考え、部員がブログを書くのはどうだろうかと考えました。既に存在していた\rアプリNaviのウェブサイトには ブログ投稿機能がなかったことに加え、今まで触ったことがなかったWeb開発をしてみたかったこともありこのサイトを作成しました。\nサイトの作成にあたり、アプリNaviと同じく大阪府立大学の部活である、コンピュータハウスランダムさんの\rウェブサイトを参考にしました。\nHugo このサイトは、静的サイトジェネレーターであるHugoを用いて作成しました。htmlやcssについてある程度知っている程度でWeb関連に明るくない私でも、Hugoを使うことでとても簡単にWebサイトを作成できました。\n","date":1587999659,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1590852562,"objectID":"e1562ef6b5c6e6bae5501e71a788d8b2","permalink":"https://blog.opuappnavi.com/post/site-introduction/","publishdate":"2020-04-28T00:00:59+09:00","relpermalink":"/post/site-introduction/","section":"post","summary":"サイトの紹介","tags":["Hugo"],"title":"このサイトについて","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"ja","lastmod":1591413721,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://blog.opuappnavi.com/about/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/about/","section":"","summary":"","tags":null,"title":"アプリNaviとは","type":"widget_page"}]