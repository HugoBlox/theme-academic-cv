<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>記事一覧 | アプリNaviブログ</title><link>https://blog.opuappnavi.com/post/</link><atom:link href="https://blog.opuappnavi.com/post/index.xml" rel="self" type="application/rss+xml"/><description>記事一覧</description><generator>Wowchemy (https://wowchemy.com)</generator><language>ja</language><copyright>©Juris710 2021</copyright><image><url>https://blog.opuappnavi.com/media/icon_hude4548ff0fbec708553074fd5e552c37_155941_512x512_fill_lanczos_center_2.png</url><title>記事一覧</title><link>https://blog.opuappnavi.com/post/</link></image><item><title>一般人とプログラマーの違い（youtube動画紹介)</title><link>https://blog.opuappnavi.com/post/gas-programmer/</link><pubDate>Wed, 07 Apr 2021 23:01:38 +0900</pubDate><guid>https://blog.opuappnavi.com/post/gas-programmer/</guid><description>&lt;h1 id="はじめに">はじめに&lt;/h1>
&lt;p>どうも、部内でブログを書くとなるとGASを使って何かしたいNobuです。（需要はあまりなさそうですが）&lt;/p>
&lt;p>今回はyoutubeで少し気になった動画があり、GASも使っていたのでそれの紹介と実際にやってみたいと思います！&lt;/p>
&lt;h1 id="対象">対象&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>プログラミングに興味があるけど、何か難しそうと思っている人&lt;/p>
&lt;/li>
&lt;li>
&lt;p>GAS少し知っている人&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="動画紹介">動画紹介&lt;/h1>
&lt;p>今回紹介する動画はコチラです。1分程度なので、まずは見てみてください！&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=pDWgh-EpYck" target="_blank" rel="noopener">一般人とプログラマーの違い[エンジニアチャンネル]&lt;/a>&lt;/p>
&lt;figure id="figure-一般人とプログラマーの違い">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./gas_programmer_video_image.png" alt="一般人とプログラマーの違い" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
一般人とプログラマーの違い
&lt;/figcaption>&lt;/figure>
&lt;h1 id="動画内容">動画内容&lt;/h1>
&lt;p>ざっと内容をまとめると、&lt;/p>
&lt;p>翻訳の仕事が何百個も割り振られ、一つ一つコピーアンドペーストでGoogle翻訳をかけ、全く終わらない一般人。&lt;/p>
&lt;p>その一方でプログラマーは、タスクを少し見て、パソコンをカタカタ、少しコードを書いただけで、あとは自動で翻訳していきます。そして終いには余裕でNetflixを開き休憩と…。&lt;/p>
&lt;p>一般人が苦労している最中、プログラマーがタスクを自動化することで余裕でタスクを終わらせるという動画でした。&lt;/p>
&lt;h1 id="これを見てみて">これを見てみて、、&lt;/h1>
&lt;p>この動画は人によってそれぞれ捉え方が異なるのではないかなと。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>プログラミングの知識が少しでもあり、これならパッとできそうと思った人、&lt;/p>
&lt;p>アプリNaviにぜひ！ GASは便利でいいよ！と伝えておきます。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>何やってるか分からん、興味はあるけど、難しそう…と思った人、&lt;/p>
&lt;p>ぜひ続きもサッといいので読んでいただきたい！ そしてなんとなくでもやってみたいと思ったらぜひアプリNaviへ！&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>実はちょっとプログラミングのやり方を知っていれば、簡単に出来ちゃうんです。（コードも載せてくれていますし…)&lt;/p>
&lt;p>注: 本記事は全くこの動画をdisっているわけではなく、このチャンネルさんを尊敬したうえで、簡単にこの動画でいうプログラマー(気分)になってみよう！というものです。その点どうかご注意お願いしますm(_ _)m&lt;/p>
&lt;h1 id="実際にやってみる">実際にやってみる&lt;/h1>
&lt;p>ということで実際にやってみましょう。&lt;/p>
&lt;p>詳しいことは色々と省略するのですが、項目はざっとこんな感じです。&lt;/p>
&lt;ul>
&lt;li>最初に読んでみたらいいかも（環境設定）&lt;/li>
&lt;li>webスクレイピング&lt;/li>
&lt;li>自動翻訳&lt;/li>
&lt;/ul>
&lt;p>ではやっていきます。&lt;/p>
&lt;h2 id="最初に読んでみたらいいかも環境設定">最初に読んでみたらいいかも(環境設定)&lt;/h2>
&lt;p>GAS(Google Apps Script)を使います。
GASの詳細や環境設定（超簡単）とかは以前書いたこの記事などにのっているのでよかったら！&lt;/p>
&lt;div class="card-simple">
&lt;div class="article-metadata">
&lt;div>
&lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/nobu/">Nobu&lt;/a>&lt;/span>
&lt;/div>
&lt;span class="article-date">
2020/05/28 投稿
( 2020/05/30 最終更新 )
&lt;/span>
&lt;/div>
&lt;div class="section-subheading article-title mb-1 mt-3">
&lt;a href="https://blog.opuappnavi.com/post/gas-recommendation/">手軽に始める！GAS を使ってみませんか～&lt;/a>
&lt;/div>
&lt;a href="https://blog.opuappnavi.com/post/gas-recommendation/" class="summary-link">
&lt;div class="article-style">
&lt;p>Google Apps Scriptの紹介&lt;/p>
&lt;/div>
&lt;/a>
&lt;div class="btn-links">
&lt;a class="btn btn-outline-primary btn-page-header btn-sm" href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/">
プロジェクト
&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="webスクレイピング">webスクレイピング&lt;/h2>
&lt;p>動画の通りするには実際に翻訳する文が必要ですが、
これは適当に英語のサイトからスクレイピングを使ってとってきます(詳細は省略します,何個か自分で打ってみてもいいかもです)&lt;/p>
&lt;p>参考サイト：(&lt;a href="https://auto-worker.com/blog/?p=2460" target="_blank" rel="noopener">AutoWorker〜Google Apps Script(GAS)とSikuliで始める業務改善入門&lt;/a>)&lt;/p>
&lt;p>元の文はCNNの2021年3月の記事のまとめというサイトからとってきました。&lt;/p>
&lt;p>こんな感じで、翻訳する文が250個ほど生成します。&lt;/p>
&lt;figure id="figure-英語文取り出し">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./gas_programmer_video1.gif" alt="英語文取り出し" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
英語文取り出し
&lt;/figcaption>&lt;/figure>
&lt;h2 id="自動翻訳">自動翻訳&lt;/h2>
&lt;p>幸い動画内でコードが出ているのでそれを参考にしながらというかありがたく写させてもらいつつ、少し自分用にいじってこんな感じになりました。&lt;/p>
&lt;pre>&lt;code class="language-JavaScript:input.gs">function batchTranslate() {
var targetSpreadSheet = SpreadsheetApp.openById(&amp;quot;自分のシートIDをここに&amp;quot;);
var targetSheet = targetSpreadSheet.getSheetByName(&amp;quot;シート1&amp;quot;);
var lastRowTranslate = targetSheet.getRange(1, 2).getNextDataCell(SpreadsheetApp.Direction.DOWN).getRow();
var lastRowEnglish = targetSheet.getLastRow();
for(var i = lastRowTranslate; i&amp;lt;= lastRowEnglish;i++){
var sourceDoc = targetSheet.getRange(&amp;quot;A&amp;quot; + i).getValue();
var destRange = targetSheet.getRange(&amp;quot;B&amp;quot; + i);
var translate = LanguageApp.translate(sourceDoc, &amp;quot;en&amp;quot;,&amp;quot;ja&amp;quot;);
destRange.setValue(translate);
Utilities.sleep(1000);
}
}
&lt;/code>&lt;/pre>
&lt;p>あとはこのコードを実行させると…&lt;/p>
&lt;p>このように順に翻訳していってくれます！(google翻訳なので若干おかしいところもあるかもですが…)&lt;/p>
&lt;figure id="figure-自動翻訳">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./gas_programmer_video2.gif" alt="自動翻訳" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
自動翻訳
&lt;/figcaption>&lt;/figure>
&lt;p>コードを実行して実際に動いているのを眺めると、どんなものでも少しニヤっとしてしまいますね(自分だけ？）&lt;/p>
&lt;p>ということで動画で言うプログラマーに無事になれそうです！&lt;/p>
&lt;h1 id="まとめ">まとめ&lt;/h1>
&lt;p>今回は一般人とプログラマーの違いという動画を取り上げ、実際にやってみました！&lt;/p>
&lt;p>やってみたように少しプログラミングの知識があるとめんどくさい作業が自動化できたり、面白いことが出来たりします。&lt;/p>
&lt;p>難易度としても、簡単なものなら調べたらコードやツールが出てくるものもあり、自動化、効率化できないかと気にするだけで作業のストレスが減ることも少なくないはず、、&lt;/p>
&lt;p>また、今は全然知らないって人も何かきっかけがあってプログラミングに触れる機会があれば、きっとそういう場面で役に立つはずです！&lt;/p>
&lt;p>そのきっかけとしてアプリNaviを使ってもらうのもありかもですね！（また宣伝かい/)&lt;/p>
&lt;p>本記事で少しでもGASの存在を知ってもらえたり、何か自動化、効率化してみようと思ってもらったら幸いです！&lt;/p>
&lt;h2 id="gasについて参考">GASについて(参考)&lt;/h2>
&lt;p>GASを使えば他にも簡単に作業を効率化することが出来るかもしれません！
気になる人は調べてみてください！&lt;/p>
&lt;h3 id="おすすめサイト">おすすめサイト&lt;/h3>
&lt;p>&lt;a href="https://tonari-it.com/google-apps-script-manual/" target="_blank" rel="noopener">【保存版】初心者向け実務で使える Google Apps Script 完全マニュアル&lt;/a>&lt;/p></description></item><item><title>おすすめプログラミングYouTubeチャンネル</title><link>https://blog.opuappnavi.com/post/recommended-youtube-channels/</link><pubDate>Wed, 07 Apr 2021 16:13:36 +0900</pubDate><guid>https://blog.opuappnavi.com/post/recommended-youtube-channels/</guid><description>&lt;p>私がアプリを開発する際に参考にしているYouTubeチャンネルを紹介します。&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
全て英語の動画を投稿しているチャンネルです。
&lt;/div>
&lt;/div>
&lt;h1 id="fireship">Fireship&lt;/h1>
&lt;p>Angular、React、Flutter、Dockerなど幅広いジャンルの動画を投稿しています。&lt;/p>
&lt;p>一部の動画では、動画内で扱ったデモのソースコードをGitHubに後悔しています。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.youtube.com/channel/UCsBjURrPoezykLs9EqgamOA" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">チャンネルを見る&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h2 id="おすすめ動画">おすすめ動画&lt;/h2>
&lt;h3 id="100-seconds-of-code">100 Seconds of Code&lt;/h3>
&lt;p>様々なプログラミング関連の話題について100秒で解説する動画シリーズです。100秒解説の後、おまけとしてより詳細な解説やデモがついた動画もあります。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.youtube.com/playlist?list=PL0vfts4VzfNiI1BsIK5u7LpPaIDKMJIDN" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">再生リストを見る&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h1 id="philipp-lackner">Philipp Lackner&lt;/h1>
&lt;p>ネイティブのAndroidアプリ開発に関する動画を主に投稿しているチャンネルです。
実際にアプリを制作するチュートリアルなど、実践的な動画が数多くあります。&lt;/p>
&lt;p>ネイティブのAndroidアプリ開発は情報の変化が激しく、ネットで調べると古い情報ばかりが出てきます。
例えば、昔の情報と最新の情報を比べると、使用するプログラミング言語すら異なります。
最初はJavaが用いられていましたが、現在ではKotlinという言語を使うことが推奨されています。（今でもJavaを使うことはできます）&lt;/p>
&lt;p>そんななか、このチャンネルは現在でもかなり頻繁に動画が投稿されており、最新の情報を知ることができます。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.youtube.com/channel/UCKNTZMRHPLXfqlbdOI7mCkg" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">チャンネルを見る&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h2 id="おすすめ動画-1">おすすめ動画&lt;/h2>
&lt;h3 id="mvvm-running-tracker-app-dagger-hilt">MVVM Running Tracker App (Dagger-Hilt)&lt;/h3>
&lt;p>自分が走ったコースを記録し地図に表示するというアプリを制作するチュートリアルです。
バックグラウンド処理や依存性注入、MVVMといった、専門的な内容について知ることができます。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.youtube.com/playlist?list=PLQkwcJG4YTCQ6emtoqSZS2FVwZR9FT3BV" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">再生リストを見る&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h1 id="flutter">Flutter&lt;/h1>
&lt;p>Flutterの公式YouTubeチャンネルです。Flutterの解説動画やFlutterを用いて制作されたアプリの紹介動画などが投稿されています。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.youtube.com/c/flutterdev" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">チャンネルを見る&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h2 id="おすすめ動画-2">おすすめ動画&lt;/h2>
&lt;h3 id="flutter-widget-of-the-week">Flutter Widget of the Week&lt;/h3>
&lt;p>Flutterにおいて、UIを構成する部品のことを&amp;quot;Widget&amp;quot;と呼びます。Flutterが提供しているWidgetは数多くあり、それらを1つずつ解説しています。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.youtube.com/playlist?list=PLjxrf2q8roU23XGwz3Km7sQZFTdB996iG" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">再生リストを見る&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h1 id="web-dev-simplified">Web Dev Simplified&lt;/h1>
&lt;p>Web開発に関するチュートリアル動画などを投稿しています。フロントエンドとバックエンドの両方を扱っています。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.youtube.com/channel/UCFbNIlppjAuEX4znoulh0Cw" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">チャンネルを見る&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h2 id="おすすめ動画-3">おすすめ動画&lt;/h2>
&lt;h3 id="5-must-know-javascript-features-that-almost-nobody-knows">5 Must Know JavaScript Features That Almost Nobody Knows&lt;/h3>
&lt;p>知らない人が多いJavascriptの便利な5つの機能について解説しています。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.youtube.com/watch?v=v2tJ3nzXh8I" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">動画を見る&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h3 id="5-more-must-know-javascript-features-that-almost-nobody-knows">5 MORE Must Know JavaScript Features That Almost Nobody Knows&lt;/h3>
&lt;p>知らない人が多いJavascriptの便利な5つの機能解説Part2です。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.youtube.com/watch?v=WIP1czLm3CY" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">動画を見る&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h3 id="another-5-must-know-javascript-features-that-almost-nobody-knows">Another 5 Must Know JavaScript Features That Almost Nobody Knows&lt;/h3>
&lt;p>知らない人が多いJavascriptの便利な5つの機能解説Part3です。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://www.youtube.com/watch?v=yJDofSGTSPQ" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">動画を見る&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>アプリNaviの備品紹介</title><link>https://blog.opuappnavi.com/post/club-equipments/</link><pubDate>Wed, 07 Apr 2021 16:05:55 +0900</pubDate><guid>https://blog.opuappnavi.com/post/club-equipments/</guid><description>&lt;p>今までアプリNaviにどのような備品があるかを紹介したことがなかったので、紹介したいと思います。&lt;/p>
&lt;h1 id="プログラミング関連書籍">プログラミング関連書籍&lt;/h1>
&lt;p>アプリNaviの部室の本棚には、プログラミング関連書籍が置かれています。
部員が欲しいと思う本を提案し、提案が通れば部費を使って購入します。&lt;/p>
&lt;p>最近だと、以下の本を購入しました。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.oreilly.co.jp/books/9784873115658/" target="_blank" rel="noopener">リーダブルコード&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.sbcr.jp/product/4797393248/" target="_blank" rel="noopener">配色アイデア手帖 めくって見つける新しいデザインの本&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.borndigital.co.jp/book/16550.html" target="_blank" rel="noopener">ゲームを動かす技術と発想R&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gihyo.jp/book/2015/978-4-7741-7413-6" target="_blank" rel="noopener">ゲームプログラマのためのコーディング技術&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="vrゲーム用機器">VRゲーム用機器&lt;/h1>
&lt;p>アプリNaviは友好祭や白鷺祭においてVRゲームのプレイ会を開催しています。&lt;/p>
&lt;p>VRのプレイに必要な以下の二つをアプリNaviは所有しています。&lt;/p>
&lt;h2 id="vrゴーグル">VRゴーグル&lt;/h2>
&lt;p>VRゲームをプレイするには絶対に必要なものです。&lt;/p>
&lt;p>アプリNaviが所持しているVRゴーグルは、下の画像のようなスマホをはめ込んで使用するタイプです。
&lt;figure id="figure-アプリnaviが所持しているvrゴーグル">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./vr_headsets.jpg" alt="アプリNaviが所持しているVRゴーグル" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
アプリNaviが所持しているVRゴーグル
&lt;/figcaption>&lt;/figure>&lt;/p>
&lt;h2 id="コントローラー">コントローラー&lt;/h2>
&lt;p>私と同世代の人でないとわからないかもしれませんが、Wiiのヌンチャクのようなコントローラーです。&lt;/p>
&lt;figure id="figure-アプリnaviが所持しているコントローラー">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./vr_controller.jpg" alt="アプリNaviが所持しているコントローラー" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
アプリNaviが所持しているコントローラー
&lt;/figcaption>&lt;/figure>
&lt;h2 id="ヘッドフォン">ヘッドフォン&lt;/h2>
&lt;figure id="figure-アプリnaviが所持しているヘッドフォン">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./headphone.jpg" alt="アプリNaviが所持しているヘッドフォン" loading="lazy" data-zoomable width="400" />&lt;/div>
&lt;/div>&lt;figcaption>
アプリNaviが所持しているヘッドフォン
&lt;/figcaption>&lt;/figure>
&lt;h2 id="vrマスク">VRマスク&lt;/h2>
&lt;p>去年度からVRゲームをプレイする際には新型コロナウイルス感染症の対策として、画像のようなマスクを使用しています。&lt;/p>
&lt;figure id="figure-アプリnaviが所持しているvrマスク">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./vr_mask.jpg" alt="アプリNaviが所持しているVRマスク" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
アプリNaviが所持しているVRマスク
&lt;/figcaption>&lt;/figure>
&lt;h1 id="サーバー">サーバー&lt;/h1>
&lt;p>備品とは少しずれるかもしれませんが、アプリNaviは&lt;a href="https://vps.sakura.ad.jp/" target="_blank" rel="noopener">さくらのVPS&lt;/a>というサーバーを契約しています。
レンタルサーバーとは異なり、プログラムのインストールなどを自由に行うことができます。&lt;/p>
&lt;p>現在では&lt;a href="https://shinkan.opuappnavi.com/" target="_blank" rel="noopener">新入生Navi&lt;/a>を提供するために使用しています。&lt;/p>
&lt;p>今後の使用用途としては、&lt;a href="https://unityroom.com/" target="_blank" rel="noopener">unityroom&lt;/a>のような、部員の作成したゲームを保存・提供するサーバーアプリケーションを自作して導入する予定です。&lt;/p>
&lt;h1 id="その他">その他&lt;/h1>
&lt;p>他にも、アプリNaviには以下の備品があります。&lt;/p>
&lt;ul>
&lt;li>ディスプレイ&lt;/li>
&lt;li>ストーブ&lt;/li>
&lt;li>扇風機&lt;/li>
&lt;/ul></description></item><item><title>新入生歓迎イベントの展示ゲーム</title><link>https://blog.opuappnavi.com/post/shirasagi-2020-online-games/</link><pubDate>Tue, 16 Mar 2021 16:43:57 +0900</pubDate><guid>https://blog.opuappnavi.com/post/shirasagi-2020-online-games/</guid><description>&lt;p>2020年11月1日・2日に新入生歓迎イベントが開催されました。
このイベントについては以前記事にしているので、興味がある方は読んでみてください。&lt;/p>
&lt;div class="card-simple">
&lt;div class="article-metadata">
&lt;div>
&lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/juris710/">Juris710&lt;/a>&lt;/span>
&lt;/div>
&lt;span class="article-date">
2020/12/16 投稿
( 2021/03/16 最終更新 )
&lt;/span>
&lt;/div>
&lt;div class="section-subheading article-title mb-1 mt-3">
&lt;a href="https://blog.opuappnavi.com/post/shirasagi-2020-online/">新入生歓迎イベントの反省&lt;/a>
&lt;/div>
&lt;a href="https://blog.opuappnavi.com/post/shirasagi-2020-online/" class="summary-link">
&lt;div class="article-style">
&lt;p>2020年11月1日・2日に開催された新入生歓迎イベントについて&lt;/p>
&lt;/div>
&lt;/a>
&lt;/div>
&lt;p>イベントが終了してからかなり時間がたってしまいましたが、特設サイトに展示したゲームをまとめました。&lt;/p>
&lt;h1 id="truckquiz">TruckQuiz&lt;/h1>
&lt;figure id="figure-スクリーンショット">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >
&lt;img alt="スクリーンショット" srcset="
/post/shirasagi-2020-online-games/truck-quiz_hua9b33dcef0a537f5e4deb0baf32f8973_424238_e4164f479de9ae99f8720dffc841cd3a.png 400w,
/post/shirasagi-2020-online-games/truck-quiz_hua9b33dcef0a537f5e4deb0baf32f8973_424238_5e51d9c0e302b0ef4edaa6a1813cd839.png 760w,
/post/shirasagi-2020-online-games/truck-quiz_hua9b33dcef0a537f5e4deb0baf32f8973_424238_1200x1200_fit_lanczos_2.png 1200w"
src="https://blog.opuappnavi.com/post/shirasagi-2020-online-games/truck-quiz_hua9b33dcef0a537f5e4deb0baf32f8973_424238_e4164f479de9ae99f8720dffc841cd3a.png"
width="691"
height="391"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
スクリーンショット
&lt;/figcaption>&lt;/figure>
&lt;p>某有名クイズ番組のクイズを模したゲームです。 2択問題が5問出題されます。 間違えた時点でゲームオーバーです。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://juris710.github.io/TruckQuizSample/" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">TruckQuizをプレイする（新しいタブに別サイトが開きます）&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h1 id="巡回-デリバリー屋さん">巡回！ デリバリー屋さん&lt;/h1>
&lt;figure id="figure-スクリーンショット">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >
&lt;img alt="スクリーンショット" srcset="
/post/shirasagi-2020-online-games/junkai-delivery-ya-san_hu9ef702ee403aa02d3794b094e45afaf7_294932_f44b2d49229bc9349e92cf44b70e5837.png 400w,
/post/shirasagi-2020-online-games/junkai-delivery-ya-san_hu9ef702ee403aa02d3794b094e45afaf7_294932_a116bb521a7e1e02ef65ad9dab4c49c2.png 760w,
/post/shirasagi-2020-online-games/junkai-delivery-ya-san_hu9ef702ee403aa02d3794b094e45afaf7_294932_1200x1200_fit_lanczos_2.png 1200w"
src="https://blog.opuappnavi.com/post/shirasagi-2020-online-games/junkai-delivery-ya-san_hu9ef702ee403aa02d3794b094e45afaf7_294932_f44b2d49229bc9349e92cf44b70e5837.png"
width="691"
height="390"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
スクリーンショット
&lt;/figcaption>&lt;/figure>
&lt;p>プレイヤーが家に荷物を届ける2Dアクションパズルゲームです。&lt;br>荷物を集めて理想のデリバリー屋さんを目指そう！&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://appnavicuby.github.io/CubyDeliveryRun/" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">巡回！ デリバリー屋さんをプレイする（新しいタブに別サイトが開きます）&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h1 id="finden-die-feen">Finden die Feen&lt;/h1>
&lt;figure id="figure-スクリーンショット">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >
&lt;img alt="スクリーンショット" srcset="
/post/shirasagi-2020-online-games/finden-die-feen_hu0cce10295c395c6b779d7522ccb50826_492077_ca776338f83b6f80002d122561b32fe9.png 400w,
/post/shirasagi-2020-online-games/finden-die-feen_hu0cce10295c395c6b779d7522ccb50826_492077_72e084795f99b9e982b59578070cb7a6.png 760w,
/post/shirasagi-2020-online-games/finden-die-feen_hu0cce10295c395c6b779d7522ccb50826_492077_1200x1200_fit_lanczos_2.png 1200w"
src="https://blog.opuappnavi.com/post/shirasagi-2020-online-games/finden-die-feen_hu0cce10295c395c6b779d7522ccb50826_492077_ca776338f83b6f80002d122561b32fe9.png"
width="691"
height="396"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
スクリーンショット
&lt;/figcaption>&lt;/figure>
&lt;p>妖精たちとのかくれんぼ&lt;br>迷路の中に隠れている見えない妖精たちを、音を頼りに探していこう！&lt;br>マウスと方向キーだけの簡単操作で遊べるよ。&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://hiroyuki-nakaya.github.io/Finden-die-Feen/" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">Finden die Feenをプレイする（新しいタブに別サイトが開きます）&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h1 id="attack-on-parrot">Attack on Parrot&lt;/h1>
&lt;figure id="figure-スクリーンショット">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >
&lt;img alt="スクリーンショット" srcset="
/post/shirasagi-2020-online-games/attack-on-parrot_huf7a471a3ccf3ed79fdc38d3f54103392_634074_fb4a9668b22dd0f14429df4310a49bc7.png 400w,
/post/shirasagi-2020-online-games/attack-on-parrot_huf7a471a3ccf3ed79fdc38d3f54103392_634074_a6fe6e7af0db78c8f18f5ed667fd6bd3.png 760w,
/post/shirasagi-2020-online-games/attack-on-parrot_huf7a471a3ccf3ed79fdc38d3f54103392_634074_1200x1200_fit_lanczos_2.png 1200w"
src="https://blog.opuappnavi.com/post/shirasagi-2020-online-games/attack-on-parrot_huf7a471a3ccf3ed79fdc38d3f54103392_634074_fb4a9668b22dd0f14429df4310a49bc7.png"
width="760"
height="535"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
スクリーンショット
&lt;/figcaption>&lt;/figure>
&lt;p>神速のタイピングをもって虹色に輝く鳥さんを撃退するゲーム。&lt;br>あなたのタイピング力が今試されるっ！！&lt;br>&lt;strong>(音量注意)&lt;/strong>&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://7min-prog.github.io/SprFes2020Game_AttackOnParrot/" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">Attack on Parrotをプレイする（新しいタブに別サイトが開きます）&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h1 id="riddle-house">Riddle House&lt;/h1>
&lt;figure id="figure-スクリーンショット">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >
&lt;img alt="スクリーンショット" srcset="
/post/shirasagi-2020-online-games/riddle-house_hu4653e3dd112ef8429c3501931557e9db_806742_50175a6379a5c2baa0d122993ae2c834.png 400w,
/post/shirasagi-2020-online-games/riddle-house_hu4653e3dd112ef8429c3501931557e9db_806742_56238664324269869f445bee632c9fab.png 760w,
/post/shirasagi-2020-online-games/riddle-house_hu4653e3dd112ef8429c3501931557e9db_806742_1200x1200_fit_lanczos_2.png 1200w"
src="https://blog.opuappnavi.com/post/shirasagi-2020-online-games/riddle-house_hu4653e3dd112ef8429c3501931557e9db_806742_50175a6379a5c2baa0d122993ae2c834.png"
width="760"
height="355"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
スクリーンショット
&lt;/figcaption>&lt;/figure>
&lt;p>目が覚めると知らない建物に閉じ込められていた。部屋の者に気づかれずに謎をときながら部屋を脱出せよ&lt;/p>
&lt;ul class="cta-group">
&lt;li>
&lt;a href="https://unityroom.com/games/20201031" target="_blank" rel="noopener" class="btn btn-primary px-3 py-3">Riddle Houseをプレイする&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>新入生歓迎イベントの反省</title><link>https://blog.opuappnavi.com/post/shirasagi-2020-online/</link><pubDate>Wed, 16 Dec 2020 16:41:56 +0900</pubDate><guid>https://blog.opuappnavi.com/post/shirasagi-2020-online/</guid><description>&lt;h1 id="新入生歓迎イベントとは">新入生歓迎イベントとは?&lt;/h1>
&lt;p>アプリNaviは例年「友好祭」と「白鷺祭」という文化祭でゲーム展示を行っています。しかしながら、今年は新型コロナウイルスの影響により、どちらも中止となってしまいました。&lt;/p>
&lt;p>そこで、白鷺祭の代わりとして開催されたイベントが「新入生歓迎イベント」です。大阪府立大学の1回生のみが参加でき、例年の白鷺祭のような屋内企画(もちろん全団体が感染症対策をした上での開催です)に加えて、特設サイトやYouTube動画などのオンライン企画も開催されました。&lt;/p>
&lt;p>私たちアプリNaviは、屋内企画とオンライン企画の両方に参加しました。この記事では、オンライン企画に関する反省を書いていきます。&lt;/p>
&lt;h1 id="オンライン企画特設サイト">オンライン企画特設サイト&lt;/h1>
&lt;figure id="figure-特設サイトのホームページ">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >
&lt;img alt="特設サイトのホームページ" srcset="
/post/shirasagi-2020-online/home_hu3525688c5a46648dd4de505184195447_639288_acd841a14d0456a3817a731bb587abe2.png 400w,
/post/shirasagi-2020-online/home_hu3525688c5a46648dd4de505184195447_639288_39e917a328ef9409b7aa8e4fb5e6fa88.png 760w,
/post/shirasagi-2020-online/home_hu3525688c5a46648dd4de505184195447_639288_1200x1200_fit_lanczos_2.png 1200w"
src="https://blog.opuappnavi.com/post/shirasagi-2020-online/home_hu3525688c5a46648dd4de505184195447_639288_acd841a14d0456a3817a731bb587abe2.png"
width="760"
height="315"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
特設サイトのホームページ
&lt;/figcaption>&lt;/figure>
&lt;p>アプリNaviは新入生歓迎イベントオンライン企画として、部員が作成したゲームをプレイできる特設サイト「あぷりなびらんど(オンライン)」を作成しました。このブログと同じく、&lt;code>Hugo&lt;/code>を使って作成しました。&lt;/p>
&lt;div class="alert alert-info">
&lt;div>
現在は特設サイトは閉鎖されており、アクセスすることはできません。
&lt;/div>
&lt;/div>
&lt;h1 id="反省">反省&lt;/h1>
&lt;h2 id="頑張ったこと">頑張ったこと&lt;/h2>
&lt;h3 id="aboutページ">Aboutページ&lt;/h3>
&lt;p>特設サイトにアプリNaviについて紹介する「About」ページを作成しました。新入生歓迎イベント終了後、このブログのAboutページにコピペしたので、このブログと特設ページのAboutページはほぼ同じです。&lt;/p>
&lt;p>「分野」のセクションでは、多くのアイコンを使いました。大半のアイコンは既存のものを使用しましたが、&lt;code>Hugo&lt;/code>、&lt;code>Flutter&lt;/code>、&lt;code>C&lt;/code>、&lt;code>C++&lt;/code>、&lt;code>C#&lt;/code>、&lt;code>Kotlin&lt;/code>、&lt;code>Dart&lt;/code>のアイコンは自作しました。&lt;/p>
&lt;p>「部員」のセクションでは、&lt;code>Google Charts&lt;/code>を導入し、部員の構成を見やすくしました。&lt;/p>
&lt;h3 id="ゲームページ">ゲームページ&lt;/h3>
&lt;h4 id="操作方法の表示">操作方法の表示&lt;/h4>
&lt;p>ゲームの操作方法をゲームの上に表示し、プレイする人にとって分かりやすくしました。&lt;/p>
&lt;p>
&lt;figure id="figure-操作方法キーボードのみで操作">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >
&lt;img alt="操作方法①(キーボードのみで操作)" srcset="
/post/shirasagi-2020-online/game01_hu7cf5be3353530d7ff05d562ca0b1e857_10751_39ec94344ef5eaf54c01e1800f9c7e98.png 400w,
/post/shirasagi-2020-online/game01_hu7cf5be3353530d7ff05d562ca0b1e857_10751_aadbd1dee30fe59bbd5d706d5f904e94.png 760w,
/post/shirasagi-2020-online/game01_hu7cf5be3353530d7ff05d562ca0b1e857_10751_1200x1200_fit_lanczos_2.png 1200w"
src="https://blog.opuappnavi.com/post/shirasagi-2020-online/game01_hu7cf5be3353530d7ff05d562ca0b1e857_10751_39ec94344ef5eaf54c01e1800f9c7e98.png"
width="276"
height="110"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
操作方法①(キーボードのみで操作)
&lt;/figcaption>&lt;/figure>
&lt;figure id="figure-操作方法マウスキーボードで操作">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >
&lt;img alt="操作方法②(マウス＆キーボードで操作)" srcset="
/post/shirasagi-2020-online/game02_hu9d0e66fa1f1e13ff4e33c9939f1bad19_12939_491bf95f87bd1cb32a87e126e82d50b1.png 400w,
/post/shirasagi-2020-online/game02_hu9d0e66fa1f1e13ff4e33c9939f1bad19_12939_d3ae624faecc6472ac8fa37143b4126e.png 760w,
/post/shirasagi-2020-online/game02_hu9d0e66fa1f1e13ff4e33c9939f1bad19_12939_1200x1200_fit_lanczos_2.png 1200w"
src="https://blog.opuappnavi.com/post/shirasagi-2020-online/game02_hu9d0e66fa1f1e13ff4e33c9939f1bad19_12939_491bf95f87bd1cb32a87e126e82d50b1.png"
width="466"
height="110"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
操作方法②(マウス＆キーボードで操作)
&lt;/figcaption>&lt;/figure>&lt;/p>
&lt;h4 id="コメント機能の実装">コメント機能の実装&lt;/h4>
&lt;p>Firebaseを使用し、各ゲームページにコメント投稿機能を実装しました。匿名ログインを利用して、自分で投稿したコメントの編集および削除ができるようにしました。&lt;/p>
&lt;p>新入生歓迎イベントの2日間で、11件のコメントを頂きました。コメントしてくださった皆様、ありがとうございました。&lt;/p>
&lt;h2 id="やりたかったけれど出来なかったこと">やりたかったけれど出来なかったこと&lt;/h2>
&lt;h3 id="ゲームページ-1">ゲームページ&lt;/h3>
&lt;h4 id="音量調整機能">音量調整機能&lt;/h4>
&lt;p>ゲームページは、Unity製のゲームをiframeを用いて埋め込みました。iframeの仕様なのかもしれませんが、タイトルでBGMを流しているゲームの場合、iframeのどこかをクリックするまで音が流れません。逆に言えば、iframeのどこかクリックした途端いきなりBGMが流れるのでびっくりします。なので、「プレイ」ボタンを作り、そのボタンが押されるまで音が流れないようにするつもりでした。&lt;/p>
&lt;p>しかしながら、Unity製のゲーム(WebGL)の音量を外部から変更する方法が分かりませんでした。そのため、音量調整機能の実装は諦め、代わりにゲームの上に「音量注意」の表示をつけました。&lt;/p>
&lt;figure id="figure-音量注意の表示">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >
&lt;img alt="「音量注意」の表示" srcset="
/post/shirasagi-2020-online/game03_hue3c56796ef3c6ded53f6f0bdcad0c9e0_21997_0afbc7c365d0a2f1ac880ebece10c825.png 400w,
/post/shirasagi-2020-online/game03_hue3c56796ef3c6ded53f6f0bdcad0c9e0_21997_a9e9584dd191badf2c706a0eec1297f0.png 760w,
/post/shirasagi-2020-online/game03_hue3c56796ef3c6ded53f6f0bdcad0c9e0_21997_1200x1200_fit_lanczos_2.png 1200w"
src="https://blog.opuappnavi.com/post/shirasagi-2020-online/game03_hue3c56796ef3c6ded53f6f0bdcad0c9e0_21997_0afbc7c365d0a2f1ac880ebece10c825.png"
width="760"
height="109"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
「音量注意」の表示
&lt;/figcaption>&lt;/figure>
&lt;h1 id="次回の祭りに向けて">次回の祭りに向けて&lt;/h1>
&lt;p>来年の友好祭や白鷺祭でもオンライン企画が行われる可能性が高いと思うので、現在新しいゲーム展示サイトを制作中です。&lt;/p>
&lt;p>今までサイトは&lt;code>Hugo&lt;/code>を使って作ってきましたが、次のサイトは&lt;code>Flutter&lt;/code>を使用して作成しています。&lt;/p></description></item><item><title>部員のオススメ書籍・サイト紹介</title><link>https://blog.opuappnavi.com/post/book-recommendation/</link><pubDate>Fri, 14 Aug 2020 17:52:45 +0900</pubDate><guid>https://blog.opuappnavi.com/post/book-recommendation/</guid><description>&lt;h1 id="部員のオススメ書籍サイト紹介">部員のオススメ書籍・サイト紹介&lt;/h1>
&lt;p>皆さん、暑さが厳しくなってきたこの季節、いかがお過ごしでしょうか？&lt;/p>
&lt;p>大学生の方の多くは、もうすぐ夏休みの方も多いことかと思います。&lt;/p>
&lt;p>そして、その夏休みというまとまった時間があるときにプログラミングをやってみようと思う方もいるのではないでしょうか？&lt;/p>
&lt;p>そこで、そういった方の少しでも参考になればと、今日はアプリ Navi 部員がおすすめする入門用の書籍、サイトを紹介していきます！&lt;/p>
&lt;h2 id="紹介目次">紹介目次&lt;/h2>
&lt;p>&lt;a href="#android-%e3%82%a2%e3%83%97%e3%83%aa%e9%96%8b%e7%99%ba">Android アプリ開発&lt;/a>&lt;br>
&lt;a href="#%e6%a9%9f%e6%a2%b0%e5%ad%a6%e7%bf%92">機械学習&lt;/a>&lt;br>
&lt;a href="#unity">Unity&lt;/a>&lt;br>
&lt;a href="#c">C＃&lt;/a>&lt;br>
&lt;a href="#python">Python&lt;/a>&lt;br>
&lt;a href="#web%e3%83%95%e3%83%ad%e3%83%b3%e3%83%88%e3%82%a8%e3%83%b3%e3%83%89">Web(フロントエンド)&lt;/a>&lt;br>
&lt;a href="#gas">GAS&lt;/a>&lt;/p>
&lt;p>（最後に少し部の宣伝もします）&lt;/p>
&lt;h2 id="おすすめ書籍サイト紹介">おすすめ書籍・サイト紹介&lt;/h2>
&lt;h3 id="android-アプリ開発">Android アプリ開発&lt;/h3>
&lt;p>おすすめサイト&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=WTQUj8tXUKU" target="_blank" rel="noopener">Android Studio 入門 アプリ開発を始めてみよう[Kotlin プログラミング]&lt;/a>&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/WTQUj8tXUKU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>部員コメント&lt;/p>
&lt;p>Android アプリ開発は、古い入門書や入門サイトなどで学ぼうとすると、実際の UI や手順と一部異なっているために困惑することがあります。そのため、なるべく最近の本や動画などで学習することをおすすめします。&lt;/p>
&lt;h3 id="機械学習">機械学習&lt;/h3>
&lt;p>おすすめ書籍&lt;/p>
&lt;p>&lt;a href="https://www.amazon.co.jp/dp/4274219984/ref=cm_sw_r_cp_awdb_c_ZO5iFbP9FQD3M" target="_blank" rel="noopener">機械学習入門 ボルツマン機械学習から深層学習まで 大関真之 著&lt;/a>&lt;/p>
&lt;figure id="figure-機械学習書籍画像">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./machine_learning_rec.png" alt="機械学習書籍画像" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
機械学習書籍画像
&lt;/figcaption>&lt;/figure>
&lt;p>部員コメント&lt;/p>
&lt;p>童話になぞらえた対話型の形式で機械学習の基本を学ぶことが出来る一冊。イラストも多くとにかく分かりやすい。機械学習について触れてみたいけど少し取っつきにくく感じていたりする人にとてもオススメです。&lt;/p>
&lt;h3 id="unity">Unity&lt;/h3>
&lt;p>おすすめ書籍&lt;/p>
&lt;p>&lt;a href="https://www.amazon.co.jp/dp/B0855CF2FR?tag=keiji009-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1" target="_blank" rel="noopener">「Unity 3D/2D ゲーム開発実践入門 Unity2019 対応版」吉谷幹人 著&lt;/a>&lt;/p>
&lt;figure id="figure-unity書籍画像">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./unity_rec.png" alt="Unity書籍画像" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Unity書籍画像
&lt;/figcaption>&lt;/figure>
&lt;p>部員コメント&lt;/p>
&lt;p>Unity2019 に対応した入門書です。Unity の使い方だけでなく，Unity のインストール方法からスマートフォンへのビルド方法，アプリストアへのアプリ提出方法まで載っているため，この本 1 冊でアプリがリリースできます。&lt;/p>
&lt;p>チュートリアルで扱うゲームが面白いのも特徴です。
説明も画像が多く使われており，非常にわかりやすいものとなっています。&lt;/p>
&lt;p>ただし，C#の解説自体は少ないため，C#の勉強はこの本以外で行うとよいと思います。
Unity 入門書としては素晴らしいため，Unity 始めたい方には特におススメです。&lt;/p>
&lt;h3 id="c">C＃&lt;/h3>
&lt;p>おすすめ書籍&lt;/p>
&lt;p>&lt;a href="https://www.amazon.co.jp/%E7%8C%AB%E3%81%A7%E3%82%82%E3%82%8F%E3%81%8B%E3%82%8BC-%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E7%AC%AC3%E7%89%88-%E7%8C%AB%E3%81%A7%E3%82%82%E3%82%8F%E3%81%8B%E3%82%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E7%B2%82%E4%BA%95/dp/4797385634" target="_blank" rel="noopener">「猫でもわかる C#プログラミング 第 3 版」粂井康孝 著&lt;/a>&lt;/p>
&lt;figure id="figure-c-書籍画像">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./c_sharp_rec.png" alt="C# 書籍画像" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
C# 書籍画像
&lt;/figcaption>&lt;/figure>
&lt;p>部員コメント&lt;/p>
&lt;p>説明が端的にまとめられて，かつコード例が多い本です。Visual Studio の導入方法も載っているためプログラム入門者に配慮したつくりになっています。&lt;/p>
&lt;p>しかし，コードの説明が少々まとめられすぎているため，巷では「人類が猫以下であることを証明する本」などと呼ばれています。&lt;/p>
&lt;p>それでも，C#の内容全体を網羅的に記載していますので，C#のコードがどのような感じなのかをざっとつかみたい人，辞書的に手元に置いておきたい人にはおススメです。&lt;/p>
&lt;h3 id="python">Python&lt;/h3>
&lt;p>おすすめ書籍&lt;/p>
&lt;p>&lt;a href="https://www.amazon.co.jp/%E3%81%BF%E3%82%93%E3%81%AA%E3%81%AEPython-%E7%AC%AC4%E7%89%88-%E6%9F%B4%E7%94%B0-%E6%B7%B3/dp/479738946X" target="_blank" rel="noopener">「みんなの Python 第 4 版」柴田淳 著&lt;/a>&lt;/p>
&lt;figure id="figure-python書籍画像">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./python_rec.png" alt="Python書籍画像" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Python書籍画像
&lt;/figcaption>&lt;/figure>
&lt;p>部員コメント&lt;/p>
&lt;p>Python の文法をざっとつかむのに使える本です。解説もわかりやすくコード例も多いため，特にこだわりがなければひとまず購入してみるのをおススメします。&lt;/p>
&lt;p>Numpy や Matplotlib などのよく使うライブラリの説明も軽く掲載されています。&lt;/p>
&lt;p>ただし，コード例に著者の趣味が若干漏れ出しています。そこだけ目を瞑れば良い本です。&lt;/p>
&lt;h3 id="webフロントエンド">Web(フロントエンド)&lt;/h3>
&lt;p>おすすめ書籍&lt;/p>
&lt;p>&lt;a href="https://www.amazon.co.jp/HTML-CSS%E3%81%A8Web%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%81%8C-1%E5%86%8A%E3%81%A7%E3%81%8D%E3%81%A1%E3%82%93%E3%81%A8%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%8F%E6%9C%AC-%E6%9C%8D%E9%83%A8-%E9%9B%84%E6%A8%B9/dp/4774190640/ref=sr_1_2?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;amp;crid=2YYCTPBFK1JBG&amp;amp;dchild=1&amp;amp;keywords=html&amp;#43;css&amp;#43;web%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3&amp;amp;qid=1596432292&amp;amp;sprefix=HTML&amp;#43;CSS%2Caps%2C297&amp;amp;sr=8-2" target="_blank" rel="noopener">「HTML&amp;amp;CSS と Web デザインが 1 冊できちんと身につく本」服部 雄樹 著&lt;/a>&lt;/p>
&lt;figure id="figure-webフロントエンド書籍画像">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./web_rec.png" alt="Web(フロントエンド)書籍画像" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Web(フロントエンド)書籍画像
&lt;/figcaption>&lt;/figure>
&lt;p>部員コメント&lt;/p>
&lt;p>html や css の基本的な知識だけでなく、PC やスマホ等様々なデバイスで見ることを想定したレスポンシブデザインのノウハウにも対応しています。
また実際に企業で使われている Web デザインが紹介されており、より実践的な手法をこれ一冊で学ぶことが出来ます。&lt;/p>
&lt;h3 id="gas">GAS&lt;/h3>
&lt;p>おすすめ書籍&lt;/p>
&lt;p>&lt;a href="https://www.amazon.co.jp/Google-Apps-Script%E5%AE%8C%E5%85%A8%E5%85%A5%E9%96%80-%EF%BD%9EGoogle-Suite%E3%81%AE%E6%9C%80%E6%96%B0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%AC%E3%82%A4%E3%83%89%EF%BD%9E-ebook/dp/B07BNB1Z9L" target="_blank" rel="noopener">詳解！ Google Apps Script 完全入門 ～ Google Apps &amp;amp; G Suite の最新プログラミングガイド～ 高橋宣成 著&lt;/a>&lt;/p>
&lt;figure id="figure-gas書籍画像">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./gas_rec.png" alt="GAS書籍画像" loading="lazy" data-zoomable width="200" />&lt;/div>
&lt;/div>&lt;figcaption>
GAS書籍画像
&lt;/figcaption>&lt;/figure>
&lt;p>部員コメント&lt;/p>
&lt;p>GAS の基本的な話から文法、各サービスの使い方まで項目が豊富で、細かいところも抑えてくれているので辞書としても持っておくと助かります！ぜひ読んでみてください！&lt;/p>
&lt;h3 id="終わりに">終わりに&lt;/h3>
&lt;p>これまで部員がおススメする書籍・サイトを紹介してきました！&lt;/p>
&lt;p>気になる分野があればぜひ紹介したものを参考にしてみてください！&lt;/p>
&lt;h2 id="ちょっと部活紹介">ちょっと部活紹介～&lt;/h2>
&lt;p>最後にお願いを！&lt;/p>
&lt;p>アプリ Navi では後期、新しく入ってくれる部員を募集します！&lt;/p>
&lt;p>この夏休みにプログラミングに興味を持ったり、今日紹介したものと同じものやったことある人、&lt;/p>
&lt;p>そして新入生はもちろんの事、何回生の方でも活動に興味のある方はぜひ！&lt;/p>
&lt;p>以下にて、部の情報や、後期での新歓情報を随時更新するのでチェックをよろしくお願いします！&lt;/p>
&lt;p>&lt;a href="https://twitter.com/opuappnavi" target="_blank" rel="noopener">Twitter&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://opuappnavi.com/" target="_blank" rel="noopener">HomePage&lt;/a>&lt;/p></description></item><item><title>WebAPI で手軽に機能を実装する</title><link>https://blog.opuappnavi.com/post/webapi-recommendation/</link><pubDate>Wed, 22 Jul 2020 21:14:27 +0900</pubDate><guid>https://blog.opuappnavi.com/post/webapi-recommendation/</guid><description>&lt;p>今日は WebAPI の紹介と簡単に使い方について書きたいと思います。
現在さまざまな WebAPI とそれの使い方についての記事がたくさんある中で大体内容は似てくると思いますが、その存在を知ってもらい、開発の選択肢の一つになれば幸いです。&lt;/p>
&lt;h1 id="api-とは">API とは&lt;/h1>
&lt;p>最初に簡単に API の説明をしておくと、
API とは Application Programming Interface の略で、
その文字通りの意味をとると、アプリケーションとプログラミングをつなぎ合わせるものということになります。&lt;/p>
&lt;p>API にもいろいろありますが、一般的にはある機能を API として公開することで、第三者がその機能を API を呼び出すだけで簡単に利用できます。&lt;/p>
&lt;p>これらを用いることで&lt;strong>欲しい機能を一からプログラミングすることなく簡単に実装することができ、作業の効率化、セキュリティの向上&lt;/strong>等が見込まれます。&lt;/p>
&lt;h1 id="webapi">webAPI&lt;/h1>
&lt;p>では webAPI とは何かというと、もちろん API の一種で、
その名の通り web 上に公開されていて、外部からの呼び出しで利用可能な API です。&lt;/p>
&lt;p>Amazon や楽天と言ったサイトの商品情報を取得したり、利用することで Google の提供している OCR(光文字認識)といった、機械学習的な機能を取り入れることなどが出来ます。&lt;/p>
&lt;p>他にもさまざまなシチュエーションで活用できる webAPI があるので下記サイトを挙げておきます。&lt;/p>
&lt;p>またこれらは web サイトだけではなくスマホアプリや物によればゲーム開発などにも使えるので知っていて損はないのかと思います。&lt;/p>
&lt;p>・参考サイト&lt;/p>
&lt;p>&lt;a href="https://qiita.com/mikan3rd/items/ba4737023f08bb2ca161" target="_blank" rel="noopener">個人でも使える！おすすめ API 一覧&lt;/a>&lt;/p>
&lt;h2 id="おススメ-webapi">おススメ webAPI&lt;/h2>
&lt;p>サイトに載っているものから、個人的におススメのものを何点か挙げておきます。&lt;/p>
&lt;h3 id="google-sheets-api">Google Sheets API&lt;/h3>
&lt;p>&lt;a href="https://developers.google.com/sheets/api/reference/rest/" target="_blank" rel="noopener">公式サイト&lt;/a>&lt;/p>
&lt;p>google spreadsehet の書き込み、読み込みなどができ、簡易的なデータベースとして利用できます。特にちょっとしたアプリなどに利用すると便利です。&lt;/p>
&lt;h3 id="google-cloud-vision-api">Google Cloud Vision API&lt;/h3>
&lt;p>&lt;a href="https://cloud.google.com/vision/docs/quickstart" target="_blank" rel="noopener">公式サイト&lt;/a>&lt;/p>
&lt;p>顔や文字などの画像認識ができる API です。やってみたら結構楽しかったりします。無料で十分使えますが、その場合使用制限があるので注意が必要です。&lt;/p>
&lt;h3 id="line-messaging-api">LINE Messaging API&lt;/h3>
&lt;p>&lt;a href="https://developers.line.me/ja/docs/messaging-api/overview/" target="_blank" rel="noopener">公式サイト&lt;/a>&lt;/p>
&lt;p>ラインで自動返信する bot などを作ることが出来る API です。。既存のもので bot を使えるやつがありますが、これを利用するとより自由度が高い bot を作成することが可能です。&lt;/p>
&lt;p>今回紹介したもの以外にもギャグみたいな面白いものだったり、便利なものが色々とあるのでこんなのあったらいいなと思った時に調べてみると実はあるかもしれません。&lt;/p>
&lt;h1 id="使い方の例">使い方の例&lt;/h1>
&lt;p>webAPI では現在、基本的にデータのやり取りに json 形式が利用されます。（もちろん xml 形式を用いるものもあります。）&lt;/p>
&lt;p>json については簡単に参考サイトを載せておきますので興味のある人は見てみてください。&lt;/p>
&lt;p>・json ってまず何？&lt;/p>
&lt;p>&lt;a href="https://wa3.i-3-i.info/word13798.html" target="_blank" rel="noopener">「分かりそう」で「分からない」でも「分かった」気になれる IT 用語辞典&lt;/a>&lt;/p>
&lt;p>・json の使い方とか&lt;/p>
&lt;p>&lt;a href="https://reffect.co.jp/html/what_is_json" target="_blank" rel="noopener">JSON ってなに?これさえ読めば理解が深まる&lt;/a>&lt;/p>
&lt;p>今回は上記の API 一覧にのっている「ぐるなび API」を例として使い方をざっくり紹介したいと思います。&lt;/p>
&lt;h2 id="ぐるなび-api-って">ぐるなび API って？&lt;/h2>
&lt;p>ぐるなび API はぐるなびが提供する WebAPI で、ぐるなびに登録されている店の情報や、分野別の店の検索等が出来ます。&lt;/p>
&lt;p>日本の企業でサイトも日本語で書かれていて、利用方法も簡単な url の取得だけで、テストツールも分かりやすく使いやすいことから webAPI を初めて利用する初心者の方に個人的にはおススメです。&lt;/p>
&lt;h2 id="ぐるなび-api-の使い方">ぐるなび API の使い方&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://api.gnavi.co.jp/api/" target="_blank" rel="noopener">ぐるなび API のサイト&lt;/a>にアクセスする。&lt;br>
利用規約や初めての方へなどを予め読んでおくと良いです。
また 「API 仕様」の欄にてどのような API が提供されているかを詳しく見ることで使いたい機能を整理します。&lt;/p>
&lt;p>この API からは、レストラン検索 API や都道府県マスタ取得 API などがあり、レストランを検索したり、業態別、地域別にお店を絞り込むことができるようです。
&lt;figure id="figure-ぐるなびapiサイト">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./gurunavi.png" alt="ぐるなびAPIサイト" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
ぐるなびAPIサイト
&lt;/figcaption>&lt;/figure>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>テストツールを使ってみる&lt;br>
API 仕様を確認した後はテストツールを使ってみましょう。上部のテストツールという欄をクリックします。そうすると下のような画面になります。&lt;/p>
&lt;p>今回は試しにレストラン検索 API で検索タブを name にラーメンにでもしてクエリを送信をクリックしてみましょう。&lt;/p>
&lt;p>そうするとクエリを送信ボタンの下に json 形式のデータが出てきます。
これを見ると、たくさんのお店、かつラーメン屋が出てきたことが分かります。&lt;/p>
&lt;p>他にも店の場所や説明なども載っていると思いますが、上記の key を指定し、条件を絞り込むことでそれらの指定をすることが出来ます。&lt;/p>
&lt;figure id="figure-テストツール画面">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./gurunavi2.png" alt="テストツール画面" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
テストツール画面
&lt;/figcaption>&lt;/figure>
&lt;p>次に大阪難波駅にあるラーメン屋さんのデータを json 形式で取得してみましょう。&lt;/p>
&lt;p>検索の地域を絞るには同ぐるなび API にある&amp;quot;エリアLマスタ取得API&amp;quot;を使ってみます。&lt;/p>
&lt;p>この API は場所のコードのデータを返してくれるのでそこから大阪難波の欄を探し、その&amp;quot;areacode_l&amp;quot;の値をメモしておきましょう。&lt;/p>
&lt;p>例）&lt;/p>
&lt;pre>&lt;code class="language-json">&amp;quot;garea_large&amp;quot;:[
...
{
&amp;quot;areacode_l&amp;quot;: &amp;quot;AREAL3142&amp;quot;,
&amp;quot;areaname_l&amp;quot;: &amp;quot;難波・道頓堀&amp;quot;,
&amp;quot;pref&amp;quot;: {
&amp;quot;pref_code&amp;quot;: &amp;quot;PREF27&amp;quot;,
&amp;quot;pref_name&amp;quot;: &amp;quot;大阪府&amp;quot;
}
},
...
]
&lt;/code>&lt;/pre>
&lt;p>次にレストラン検索 API に戻り、areacode_l をメモした値にした後、
クエリを送信すると、大阪難波駅周辺のラーメン屋の json データを取得できるようになります。&lt;/p>
&lt;p>取りたいデータが出てきたらその上にある URL という欄の url をメモしておきます。&lt;/p>
&lt;p>例）&lt;code>https://api.gnavi.co.jp/RestSearchAPI/v3/?keyid=(ここは後に取得するkeyidの値）&amp;amp;name=ラーメン&amp;amp;areacode_l=AREAL3310&lt;/code>&lt;/p>
&lt;figure id="figure-検索例">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./gurunavi3.png" alt="検索例" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
検索例
&lt;/figcaption>&lt;/figure>
&lt;p>その他にも現在位置を別の API で取得して今いる位置の近くの店を検索したりするなど様々な条件で試してみるのもいいかもしれません。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>新規アカウント登録&lt;br>
テストである程度データの構造が分かったら、次は実際に使用します。
ぐるなび API を利用するには、アカウント登録で個人情報や利用目的など、いくつかの項目に答える必要があります。&lt;/p>
&lt;p>利用用途の欄がありますが、とりあえず始めるだけなので’試しに使用’でいいでしょう。これは使用期限はありますが、機能としては問題ないです。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>コードに取り入れる&lt;br>
アカウントの登録が終わったらぐるなびからアクセスキーが発光されるので、
先ほどメモを取った url の keyid 以下の文字列をアクセスキーに置き換え、利用することで指定した条件のお店を検索することが出来ます。&lt;/p>
&lt;p>コードについては利用方法は使用言語によって異なってくると思うので、詳しい話は省きますが、とりあえず GAS(Google Apps Script)での利用例を載せておきます。&lt;/p>
&lt;p>(GAS についての紹介はよければ下まで)
&lt;div class="card-simple">
&lt;div class="article-metadata">
&lt;div>
&lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/nobu/">Nobu&lt;/a>&lt;/span>
&lt;/div>
&lt;span class="article-date">
2020/05/28 投稿
( 2020/05/30 最終更新 )
&lt;/span>
&lt;/div>
&lt;div class="section-subheading article-title mb-1 mt-3">
&lt;a href="https://blog.opuappnavi.com/post/gas-recommendation/">手軽に始める！GAS を使ってみませんか～&lt;/a>
&lt;/div>
&lt;a href="https://blog.opuappnavi.com/post/gas-recommendation/" class="summary-link">
&lt;div class="article-style">
&lt;p>Google Apps Scriptの紹介&lt;/p>
&lt;/div>
&lt;/a>
&lt;div class="btn-links">
&lt;a class="btn btn-outline-primary btn-page-header btn-sm" href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/">
プロジェクト
&lt;/a>
&lt;/div>
&lt;/div>
&lt;/p>
&lt;pre>&lt;code class="language-JavaScript:コード.gs">function myFunction(e) {
//取得したアクセスキー
var gurunaviAPI = PropertiesService.getScriptProperties().getProperty('GURUNAVI_TOKEN');
//データを取得するためにアクセスするurl
var url = 'https://api.gnavi.co.jp/RestSearchAPI/v3/';
url = url + '?keyid='+ gurunaviAPI;
var gurunaviId = url + &amp;quot;&amp;amp;name=ラーメン&amp;amp;areacode_l=AREAL3142&amp;quot;
var shop_url = UrlFetchApp.fetch(gurunaviId);
//jsonのデータを配列に変換
var json = JSON.parse(shop_url.getContentText());
//取得したデータ一覧表示
Logger.log(json);
//rest以下の項目を取得できる
//検索候補１つ目の店名を表示
Logger.log(json[&amp;quot;rest&amp;quot;][0][&amp;quot;name&amp;quot;]);
}
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ol>
&lt;p>ここまで順を追って簡単にぐるなび API のデータの取得から利用方法まで見てきましたが、条件をある程度絞った中でユーザーに条件を入力してもうなど紹介したもの以外でもやり方は色々あると思うのでよければ試してみてください！&lt;/p>
&lt;p>あと注意としてはお店のデータが&amp;quot;ぐるなび&amp;quot;と&amp;quot;ぐるなび API&amp;quot; では異なり、思ったような店が出力されないというのがあるのでまずはお試しという形で利用したほうがいいかもしれないです。&lt;/p>
&lt;h1 id="参考サイト">参考サイト&lt;/h1>
&lt;p>今さら聞けない IT 用語：やたらと耳にするけど「API」って何？&lt;/p>
&lt;p>&lt;a href="https://data.wingarc.com/what-is-api-16084">https://data.wingarc.com/what-is-api-16084&lt;/a>&lt;/p>
&lt;h1 id="最後に">最後に&lt;/h1>
&lt;p>改めて API、WebAPI を用いると簡単に機能が実装できるので、特に開発期間が短いハッカソンなどのイベント時では特に重宝しますし、これらの WebAPI を組み合わせることで、ある程度十分使えるものができるのではと思います。次回のイベントやもちろん普段の開発にでも知らなかった人は使ってみるといいかもしれません！&lt;/p></description></item><item><title>スマホゲームの権利表記</title><link>https://blog.opuappnavi.com/post/smartphone-game-licenses/</link><pubDate>Fri, 10 Jul 2020 16:21:59 +0900</pubDate><guid>https://blog.opuappnavi.com/post/smartphone-game-licenses/</guid><description>&lt;p>多くの人が当たり前のようにスマートフォンを持つ今日、スマホでゲームをプレイすることもまた当たり前となりました。精巧な3Dモデル、滑らかな2Dアニメーション、フルボイスのストーリーシーンなど、PCゲームやコンソールゲームに迫るようなクオリティーのスマホゲームも増えています。&lt;/p>
&lt;p>プログラミングの勉強をしていて、いつか多くの人にプレイされるようなゲームを作りたいと思っている人ならば、自分がプレイしているスマホゲームがどのように作られているのか、知りたいと思ったことがあるかもしれません。&lt;/p>
&lt;p>今回は、そんなゲームの中身をほんの少しだけ知れる、もとい知った気になれるスマホゲームの「権利表記」を紹介します。&lt;/p>
&lt;h1 id="ライブラリーとライセンス">ライブラリーとライセンス&lt;/h1>
&lt;p>ゲームやアプリ開発において、多くのプログラマーはライブラリーというものを利用します。&lt;/p>
&lt;blockquote>
&lt;p>ライブラリは、汎用性の高い複数のプログラムを再利用可能な形でひとまとまりにしたものである。 (Wikipedia)&lt;/p>
&lt;/blockquote>
&lt;p>世界中のプログラマーが作成した様々なライブラリーを使うことで、自分でプログラムすることなく便利な機能を利用できるようになります。&lt;/p>
&lt;p>とても便利なライブラリーですが、利用する際に注意する点があります。それがライセンスです。ここでのライセンスとはオープンソースソフトウェアのソフトウェアライセンスのことを指します。&lt;/p>
&lt;blockquote>
&lt;p>ソフトウェアライセンスは、コンピュータのソフトウェアについて、ソフトウェア利用者が遵守すべき事項を記載した文書である。(Wikipedia)&lt;/p>
&lt;/blockquote>
&lt;p>そのライブラリーを改変してもよいのか、商用利用してもよいのか、などを記した文書ファイルがほぼ全てのライブラリーに同梱されており、ライブラリーを利用する際はそのライセンスの内容を守る必要があります。&lt;/p>
&lt;h1 id="スマホゲームの権利表記">スマホゲームの権利表記&lt;/h1>
&lt;p>一部のスマホゲームには、そのゲームが使用しているライブラリーのライセンスを表示する「権利表記」という項目があります。基本的にメニューの深いところにあるため、スマホゲームをプレイしている人が「権利表記」を見ることはほとんどありません。&lt;/p>
&lt;p>権利表記にはライセンスと一緒に、どのライセンスがどのライブラリーのものなのかを併記していることがあります。これを利用すれば、権利表記を読むことによって、そのスマホゲームにどんなライブラリーが使われているのかを知ることができます。多くの人にプレイされているゲームがどのようなライブラリーを使っているのかを知ることは、プログラミングを学ぶ上でとても役に立つと思います。&lt;/p>
&lt;h1 id="権利表記の見方">権利表記の見方&lt;/h1>
&lt;p>例として、自分がプレイしているスマホゲームの、権利表記の見方を紹介します。
&lt;div class="alert alert-note">
&lt;div>
各ゲームの画像は、アプリのタイトル画面(マリカのみロード画面)から引用しました。
&lt;/div>
&lt;/div>
&lt;/p>
&lt;h2 id="sao-ab">SAO AB&lt;/h2>
&lt;p>
&lt;figure id="figure-ソードアートオンラインアリシゼーションブレイディング">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./SAOAB_Title.png" alt="ソードアート・オンライン　アリシゼーション・ブレイディング" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
ソードアート・オンライン　アリシゼーション・ブレイディング
&lt;/figcaption>&lt;/figure>
&lt;a href="https://ab.sao-game.jp/" target="_blank" rel="noopener">公式サイト&lt;/a>&lt;/p>
&lt;p>右上のメニューボタン
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>その他&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>コピーライト&lt;/strong>&lt;/p>
&lt;h2 id="feヒーローズ">FEヒーローズ&lt;/h2>
&lt;p>
&lt;figure id="figure-ファイアーエムブレムヒーローズ">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./FEHeroes_Title.png" alt="ファイアーエムブレム　ヒーローズ" loading="lazy" data-zoomable width="300" />&lt;/div>
&lt;/div>&lt;figcaption>
ファイアーエムブレム　ヒーローズ
&lt;/figcaption>&lt;/figure>
&lt;a href="https://fire-emblem-heroes.com/ja/" target="_blank" rel="noopener">公式サイト&lt;/a>&lt;/p>
&lt;p>&lt;strong>その他&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>FAQ等&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>このアプリについて&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>権利表記&lt;/strong>&lt;/p>
&lt;h2 id="ポケマス">ポケマス&lt;/h2>
&lt;p>
&lt;figure id="figure-pokémon-masters">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./PokemonMasters_Title.png" alt="Pokémon Masters" loading="lazy" data-zoomable width="300" />&lt;/div>
&lt;/div>&lt;figcaption>
Pokémon Masters
&lt;/figcaption>&lt;/figure>
&lt;a href="https://pokemonmasters-game.com/ja-JP" target="_blank" rel="noopener">公式サイト&lt;/a>&lt;/p>
&lt;p>ポリゴンフォン
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>その他&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>このアプリについて&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>権利表記&lt;/strong>&lt;/p>
&lt;h2 id="マリカ">マリカ&lt;/h2>
&lt;p>
&lt;figure id="figure-マリオカートツアー">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./MarioKart_Title.png" alt="マリオカートツアー" loading="lazy" data-zoomable width="300" />&lt;/div>
&lt;/div>&lt;figcaption>
マリオカートツアー
&lt;/figcaption>&lt;/figure>
&lt;a href="https://mariokarttour.com/ja-JP" target="_blank" rel="noopener">公式サイト&lt;/a>&lt;/p>
&lt;p>&lt;strong>メニュー&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>設定&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>ヘルプとお問い合わせ&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>権利表記&lt;/strong>&lt;/p>
&lt;h2 id="とあるif">とあるIF&lt;/h2>
&lt;p>
&lt;figure id="figure-とある魔術の禁書目録インテグラルファクター">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./ToaruIf_Title.png" alt="とある魔術の禁書目録　インテグラルファクター" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
とある魔術の禁書目録　インテグラルファクター
&lt;/figcaption>&lt;/figure>
&lt;a href="https://www.jp.square-enix.com/index-if/" target="_blank" rel="noopener">公式サイト&lt;/a>&lt;/p>
&lt;p>&lt;strong>メニュー&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>規約&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>権利表記&lt;/strong>&lt;/p>
&lt;h2 id="このファン">このファン&lt;/h2>
&lt;p>
&lt;figure id="figure-この素晴らしい世界に祝福をファンタスティックデイズ">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./KonoFan_Title.png" alt="この素晴らしい世界に祝福を!　ファンタスティックデイズ" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
この素晴らしい世界に祝福を!　ファンタスティックデイズ
&lt;/figcaption>&lt;/figure>
&lt;a href="https://konosubafd.jp/" target="_blank" rel="noopener">公式サイト&lt;/a>&lt;/p>
&lt;p>&lt;strong>メニュー&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>サポート&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>権利表記&lt;/strong>&lt;/p>
&lt;h2 id="装甲娘">装甲娘&lt;/h2>
&lt;p>
&lt;figure id="figure-装甲娘-ミゼレムクライシス">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./SoukouMusume_Title.png" alt="装甲娘 ミゼレムクライシス" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
装甲娘 ミゼレムクライシス
&lt;/figcaption>&lt;/figure>
&lt;a href="https://soukou-musume.com/" target="_blank" rel="noopener">公式サイト&lt;/a>&lt;/p>
&lt;p>&lt;strong>メニュー&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>サポート&lt;/strong>
&lt;i class="fas fa-arrow-right pr-1 fa-fw">&lt;/i>&lt;strong>権利表記&lt;/strong>&lt;/p>
&lt;h1 id="権利表記のまとめ">権利表記のまとめ&lt;/h1>
&lt;p>今回権利表記を調べた結果の推測を表にまとめました。&lt;/p>
&lt;div class="alert alert-warning">
&lt;div>
あくまで推測であり、必ずしも表の通りとは限らないので注意してください。
&lt;/div>
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">ゲーム名&lt;/th>
&lt;th style="text-align:center">クロスプラットフォーム&lt;/th>
&lt;th style="text-align:center">2Dアニメーション&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">SAO AB&lt;/td>
&lt;td style="text-align:center">Cocos2d-x&lt;/td>
&lt;td style="text-align:center">Spine / Sprite Studio&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">FEヒーローズ&lt;/td>
&lt;td style="text-align:center">Cocos2d-x&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">ポケマス&lt;/td>
&lt;td style="text-align:center">Cocos2d-x&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">マリカ&lt;/td>
&lt;td style="text-align:center">Unity&lt;/td>
&lt;td style="text-align:center">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">とあるIF&lt;/td>
&lt;td style="text-align:center">Unity&lt;/td>
&lt;td style="text-align:center">Live 2D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">このファン&lt;/td>
&lt;td style="text-align:center">Unity&lt;/td>
&lt;td style="text-align:center">Live 2D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">装甲娘&lt;/td>
&lt;td style="text-align:center">Unity&lt;/td>
&lt;td style="text-align:center">Live 2D&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>「Unity」&lt;/strong> と表記しているゲームは、権利表記にUnityが記載されているわけではありませんが、Unity用のライブラリーが記載されています。&lt;br>
&lt;strong>「Live 2D」&lt;/strong> は、権利表記に記載されているわけではありませんが、タイトル画面にロゴが表示されます。&lt;/p>
&lt;h2 id="クロスプラットフォーム">クロスプラットフォーム&lt;/h2>
&lt;p>&lt;a href="https://it-trend.jp/development_tools/article/32-0027" target="_blank" rel="noopener">このサイト&lt;/a>の説明を引用すると、&lt;/p>
&lt;blockquote>
&lt;p>クロスプラットフォームとは、iOS、Android、Windowsなど複数の動作環境で作動するプログラムのことです。&lt;/p>
&lt;/blockquote>
&lt;p>クロスプラットフォームなゲーム開発ソフトを使用することで、AndroidとiPhoneで別々に開発することなく、両方でプレイできるゲームをつくることができます。&lt;/p>
&lt;h1 id="おわりに">おわりに&lt;/h1>
&lt;p>今回取り上げたライブラリー以外にも、権利表記にはたくさんのライブラリーが書かれています。興味を持った方は、自分のプレイしているゲームの権利表記を読んでみてはいかがでしょうか。&lt;/p>
&lt;h1 id="参考文献">参考文献&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA">https://ja.wikipedia.org/wiki/%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9">https://ja.wikipedia.org/wiki/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://it-trend.jp/development_tools/article/32-0027">https://it-trend.jp/development_tools/article/32-0027&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>[Unity] 面倒なエフェクトはShaderGraphで作ろう</title><link>https://blog.opuappnavi.com/post/shadergraph-introduction/</link><pubDate>Mon, 06 Jul 2020 15:31:53 +0900</pubDate><guid>https://blog.opuappnavi.com/post/shadergraph-introduction/</guid><description>&lt;h1 id="1-はじめに">1. はじめに&lt;/h1>
&lt;p>Unityユーザーの9割くらいは &lt;strong>”Shader”&lt;/strong> という文字を見るとアレルギー反応を起こすことでしょう。Shaderプログラムの中身を編集してオブジェクトの質感を変えたりアニメーションを持たせたりするのは骨が折れますし、CG自体の知識が無いとエラーから抜け出すのも困難です。構文の見た目も結構グロテスクなため、素人にとっては到底手に追えない代物と化しています。かといってUnity C#で実装するのもややこしいです…。&lt;/p>
&lt;p>そこで今回紹介したいのが &lt;strong>&amp;ldquo;ShaderGraph&amp;rdquo;&lt;/strong> というShaderエディタです。これはノードと呼ばれる演算ブロックを線で結んでいくだけで簡単にエフェクトや制御を実装できる優れモノで、Unity 2018 以降のバージョンで利用できます。オモチャ感覚で操作できるため、Unity始めたての人でも扱えるほど簡単な点が魅力的です。&lt;/p>
&lt;h1 id="2-私の開発環境">2. 私の開発環境&lt;/h1>
&lt;ul>
&lt;li>PC &amp;hellip; ASUS ZENBOOK 13 (&lt;a href="https://www.asus.com/jp/Laptops/ASUS-ZenBook-13-UX331UN/" target="_blank" rel="noopener">スペック&lt;/a>)&lt;/li>
&lt;li>OS &amp;hellip; Windows 10 home&lt;/li>
&lt;li>Unity version &amp;hellip; 2019.3&lt;/li>
&lt;li>Unity Projectテンプレート &amp;hellip; Universal Render Pipeline(URP)&lt;/li>
&lt;/ul>
&lt;h1 id="3-shadergraphの導入">3. ShaderGraphの導入&lt;/h1>
&lt;h2 id="3-1-shadergraphの動作環境">3-1. ShaderGraphの動作環境&lt;/h2>
&lt;p>ShaderGraphを使うにあたってひとつだけ制約があります。それは、UnityのProject作成時のテンプレート選択で &lt;strong>&amp;ldquo;Universal RP(URP)&amp;quot;&lt;/strong> または &lt;strong>&amp;ldquo;High Definition RP(HDRP)&amp;quot;&lt;/strong> を指定する必要があることです。Unity 2019.3より前だとURPはLightweight RP(LWRP)というテンプレート名で備わっていますが、中身はほとんど同じものです。&lt;/p>
&lt;h2 id="3-2-projectの作成">3-2. Projectの作成&lt;/h2>
&lt;p>軽量のため今回はURPを使います。まずURPテンプレートでProjectを作成し、次に [Window→Package Manager] に飛んでUniversal RPとShaderGraphをInstallしてください。既にインストールされている場合 (ボタンにUp to dateと表示されている場合) は再インストールしなくても大丈夫です。&lt;/p>
&lt;figure id="figure-urpテンプレートの作成">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./Temp_URP.png" alt="URPテンプレートの作成" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
URPテンプレートの作成
&lt;/figcaption>&lt;/figure>
&lt;figure id="figure-urpのインストール画面">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./Install_URP.png" alt="URPのインストール画面" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
URPのインストール画面
&lt;/figcaption>&lt;/figure>
&lt;p>Unity 2019.3より前のバージョンだとLightweight RPという名前になっているので注意です。LWRPの導入手順については先人が投稿したページを参照してください。LWRPとShaderGraphのインストールができたらOKです。&lt;/p>
&lt;p>&lt;a href="http://nn-hokuson.hatenablog.com/entry/2018/05/08/212502" target="_blank" rel="noopener">【Unityシェーダ】Shader Graph超入門&lt;/a>&lt;/p>
&lt;p>これでセットアップが完了しました。次は私と一緒にShaderGraphを触っていきましょう。&lt;/p>
&lt;h1 id="4-shadergraphで簡単なuvアニメーションを実装してみよう">4. ShaderGraphで簡単なUVアニメーションを実装してみよう&lt;/h1>
&lt;p>ここではチュートリアルとしてObjectの色を七色に変化させてみます。(プリセットのSceneはごちゃごちゃしているので新規Sceneを作って作業することをお勧めします)&lt;/p>
&lt;figure id="figure-制作物見本">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./mihon.gif" alt="制作物見本" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
制作物見本
&lt;/figcaption>&lt;/figure>
&lt;h2 id="4-1-shadergraphの作成と画面説明">4-1. ShaderGraphの作成と画面説明&lt;/h2>
&lt;p>ShaderGraphのEditorは、Projectウィンドウから[Shader→Unlit Graph]を選択することで作成できます。ShaderGraphの種類はいくつかありますが、ここではLightに依存せず一番軽量なUnlitを用います。生成されたEditorを開いてみると下のような画面が表示されます。&lt;/p>
&lt;figure id="figure-shadergraphの作成">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./ShaderGraph_create.png" alt="ShaderGraphの作成" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
ShaderGraphの作成
&lt;/figcaption>&lt;/figure>
&lt;p>①ではShaderGraphの名前を変更できたり変数を管理できます。②の領域ではノードの編集ができて、出力は④のプレビューでリアルタイムに確認できます。③のマスターノードは色々な項目がありますが、今回はColorのみを触ります。&lt;/p>
&lt;p>また、Editorの基本操作としては下の4つを覚えておけばとりあえず十分です。覚えていなくても感覚的な操作で多分なんとかなります。&lt;/p>
&lt;ul>
&lt;li>拡大縮小: [マウスのホイールを回転]&lt;/li>
&lt;li>スクロール: [Alt + マウス左ドラッグ] or [マウスのホイールをドラッグ]&lt;/li>
&lt;li>ノード作成: [右クリック→Create Node]&lt;/li>
&lt;li>ノード接続: [〇アイコンを左ドラッグし、接続先の〇アイコンまで線を伸ばす]&lt;/li>
&lt;li>接続線の削除: [線を右クリック→Delete]&lt;/li>
&lt;/ul>
&lt;h2 id="4-2-今回使うテクスチャ">4-2. 今回使うテクスチャ&lt;/h2>
&lt;p>テクスチャは画像編集ソフトGIMPを使って作成しました。上手いことやれば素材画像ごとShaderGraphで作れたかもですが、私の知識不足により別のソフトに頼ることにしました。以下の画像ファイルをProjectの適当なフォルダに入れてください。&lt;/p>
&lt;figure id="figure-虹色テクスチャの素材画像">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./Rainbow.jpg" alt="虹色テクスチャの素材画像" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
虹色テクスチャの素材画像
&lt;/figcaption>&lt;/figure>
&lt;p>参考: &lt;a href="https://sore-zettai.com/gimp-rainbow/" target="_blank" rel="noopener">フリーの画像編集ソフト GIMP を使って、レインボーグラデーションを作る方法&lt;/a>&lt;/p>
&lt;h2 id="4-3-ノードの追加">4-3. ノードの追加&lt;/h2>
&lt;p>完成イメージの要件は次の通り。&lt;/p>
&lt;ul>
&lt;li>虹色のテクスチャが貼ってある&lt;/li>
&lt;li>テクスチャがスクロールする&lt;/li>
&lt;/ul>
&lt;p>テクスチャのスクロールはTiling And Offset というノード(UVスクロール)で実装したいと思います。スクロール用の変数にはTime ノードを、テクスチャの取得にはSample Texture 2D ノードを使用します。右クリックを使って以下のようにノードを追加してください。&lt;/p>
&lt;figure id="figure-ノードの追加">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./Node_add.gif" alt="ノードの追加" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
ノードの追加
&lt;/figcaption>&lt;/figure>
&lt;p>ノードを追加できたら線を繋いでいきましょう。ノードの各項目の説明は割愛しますが、gifの通りに繋ぐとテクスチャがスクロールしてくれます。&lt;/p>
&lt;figure id="figure-ノードの接続">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./Node_connection.gif" alt="ノードの接続" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
ノードの接続
&lt;/figcaption>&lt;/figure>
&lt;h2 id="4-4-materialへの出力方法">4-4. Materialへの出力方法&lt;/h2>
&lt;p>ShaderGraphで編集した内容をMaterialへ適用するには以下のように操作します。Save Assetを押してEditor画面から離脱し、ShaderGraphを右クリックして[Create→Material]を選択すれば完了です。&lt;/p>
&lt;figure id="figure-materialの出力">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./Rainbow.gif" alt="Materialの出力" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Materialの出力
&lt;/figcaption>&lt;/figure>
&lt;p>Objectは虹色になりましたか？成功したら次はスクロール速度を変えてみます。速度を可変にするには、変数としてSliderノードを追加し、さらに変数を反映させるためにMultiplyノード(掛け算)を追加します。Multiplyノードの入力にTimeノードとSliderノードを追加すれば実装完了です。&lt;/p>
&lt;figure id="figure-スクロールスピードの変更">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./Rainbow_speed.gif" alt="スクロールスピードの変更" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
スクロールスピードの変更
&lt;/figcaption>&lt;/figure>
&lt;h2 id="4-5-変数をmaterial上で変更する方法">4-5. 変数をMaterial上で変更する方法&lt;/h2>
&lt;p>先程はEditor上でスクロールを設定していましたが、実用面を考えるとこれではやや不便です。そこで、次はEditorを開かなくてもMaterialのInspector上で速度を扱えるようにしたいと思います。&lt;/p>
&lt;p>やり方は、Inspectorで参照したいノード(ここではSliderノード)を選択し、右クリックから[Convert to Property]を選択するだけです。すると、MaterialのInspector上でSliderの項目が追加されます。とても簡単ですね。20秒でできてしまいました。&lt;/p>
&lt;figure id="figure-inspector上での変数参照方法">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./Rainbow_speed_Inspector.gif" alt="Inspector上での変数参照方法" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Inspector上での変数参照方法
&lt;/figcaption>&lt;/figure>
&lt;h1 id="5-まとめ">5. まとめ&lt;/h1>
&lt;p>今回はShaderGraphについて紹介しました。ノードを作って繋ぐだけで簡単にMaterialの制御を実装でき、リアルタイムにグラフィックを確認できるため頭のイメージを具現化しやすいです。貴方にその有難みを少しでも体感して頂けたなら投稿者冥利に尽きます。&lt;/p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./appnavi.gif" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;p>最後に、先人たちがShaderGraphで作った作品をいくつか紹介します。「こんなこともできるんだな」と感じてインスピレーションが膨らむはずです。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.matatabi-ux.com/entry/2018/12/13/100000" target="_blank" rel="noopener">Unity のシェーダーグラフで描画する軌跡をアニメーションさせる&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bravememo.hatenablog.com/entry/2020/05/13/111657" target="_blank" rel="noopener">【Unity】ShaderGraphでLoadingっぽいアイコンを作る&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/o_s_t/items/c546962bbd9f064c9908" target="_blank" rel="noopener">UnityのShaderGraphでPBRシェーダーを作ってみる&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Youtubeでも数々の素晴らしい動画がアップロードされているので一度検索してみてください。&lt;/p>
&lt;h1 id="参考にした書籍">参考にした書籍&lt;/h1>
&lt;p>森 哲哉, 秋山 高廣, 他, &amp;ldquo;Unity デザイナーズ・バイブル&amp;rdquo;, ボーンデジタル社(2020).
&lt;a href="https://www.borndigital.co.jp/book/18319.html" target="_blank" rel="noopener">Unity デザイナーズ・バイブル&lt;/a>&lt;/p></description></item><item><title>機械学習入門</title><link>https://blog.opuappnavi.com/post/machine-learning-newbie/</link><pubDate>Wed, 01 Jul 2020 10:11:52 +0900</pubDate><guid>https://blog.opuappnavi.com/post/machine-learning-newbie/</guid><description>&lt;h1 id="はじめに">はじめに&lt;/h1>
&lt;p>この記事は多くの理系大学生が1年生時に習う微分積分、線形代数が機械学習の分野においてどの様に活用されているのかを示すことで勉強のモチベーションを上げてもらおう、という趣旨の記事となっています。ここでは下の図のような、複数の座標上の点から推定される最適な直線を引くアルゴリズムを取り扱います。&lt;/p>
&lt;figure id="figure-before">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./before.png" alt="before" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
before
&lt;/figcaption>&lt;/figure>
&lt;figure id="figure-after">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./after.png" alt="after" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
after
&lt;/figcaption>&lt;/figure>
&lt;h2 id="最急降下法">最急降下法&lt;/h2>
&lt;p>機械学習の一例として、偏微分を用いた最急降下法というアルゴリズムを紹介します。&lt;a href="https://ja.wikipedia.org/wiki/%E6%9C%80%E6%80%A5%E9%99%8D%E4%B8%8B%E6%B3%95#:~:text=%E6%9C%80%E6%80%A5%E9%99%8D%E4%B8%8B%E6%B3%95%EF%BC%88%E3%81%95%E3%81%84%E3%81%8D%E3%82%85%E3%81%86%E3%81%93%E3%81%86,%E3%81%A6%E3%81%84%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AF%E5%A4%9A%E3%81%84%E3%80%82" target="_blank" rel="noopener">ウィキペディア&lt;/a>では最急降下法を以下の様に説明しています。&lt;/p>
&lt;blockquote>
&lt;p>最急降下法は、関数の傾きのみから、関数の最小値を探索する連続最適化問題の勾配法のアルゴリズムの一つ。&lt;/p>
&lt;/blockquote>
&lt;p>すなわち下図のように、関数上の初期地点から微分によって求まる傾きのマイナス方向へ点を移動させていき、初期地点から最も近い最小点(極小値)を求めるアルゴリズムです。&lt;/p>
&lt;figure id="figure-最急降下法">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./%e6%9c%80%e6%80%a5%e9%99%8d%e4%b8%8b%e6%b3%95.png" alt="最急降下法" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
最急降下法
&lt;/figcaption>&lt;/figure>
&lt;p>式としては以下のようになります。αは点の移動距離の大きさを決めるパラメーターです。&lt;/p>
&lt;figure id="figure-最急降下法式">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./%e6%9c%80%e6%80%a5%e9%99%8d%e4%b8%8b%e6%b3%95%e5%bc%8f.png" alt="最急降下法式" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
最急降下法式
&lt;/figcaption>&lt;/figure>
&lt;p>&lt;a href="https://ja.wikipedia.org/wiki/%E6%9C%80%E6%80%A5%E9%99%8D%E4%B8%8B%E6%B3%95#:~:text=%E6%9C%80%E6%80%A5%E9%99%8D%E4%B8%8B%E6%B3%95%EF%BC%88%E3%81%95%E3%81%84%E3%81%8D%E3%82%85%E3%81%86%E3%81%93%E3%81%86,%E3%81%A6%E3%81%84%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AF%E5%A4%9A%E3%81%84%E3%80%82" target="_blank" rel="noopener">ウィキペディア 最急降下法&lt;/a>&lt;/p>
&lt;h2 id="最小二乗法">最小二乗法&lt;/h2>
&lt;p>物理実験でも使われますが、複数の座標点から推定される直線を求めるために最小二乗法が用いられます。&lt;a href="https://ja.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%97%E6%B3%95" target="_blank" rel="noopener">ウィキペディア&lt;/a>では最小二乗法は次のように説明されています。&lt;/p>
&lt;blockquote>
&lt;p>最小二乗法は、測定で得られた数値の組を、適当なモデルから想定される1次関数、対数曲線など特定の関数を用いて近似するときに、想定する関数が測定値に対してよい近似となるように、残差の二乗和を最小とするような係数を決定する方法、あるいはそのような方法によって近似を行うことである。&lt;/p>
&lt;/blockquote>
&lt;h1 id="実行">実行&lt;/h1>
&lt;blockquote>
&lt;p>使用したツール: spyder&lt;br>
使用言語 : python ver3.7&lt;/p>
&lt;p>上記のツール、言語はAnacondaというパッケージ管理ソフトで一括ダウンロード可能です。Anacondaのインストールに関しては&lt;a href="https://www.creativevillage.ne.jp/72837" target="_blank" rel="noopener">【入門編】便利なPython Anacondaをインストールから使い方まで徹底解説！&lt;/a>を参考にしました。&lt;/p>
&lt;/blockquote>
&lt;p>最急降下法と最小二乗法より以下のような理論式になります。
&lt;figure id="figure-理論式">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./%e7%90%86%e8%ab%96%e5%bc%8f%20.png" alt="理論式" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
理論式
&lt;/figcaption>&lt;/figure>&lt;/p>
&lt;p>&lt;a href="https://www.udemy.com/course/machine-learning-3algo/" target="_blank" rel="noopener">udemy 機械学習コース&lt;/a>を参考にしたのでソースコードは載せられませんが上記の理論式を繰り返し、a,bそれぞれに最急降下法を用いて最適化することで&lt;a href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab">冒頭&lt;/a>に述べたような直線を引けます。&lt;/p>
&lt;p>また各点の座標は行列を用いて下記のように定義しました。
&lt;figure id="figure-行列">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./%e8%a1%8c%e5%88%97.png" alt="行列" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
行列
&lt;/figcaption>&lt;/figure>&lt;/p>
&lt;h1 id="おわりに">おわりに&lt;/h1>
&lt;p>ここでは簡単な最急降下法について取り扱いましたが数学やプログラミングを学んでいくことで画像認識や&lt;a href="https://unity3d.com/jp/machine-learning" target="_blank" rel="noopener">unity&lt;/a>で物体の動きの最適化など、できることが増えていきます。興味がある方はぜひ大学の授業を活かして勉強してみてください。&lt;/p></description></item><item><title>Finden die Feen 開発記録</title><link>https://blog.opuappnavi.com/post/record-findendiefeen/</link><pubDate>Mon, 22 Jun 2020 18:54:11 +0900</pubDate><guid>https://blog.opuappnavi.com/post/record-findendiefeen/</guid><description>&lt;h1 id="はじめに">はじめに&lt;/h1>
&lt;p>この記事は，2020年5月30日から31日にかけて行われた &lt;a href="https://ch-random.net/post/167/" target="_blank" rel="noopener">&lt;strong>府大バーチャル学祭&lt;/strong>&lt;/a> で展示された &lt;strong>Finden die Feen&lt;/strong> というゲームの開発記事です。どういった経緯でこのゲームが開発されたかを，この記事に書いていこうと思います。&lt;/p>
&lt;p>まずはじめに，&lt;strong>Finden die Feen&lt;/strong> とは以下のようなゲームです。
&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">&lt;a href="https://twitter.com/hashtag/%E5%BA%9C%E5%A4%A7%E3%83%90%E3%83%BC%E3%83%81%E3%83%A3%E3%83%AB%E5%AD%A6%E7%A5%AD?src=hash&amp;amp;ref_src=twsrc%5Etfw">#府大バーチャル学祭&lt;/a> &lt;br>2つ目ー！！&lt;br>タイトル：Finden die Feen&lt;br>妖精たちとのかくれんぼ&lt;br>迷路の中に隠れている見えない妖精たちを、音を頼りに探していこう！&lt;br>マウスと方向キーだけの簡単操作で遊べるよ。&lt;br>あなたは妖精たちとの遊びに最後までついていけるかな？&lt;br>&lt;br>↓↓Click！&lt;a href="https://t.co/8zEqY1KpKx">https://t.co/8zEqY1KpKx&lt;/a> &lt;a href="https://t.co/6be1bGRdb0">pic.twitter.com/6be1bGRdb0&lt;/a>&lt;/p>&amp;mdash; OPU アプリNavi (@OPUAppNavi) &lt;a href="https://twitter.com/OPUAppNavi/status/1266598410095751169?ref_src=twsrc%5Etfw">May 30, 2020&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;/p>
&lt;p>上記のように，迷路の中で音を頼りに妖精さんを探す &lt;strong>PC用ゲーム&lt;/strong> です。まだ遊んだことのない方は，以下から遊ぶことができます。ぜひ遊んでみてからこの記事を読んでみてください。(音量注意！！！)&lt;/p>
&lt;div id="unity_webgl_1_1" style="width: 100%; margin: 15px 0; background: white; border-radius: 15px;">
&lt;div style="position: relative;">
&lt;div id="unity_webgl_1_2" style="height: 0;">
&lt;iframe id="unity_webgl_1_3" src="https://hiroyuki-nakaya.github.io/Finden-die-Feen/" allowfullscreen>&lt;/iframe>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;script>
document.getElementById("unity_webgl_1_2").style.paddingBottom = 100 * 700 / 980 + "%";
function set_width() {
const w = 980 ;
const h = 700 ;
const client_w = document.getElementById("unity_webgl_1_2").clientWidth;
const per = client_w / w;
const rev = 100 / per;
const iframe = document.getElementById("unity_webgl_1_3");
iframe.height = rev + "%";
iframe.width = rev + "%";
iframe.style = "position: absolute; top: 0; left: 0; transform:scale(" + per + ");-o-transform:scale(" + per + ");-webkit-transform:scale(" + per + ");-moz-transform:scale(" + per + ");-ms-transform:scale(" + per + ");transform-origin:top left; border: 0;"
}
set_width();
window.onresize = function(){ set_width(); };
&lt;/script>
&lt;h1 id="企画">企画&lt;/h1>
&lt;p>ここでは，どのようにして &lt;strong>Finden die Feen&lt;/strong> を思いついたのか書いていきます。普段，私は毎年5月末に行われる大学の文化祭に向けてゲームを作っており，今年は「&lt;strong>探索&lt;/strong>」というテーマでゲームを考えていました。このテーマは，「宝探しは楽しいよね！」と「あまりゲームが得意でない人でも遊べるゲーム」を両立させようという目論見がありました。そこで何かいい案はないかと&lt;a href="https://www.borndigital.co.jp/book/6633.html" target="_blank" rel="noopener">Unityゲーム プログラミング・バイブル&lt;/a>という本をパラパラめくっていたところ，5章の「3D迷路」の部分を読み，「ここに書いてある迷路生成プログラムを用いれば &lt;strong>簡単に迷路が作れる&lt;/strong> のでは？」と思い，該当部分をステージ生成の基礎として，迷路の中でもの探しをするというゲームを思いつきました。&lt;/p>
&lt;p>ただし，単に迷路を探索するだけでは既存の迷路ゲームと変わらず，&lt;a href="https://www.borndigital.co.jp/book/6633.html" target="_blank" rel="noopener">Unityゲーム プログラミング・バイブル&lt;/a>の「3D迷路」の章のパクりとなり，なんら面白くありません。そこで，任天堂が2003年に発売した「&lt;strong>伝説のスタフィー2&lt;/strong>」というゲームの道中にあった「&lt;strong>音で探す&lt;/strong>」ゲームギミックを参考にしました。
&lt;figure id="figure-伝説のスタフィー2出典httpswwwnintendocojpn08avfjgamenindexhtml">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./blog_01.png" alt="伝説のスタフィー2（出典：https://www.nintendo.co.jp/n08/avfj/gamen/index.html）" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
伝説のスタフィー2（出典：https://www.nintendo.co.jp/n08/avfj/gamen/index.html）
&lt;/figcaption>&lt;/figure>
参考にしたギミックは「見えない探し物が近くにあればあるほど，アラームを激しく鳴らす」というものです。「伝説のスタフィー2」では，草むらに隠れた見えないターゲットを音を頼りに見つけ出すというゲーム要素があり，私自身「伝説のスタフィー2」を遊んだ時にこのギミックがとても楽しかった記憶があって，「音で探す」システムを採用しました。&lt;/p>
&lt;p>以上より「&lt;strong>音を頼りに迷路を探索し妖精さんを見つける&lt;/strong>」ゲームが企画されました。以下の画像は&lt;a href="https://www.sbcr.jp/product/4797377361/" target="_blank" rel="noopener">ゲーム作りのはじめかた Unityで覚える企画からレベルデザインまで&lt;/a>という本の「まずはゲームの企画をA4 1枚にペンで書け！」といった教えにのっとり書いた企画書です。
&lt;figure id="figure-finden-die-feen-企画書">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./blog_02.jpg" alt="Finden die Feen 企画書" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Finden die Feen 企画書
&lt;/figcaption>&lt;/figure>
上の企画書を見てみると，何個か夢物語が書いてありますが，「Finden die Feen」の原型は保たれてますね。また，この時点でゲームのタイトルはまだ決めていませんね。&lt;/p>
&lt;p>ちなみに，この企画書は5月のはじめに書いたものです。提出締め切りが5月30日だったので，必然的に1か月で完成させなくてはいけなく，締め切り1週間前は地獄を見ました&amp;hellip;。&lt;del>大学の文化祭が新型コロナウイルス騒ぎで中止になったと聞いて，今年はゲーム作らなくていいかと思ってたところにオンライン文化祭の通知が来たもん仕方ないね。&lt;/del>&lt;/p>
&lt;h1 id="実装">実装&lt;/h1>
&lt;h2 id="1-自動迷路生成の実装">1. 自動迷路生成の実装&lt;/h2>
&lt;p>代表的な迷路自動生成アルゴリズムには，以下の3種類があります。&lt;/p>
&lt;ul>
&lt;li>棒倒し法（比較的簡単な迷路生成）&lt;/li>
&lt;li>壁伸ばし法（複雑な迷路生成）&lt;/li>
&lt;li>穴掘り法（複雑な迷路生成）&lt;/li>
&lt;/ul>
&lt;p>この中で，「Finden die Feen」の迷路自動生成アルゴリズムには「&lt;strong>穴掘り法&lt;/strong>」を用いました。コードはたった5,000円で買える素晴らしい本，&lt;a href="https://www.borndigital.co.jp/book/6633.html" target="_blank" rel="noopener">Unityゲーム プログラミング・バイブル&lt;/a>の5章「3D迷路」に載っていたものを&lt;del>パクリ&lt;/del>参考にしました。この穴掘り法を用いると，以下の画像のように任意の大きさの複雑な迷路を勝手に生成してくれます。とても楽ですし素晴らしいですね。
&lt;figure id="figure-穴掘り法による迷路生成">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./blog_03.png" alt="穴掘り法による迷路生成" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
穴掘り法による迷路生成
&lt;/figcaption>&lt;/figure>&lt;/p>
&lt;h2 id="2-サウンドの実装">2. サウンドの実装&lt;/h2>
&lt;p>「Finden die Feen」では，妖精の位置によって音の鳴り方が変わり，プレイヤーからどれだけ近くに妖精がいるかを教えてくれるのが特徴です。この特徴的なソナー音やBGMなど，プレイヤーの位置に依存しないサウンドは，単一のゲームオブジェクトによる一括管理を行うことを考えます。このようなサウンドシステムの実装は，&lt;strong>シングルトンパターン&lt;/strong> を用いて実装されています。つまり，ゲーム実行中は常に1つのインスタンスが存在し，サウンドに関する処理を一括して行っています。ちなみに私はこの処理を，たった4,000円で買える本，&lt;a href="https://www.borndigital.co.jp/book/15163.html" target="_blank" rel="noopener">Unity サウンド エキスパート養成講座&lt;/a>の1章のコードを&lt;del>パクって&lt;/del>参考にして実装しました。&lt;/p>
&lt;p>このような実装を行うと，音源の再生を行いたい場合に&lt;/p>
&lt;pre>&lt;code class="language-c#:">using SoundSystem;
&lt;/code>&lt;/pre>
&lt;p>と宣言して&lt;/p>
&lt;pre>&lt;code class="language-c#:">SoundManager.Instance.Play(&amp;quot;音源のタイトル&amp;quot;);
&lt;/code>&lt;/pre>
&lt;p>と任意の場所に書くと，音が再生されます。AudioSourceをGameObjectにいちいちアタッチせずに，たった1行処理を書くだけで音が再生されるので非常に便利です。&lt;/p>
&lt;h2 id="3-ムービーの実装">3. ムービーの実装&lt;/h2>
&lt;p>「Finden die Feen」では，チュートリアルや妖精を発見したときなどにムービーが流れます。
&lt;figure id="figure-ムービーシーン">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./blog_04.png" alt="ムービーシーン" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
ムービーシーン
&lt;/figcaption>&lt;/figure>
このムービーは，Unityの &lt;strong>Timeline&lt;/strong> という機能を用いて実装しました。Timelineを用いると，簡単にムービーシーンを作ることができるため大変便利です。
&lt;figure id="figure-unityのtimeline">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./blog_05.png" alt="UnityのTimeline" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
UnityのTimeline
&lt;/figcaption>&lt;/figure>
画像のように，動画編集みたいに時系列でプログラムを書かずにオブジェクトを操作できます。今回はTimelineを用いてテキスト表示を行うカスタムクリップを&lt;a href="https://blogs.unity3d.com/jp/2018/09/05/extending-timeline-a-practical-guide/" target="_blank" rel="noopener">Timelineの拡張 ― 実践ガイド&lt;/a>というサイトを参考に実装しました。何回かTimelineのカスタムクリップを実装したことはありますが，まともに勉強したのは初めてな気がします。&lt;/p>
&lt;p>このとき，PlayableAssetを継承したクラス，PlayableBehaviourを継承したクラス，TrackAssetを継承したクラスそれぞれファイル名とクラス名を同じにしないと，Timelineからカスタムクリップが抜け落ちるという仕様に1日悩んだのはいい思い出です。&lt;del>少し考えれば，あたりまえなんですけどね。&lt;/del>&lt;/p>
&lt;h1 id="テストプレイから公開まで">テストプレイから公開まで&lt;/h1>
&lt;p>ここでは，ゲームバランス調整について書いていこうと思います。一般論として，開発者がプレイして開発者がちょうどいいと思う難易度にすると，たいてい &lt;strong>超高難易度&lt;/strong> になります。そのため，テストプレイはできる限り第3者に行ってもらうのがオススメです。私は締め切り1日前に妹にテストプレイをしてもらい，制限時間などのパラメータを調節しました。&lt;/p>
&lt;p>ちなみにこのとき，妹から&lt;/p>
&lt;ul>
&lt;li>妖精のいる方角を示すコンパスの色の点滅&lt;/li>
&lt;li>制限時間を増やすアイテムの追加&lt;/li>
&lt;li>制限時間がなくなってきたら，BGMのピッチを上げる&lt;/li>
&lt;li>残りの妖精の数をUI表示&lt;/li>
&lt;/ul>
&lt;p>の機能を実装したほうがいいという&lt;del>地獄のような&lt;/del>素晴らしいアドバイスを &lt;strong>締め切り直前&lt;/strong> にいただき，締め切り前日の夜10時から締め切り当日の朝5時にかけて上記の機能を全て実装しました。このアドバイスによってよりゲームのクオリティが上がったと思うので妹には感謝しています。&lt;del>アドバイスをもらったときは妹にうっすら殺意を覚えましたが。&lt;/del>&lt;/p>
&lt;p>そして最後にゲームの &lt;strong>タイトル&lt;/strong> を決めました。なんでもかんでも &lt;strong>ドイツ語&lt;/strong> にするとカッコいいよねという安直な考えで，「Finden die Feen」というタイトルになりました。ちなみに英語にすると「Find the Fairies」です。「妖精を発見する」的な意味です。そのままです。このタイトルをつけるためだけに，2年ぶりにドイツ語の文法書を引っ張り出しました。&lt;del>ドイツ語の文法がおかしい？うるせえ黙れ！&lt;/del>
&lt;figure id="figure-ゲームのタイトル画面">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./blog_06.png" alt="ゲームのタイトル画面" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
ゲームのタイトル画面
&lt;/figcaption>&lt;/figure>&lt;/p>
&lt;h1 id="最後に">最後に&lt;/h1>
&lt;p>このような感じで「Finden die Feen」は約1ヶ月という期間で製作し，府大バーチャル学祭で公開されました。個人的には，完成度がそこそこ高く見えるため気に入っています。特に気に入っているのは，以下の画像のステージです。
&lt;figure id="figure-お気に入りのステージ">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./blog_07.png" alt="お気に入りのステージ" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
お気に入りのステージ
&lt;/figcaption>&lt;/figure>
このステージは，赤，青，緑のライトが混ざり合うステージでとても綺麗だと思ってるのですが，みなさんはどう思いましたか？私はデバッグ中，このステージに1人で感動していました。&lt;/p>
&lt;p>最後になりますが，ここまで読んで下さりありがとうございました。そしてまた改めて「Finden die Feen」で遊んでみてはいかがでしょうか？&lt;/p></description></item><item><title>なぜ基本情報技術者試験の勉強をしないのか？</title><link>https://blog.opuappnavi.com/post/fe-study-recommendation/</link><pubDate>Wed, 17 Jun 2020 00:17:53 +0900</pubDate><guid>https://blog.opuappnavi.com/post/fe-study-recommendation/</guid><description>&lt;h1 id="はじめに">はじめに&lt;/h1>
&lt;p>この記事は主に大阪府立大学現代システム科学域知識情報システム学類に所属している学生に向けて、基本情報技術者試験の勉強を推奨するものです。&lt;/p>
&lt;h1 id="時間がない人向け要約">時間がない人向け要約&lt;/h1>
&lt;p>基本情報技術者試験の勉強をすると大学の授業内容を分かりやすく先取りできるから成績上がるぞ。オススメ。&lt;/p>
&lt;h1 id="情報処理技術者試験とは">情報処理技術者試験とは&lt;/h1>
&lt;p>情報処理技術者試験は、&lt;a href="https://www.jitec.ipa.go.jp/1_08gaiyou/_index_gaiyou.html" target="_blank" rel="noopener">IPA(情報処理推進機構)の公式サイト&lt;/a>で以下のように説明されています。&lt;/p>
&lt;blockquote>
&lt;p>情報処理技術者試験は、「情報処理の促進に関する法律」に基づき経済産業省が、情報処理技術者としての「知識・技能」が一定以上の水準であることを認定している国家試験です。&lt;/p>
&lt;p>情報システムを構築・運用する「技術者」から情報システムを利用する「エンドユーザ（利用者）」まで、ITに関係するすべての人に活用いただける試験として実施しています。特定の製品やソフトウェアに関する試験ではなく、情報技術の背景として知るべき原理や基礎となる知識・技能について、幅広く総合的に評価しています。&lt;/p>
&lt;/blockquote>
&lt;br>
簡単に言いますと情報系の国家試験です。そして情報処理技術者試験の一区分として、今回私がその勉強を推奨する基本情報技術者試験があります。
&lt;br>
&lt;p>&lt;img src="./taikei.png" alt="情報処理技術者試験の体系図" title="体系図">&lt;/p>
&lt;p>&lt;a href="https://www.jitec.ipa.go.jp/1_08gaiyou/_index_gaiyou.html" target="_blank" rel="noopener">IPA 試験区分一覧&lt;/a>
&lt;a href="https://www.jitec.ipa.go.jp/1_08gaiyou/_index_gaiyou.html">https://www.jitec.ipa.go.jp/1_08gaiyou/_index_gaiyou.html&lt;/a>&lt;/p>
&lt;h1 id="基本情報技術者試験とは">基本情報技術者試験とは&lt;/h1>
&lt;p>基本情報技術者試験とは、情報処理技術者試験の一区分です。
難易度としては四段階中の二段階目として設定されており、ITエンジニアの登竜門とされているようです。&lt;br>&lt;/p>
&lt;blockquote>
&lt;p>１．対象者像&lt;br>
高度IT人材となるために必要な基本的知識・技能をもち、実践的な活用能力を身に付けた者&lt;br>
２．役割と業務&lt;br>
基本戦略立案又はITソリューション・製品・サービスを実現する業務に従事し、上位者の指導の下に、次のいずれかの役割を果たす。&lt;br>
　(1) 需要者（企業経営、社会システム）が直面する課題に対して、情報技術を活用した戦略立案に参加する。&lt;br>
　(2) システムの設計・開発を行い、又は汎用製品の最適組合せ（インテグレーション）によって、信頼性・生産性の高いシステムを構築する。また、その安定的な運用サービスの実現に貢献する。&lt;br>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://www.jitec.ipa.go.jp/1_11seido/fe.html" target="_blank" rel="noopener">IPA 基本情報技術者試験&lt;/a>
&lt;a href="https://www.jitec.ipa.go.jp/1_11seido/fe.html">https://www.jitec.ipa.go.jp/1_11seido/fe.html&lt;/a>&lt;/p>
&lt;h1 id="基本情報技術者試験の勉強をオススメする理由">基本情報技術者試験の勉強をオススメする理由&lt;/h1>
&lt;p>理由はシンプルで、知識情報システム学類の専門科目の内容が基本情報技術者試験の内容と被るところが多いからです。このため基本情報技術者試験の勉強は、新入生にとって専門科目の良い予習となり、在学生にとっては専門科目の良い復習となります。&lt;br>&lt;/p>
&lt;p>私は二年生の後期から基本情報技術者試験の勉強を始めましたが、その内容は大学の専門科目の範囲と重なる部分がとても多く、良い専門科目の予習と復習になりました。また大学の教科書よりも基本情報技術者試験の参考書の方が分かりやすかったため、大学の授業中に基本情報技術者の参考書を開くことも少なくありませんでした。&lt;/p>
&lt;h1 id="合格体験記">合格体験記&lt;/h1>
&lt;p>私が基本情報技術者試験の受験を決めたのは二年生の後期のことでした。受験の理由としては、情報系の学生としてある程度の知識があることを、就活などにも使える資格という分かりやすい形で示したかったからです。&lt;br>&lt;/p>
&lt;p>受験を決めてからまず基本情報技術者試験についてインターネットで簡単に調べました。&lt;a href="https://www.jitec.ipa.go.jp/1_08gaiyou/_index_gaiyou.html" target="_blank" rel="noopener">IPAの公式サイト&lt;/a>、Qiitaの記事、合格者のブログなどを読んでおおよその試験の概要を理解した後、書店に行き参考書を選びました。とにかく分かりやすさを重視したため「キタミ式イラストIT塾 基本情報技術者」に決めました。&lt;br>&lt;/p>
&lt;p>まずはそこそこの分厚さのある参考書を内容の理解は完全でなくとも読み進めることを重視して一周読み、その後分かっているところは軽く流しつつ分からなかったところをインターネットや学校の教科書でしっかり調べてもう一周読みました。&lt;br>&lt;/p>
&lt;p>そして大体どの分野の内容がどのあたりのページに書いてあるかが理解できる程度に参考書を読めたところで、&lt;a href="https://www.fe-siken.com/" target="_blank" rel="noopener">基本情報技術者試験ドットコム&lt;/a>で午前問題の過去問演習を始めました。&lt;br>&lt;/p>
&lt;p>午前の過去問は直近十回分やりました。そして安定して八から九割の正答率を出せるようになったところで午後の過去問に取り組みました。&lt;br>&lt;/p>
&lt;p>午後の過去問は選択問題がいくつかあるのですが、自分がどの分野が得意なのかを見定めるために全問問いていました。そして正答数の統計を取りながら最新の回を除く過去七回分を終えたところで自分の得意分野を絞り、最後に最新の回を本番と同じ環境で選択問題として解きました。&lt;br>&lt;/p>
&lt;p>後は本番に向けてコンディション整えて受験に挑み、合格する事が出来ました。&lt;br>&lt;/p>
&lt;p>私は試験勉強をしている時何度も挫けそうになりました。しかしそんな時いつも私を支えてくれていたのはこのアプリNaviでした。勉強して分からないところがあればいつでも何でも優しく教えて下さった先輩と、一緒に勉強をしてモチベーションを高めあってくれた同輩がいたからこそ私は合格することが出来たのだと思います。きっとアプリNaviに入っていなければこの試験の存在すら知ることは無く灰色の大学生活を送っていたでしょう。アプリNaviに入ってから成績は上がり、友達は増え、彼女が出来ました。アプリNaviこそ私の大学生活に必要だったものだと、今なら胸を張って言うことが出来ます。この記事を読んだ皆さんがアプリNaviで共に理想のキャンパスライフを送れることを祈っています。&lt;/p>
&lt;h1 id="おわりに">おわりに&lt;/h1>
&lt;p>主に知識情報システム学類の学生に向けて書いていましたが、勿論その学生でなくても、少しでもプログラミングやアプリ開発に興味がある人ならば勉強して決して損はない基本的なITの内容になっています。なんでしたら参考書だけ買って受験はせずにそれを読むだけでも大分役立つと思います。&lt;br>&lt;/p>
&lt;p>アプリNaviに入れば合格者の先輩方が優しく教えて下さいます。アプリNaviに入りましょう。&lt;/p></description></item><item><title>Unity WebGLのゲームをローカルでプレイする方法</title><link>https://blog.opuappnavi.com/post/unity-webgl-locally/</link><pubDate>Sat, 30 May 2020 16:45:03 +0900</pubDate><guid>https://blog.opuappnavi.com/post/unity-webgl-locally/</guid><description>&lt;p>UnityでWebGLをプラットフォームに選択し、&lt;code>Build And Run&lt;/code>を押すと、ブラウザが起動して、作ったゲームをプレイすることができます。WebGLのビルドにはとても時間がかかるので、毎回ビルドするのではなく、一度ビルドしたゲームを複数回プレイしたくなります。ですが、ただ単に出力されたファイル&lt;code>index.html&lt;/code>を開くだけではプレイできません。&lt;br>
&lt;figure id="figure-indexhtmlを開くとこのようなエラーメッセージが表示される">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./Unity_WebGL_Index_Html_Error.png" alt="index.htmlを開くと、このようなエラーメッセージが表示される" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
index.htmlを開くと、このようなエラーメッセージが表示される
&lt;/figcaption>&lt;/figure>
そこで、&lt;code>Visual Studio Code&lt;/code>(&lt;code>VSCode&lt;/code>)を使ってビルドしたゲームをプレイする方法を紹介します。&lt;br>
&lt;div class="alert alert-note">
&lt;div>
&lt;code>VSCode&lt;/code>は &lt;a href="https://code.visualstudio.com/">https://code.visualstudio.com/&lt;/a> からダウンロードできます。
&lt;/div>
&lt;/div>
&lt;/p>
&lt;h1 id="1-拡張機能のインストール">1. 拡張機能のインストール&lt;/h1>
&lt;p>&lt;code>VSCode&lt;/code>を起動し、画面左のボタンを押して拡張機能パネルを開きます。
&lt;figure id="figure-拡張機能パネルを開くボタン">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./VSCode_Activity_Bar_Extension.png" alt="拡張機能パネルを開くボタン" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
拡張機能パネルを開くボタン
&lt;/figcaption>&lt;/figure>
パネル上の検索ボックスに&lt;code>live server&lt;/code>と入力し、検索結果の一番上にある&lt;code>Live Server&lt;/code>をクリックします。&lt;code>拡張機能:Live Server&lt;/code>タブが開くので、&lt;code>インストール&lt;/code>をクリックします。
&lt;figure id="figure-拡張機能live-serverタブ">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./VSCode_Live_Server.png" alt="「拡張機能：Live Server」タブ" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
「拡張機能：Live Server」タブ
&lt;/figcaption>&lt;/figure>&lt;/p>
&lt;h2 id="補足-vscode日本語化">(補足) VSCode日本語化&lt;/h2>
&lt;p>検索ボックスに&lt;code>japanese&lt;/code>と入力し、検索結果の一番上にある拡張機能&lt;code>Japanese Language Pack for Visual Studio Code&lt;/code>をインストールすることで日本語化できます。
&lt;figure id="figure-japanese-language-pack-for-visual-studio-codeインストール済み">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./VSCode_Japanese.png" alt="「Japanese Language Pack for Visual Studio Code」(インストール済み)" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
「Japanese Language Pack for Visual Studio Code」(インストール済み)
&lt;/figcaption>&lt;/figure>&lt;/p>
&lt;h1 id="2-ビルドしたゲームをvscodeで開く">2. ビルドしたゲームをVSCodeで開く&lt;/h1>
&lt;p>メニューの&lt;code>ファイル(F)&lt;/code>から&lt;code>フォルダを開く... Ctrl+K Ctrl+O&lt;/code>をクリックします。フォルダ選択ダイアログが表示されるので、出力された&lt;code>Build&lt;/code>フォルダと&lt;code>TemplateData&lt;/code>フォルダ、&lt;code>index.html&lt;/code>ファイルのあるフォルダを選択します。&lt;/p>
&lt;h1 id="3-ゲームをプレイ">3. ゲームをプレイ&lt;/h1>
&lt;p>正しくフォルダを開けていると画面右下に&lt;code>Go Live&lt;/code>ボタンが表示されます。このボタンをクリックするとブラウザが起動し、ゲームをプレイできます。
&lt;figure id="figure-go-live-ボタン">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./Live_Server_Go_Live.png" alt="Go Live ボタン" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
Go Live ボタン
&lt;/figcaption>&lt;/figure>
&lt;code>Go Live&lt;/code>があった場所に表示される&lt;code>Port:5050&lt;/code>をクリックすれば、ブラウザでのプレイを停止できます。VSCodeを閉じれば自動的に停止するはずですが、プレイを止める際にはボタンを押すことをおすすめします。&lt;/p></description></item><item><title>自己流ステージ作成方法</title><link>https://blog.opuappnavi.com/post/stage-create/</link><pubDate>Sat, 30 May 2020 10:17:55 +0900</pubDate><guid>https://blog.opuappnavi.com/post/stage-create/</guid><description>&lt;h1 id="はじめに">はじめに&lt;/h1>
&lt;p>初めまして、アプリNaviのヤマグチです。&lt;br>
本日、府大バーチャル学祭開催に合わせ、『巡回！デリバリー屋さん』を&lt;a href="http://appnavi.html.xdomain.jp/index.html" target="_blank" rel="noopener">特設ページ&lt;/a>にて公開させていただきました。遊んで、楽しんでもらえたのなら嬉しいです。&lt;/p>
&lt;p>今ゲームは2Dパズルアクションゲームで、ステージ作りにそれなりの時間を割きました。&lt;br>
そこで、前半はステージ作りをするとき僕がどう考えていたかについて、後半はゲーム内に実装したステージを作った時に考えていたことの一部について書きます。&lt;br>
あくまで僕自身の考え方であり他の方のものとは異なります。参考程度に読んでください。&lt;/p>
&lt;h1 id="ステージ作成で大切なこと">ステージ作成で大切なこと&lt;/h1>
&lt;p>この項では、僕がステージ作成で気にした方がいいと考えていることを書いていきます&lt;/p>
&lt;h2 id="1-ステージに意図を持たせる">1. ステージに意図を持たせる&lt;/h2>
&lt;p>皆さんはカードゲームをしたことがありますか。ない場合は武器やパーティをカスタム、編成するゲームを考えてください。カードゲームにおいて、何が一番いる能力だと思いますか。&lt;br>
プレイング、読み、運、色々あると思います。&lt;br>
僕の答えは構築力です。なぜ構築力なのかは、ここではあまり関係ないので省きますが、構築力が高いデッキはデッキ内のすべてのカードに採用する理由があります。完成された構築には意味のないカードはなく、製作者の意図、意志が反映されます。 限られたデッキ枚数に何を何枚採用するか。&lt;br>
言い換えると、限られたスペースに何をどのくらい配置するか、何かに似てますね。&lt;br>
そうです、ステージ作成です。特に今回のゲームでは、ステージは一画面に収まる量でなくてはダメでした。&lt;br>
そこで、ステージの枠組みをどうするか、設置物をどこに置くか等、それぞれの配置に自分なりの考えを持つことを意識して作成しました。&lt;/p>
&lt;h2 id="2-意味のないものを作る">2. 意味のないものを作る&lt;/h2>
&lt;p>前項で書いたことに早速矛盾しました。&lt;br>
しかし、意味のないものを作ることも必要です。遊んでくれる方は製作者の意図なんて知ったこっちゃありません。だからこそ、製作者にとっては無意味だとわかり切っているものにも意味があるんじゃないかと深読みしてくれます。 そうすれば、意味のないものを作ったつもりが意味のあるものを作れます。&lt;br>
意図的に意味のないものを作ることでステージ全体に遊び心を与えることができるのです。&lt;/p>
&lt;h2 id="3-ギミックの使い方を考える">3. ギミックの使い方を考える&lt;/h2>
&lt;p>今回はステージの数が少なく、一つ一つのステージも小さいです。なので、できる限り同じ使い方でギミックを使わないことを気にしました。&lt;br>
同じギミックでも、あるときはプラスの役割で使い、またある時はマイナスの役割で使うというようにギミックをより効果的に使うことを心がけました。&lt;/p>
&lt;h2 id="4-自分が楽しむ">4. 自分が楽しむ&lt;/h2>
&lt;p>これが一番大切な気がします。&lt;br>
作った人が作ったものに対しての理解が最も深いはずです。その人が楽しめないものを他の人が楽しめるとは思えません。作ったステージを自分自身が楽しめるようになることが望ましいです。 作っている時は、作っているステージが面白いかどうかわからなくなってきます。しかし自分が面白いと思えば、少なくとも世界で誰も楽しめないステージではなくなります。&lt;br>
僕は今回のゲーム内のステージでは僕が作ったステージが一番好きです。&lt;/p>
&lt;h1 id="実際に作ったステージの解説">実際に作ったステージの解説&lt;/h1>
&lt;p>この項では、僕が今回のゲームで作ったステージのちょっとした解説をしようと思います。&lt;br>
この先、ステージ9のネタバレを含みますのでプレイした後に読むことをお勧めします。
&lt;details class="spoiler " id="spoiler-0">
&lt;summary>&lt;code>以下ステージ9ネタバレ&lt;/code>&lt;/summary>
&lt;p>&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./stage9.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
1の意図は、ステージ全体にコンセプトを持たせることです。
初めにコンセプトを決めておくことで僕自身の中で方向性がブレないようにしました。このステージ全体のコンセプトは「ステージ一周」でした。その時に右周りでも左回りでもクリアできるようにするということを目標にしました。
ステージ全体を荷物を取るエリアでそれぞれ区分けし、各エリアには入り口と出口を作り、周回方向によって入り口、出口が入れ替わるような配置にしました。
上の画像では、赤枠の示す上から落ちるブロックを擬似的な通行止めとして利用しています。
&lt;p>2の意味のないものは、どっち周りでもクリアできるという要素です。&lt;br>
別に両方から進める必要は全くありません。左回りの時は右回りのギミックは不必要で、右回りの時は左回りのギミックは不必要となります。&lt;br>
ただ、これがあることでこのステージの面白さが出ていると考えています。&lt;/p>
&lt;p>3のギミックの使い方は、先ほども挙げた落ちるブロックによるステージの区切りです。&lt;br>
他の僕の作ったステージでは、基本的にプレイヤーを倒すためだけのものでした。そこに他の役割である区切りという役割を持たせています。&lt;br>
この使い方はプラスとマイナスの両方の使い方というわけではありませんが、違った使い方をした一例ではあります。&lt;/p>
&lt;p>4の自分が楽しむに関しては、作ってる間すごく楽しかったです。コンセプトを思いついてからは非常にスムーズにステージ作成をすることができました。&lt;/p>
&lt;p>以上が、僕の作ったステージのちょっとした解説になります。あまり話しすぎても面白くないのでこの辺りで終わります。&lt;/p>
&lt;/p>
&lt;/details>&lt;/p>
&lt;h2 id="終わりに">終わりに&lt;/h2>
&lt;p>読んでいただきありがとうございました。&lt;br>
まさかブログまで書くことになると思っていませんでしたが、ゲームも含めてまあ良いものになったんじゃないかなあと思っています。&lt;br>
最後に、ゲームを遊んでいただいた方、このブログを読んでいただいた方ありがとうございました。それではまた何かの機会に。&lt;/p></description></item><item><title>GAS でサクッと採点シート作ってみた</title><link>https://blog.opuappnavi.com/post/gas-scoring/</link><pubDate>Sat, 30 May 2020 10:04:44 +0900</pubDate><guid>https://blog.opuappnavi.com/post/gas-scoring/</guid><description>&lt;p>全然需要ないかもですが、GAS の紹介第二弾です。&lt;/p>
&lt;p>今回は GAS を使って、以前ハッカソンの採点シートをちゃっと作った話をしたい思います。&lt;/p>
&lt;p>手軽にできるので、JavaScript など、プログラミングを最近学び始めた方はちょっと実践がてらに GAS を利用して何か作ってみたらどうでしょう？みたいな気持ちで書いたので、読んでもらえたら幸いです。（GAS は一応 JavaScript ベースでできています(^^)/)&lt;/p>
&lt;h2 id="gas-って">GAS って？&lt;/h2>
&lt;p>こちらで紹介しているので良ければ見ていってください！&lt;/p>
&lt;div class="card-simple">
&lt;div class="article-metadata">
&lt;div>
&lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/nobu/">Nobu&lt;/a>&lt;/span>
&lt;/div>
&lt;span class="article-date">
2020/05/28 投稿
( 2020/05/30 最終更新 )
&lt;/span>
&lt;/div>
&lt;div class="section-subheading article-title mb-1 mt-3">
&lt;a href="https://blog.opuappnavi.com/post/gas-recommendation/">手軽に始める！GAS を使ってみませんか～&lt;/a>
&lt;/div>
&lt;a href="https://blog.opuappnavi.com/post/gas-recommendation/" class="summary-link">
&lt;div class="article-style">
&lt;p>Google Apps Scriptの紹介&lt;/p>
&lt;/div>
&lt;/a>
&lt;div class="btn-links">
&lt;a class="btn btn-outline-primary btn-page-header btn-sm" href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/">
プロジェクト
&lt;/a>
&lt;/div>
&lt;/div>
&lt;h2 id="作った経緯ついでにハッカソンの紹介">作った経緯（ついでにハッカソンの紹介）&lt;/h2>
&lt;p>アプリ Navi では毎年、長期休みのどこかで、ハッカソンというものを開催しています。&lt;/p>
&lt;p>&lt;strong>ハッカソン&lt;/strong>とは&lt;/p>
&lt;blockquote>
&lt;p>ハッカソン（英語: hackathon 、別名:hack day ,hackfest ,codefest ）とは、ソフトウェア開発分野のプログラマやグラフィックデザイナー、ユーザインタフェース設計者、プロジェクトマネージャらが集中的に作業をするソフトウェア関連プロジェクトのイベントである
(&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%83%E3%82%AB%E3%82%BD%E3%83%B3" target="_blank" rel="noopener">Wikipedia より抜粋&lt;/a>)&lt;/p>
&lt;/blockquote>
&lt;p>とのこと。なんかヤバそう&amp;hellip;&lt;/p>
&lt;p>もちろん、この文から読み取れるようなそこまでヤバそうな感じではないです（笑）&lt;/p>
&lt;p>一言でいうと、参加者同士が、チームを組んで一つの作品を作ろうというイベントになっています。twitter にて簡単に紹介しているので良ければ見てください。&lt;/p>
&lt;p>ハッカソンの紹介
&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">&lt;a href="https://twitter.com/hashtag/%E5%A4%A7%E9%98%AA%E5%BA%9C%E7%AB%8B%E5%A4%A7%E5%AD%A6?src=hash&amp;amp;ref_src=twsrc%5Etfw">#大阪府立大学&lt;/a>&lt;br>&lt;br>今日紹介するのは、ハッカソンです！&lt;br>&lt;br>年に２回、コンピュータハウスランダムさんも交えてハッカソンを主催しています！&lt;br>アプリNaviでは部員同士でチームを組んで、発表されるお題に沿って、約２日で一つのゲームやアプリを制作、発表する形式をとっています。&lt;br>&lt;br>↓リプ欄に続く &lt;a href="https://t.co/pZdAznwB0V">pic.twitter.com/pZdAznwB0V&lt;/a>&lt;/p>&amp;mdash; OPU アプリNavi (@OPUAppNavi) &lt;a href="https://twitter.com/OPUAppNavi/status/1246644279813926912?ref_src=twsrc%5Etfw">April 5, 2020&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;/p>
&lt;p>ハッカソンの紹介はこの程度にして、そこでは審査員の方もお呼びして、それぞれの作品を審査してもらう形を取っています。&lt;/p>
&lt;p>その審査の際、採点用紙が必要だったので、ちょうど GAS を勉強し始めたこともあり自作することにしました。&lt;/p>
&lt;h2 id="作ったもの">作ったもの&lt;/h2>
&lt;p>それ専用に作ったので、完全に内輪向けですが画像としてはこんなものです。&lt;/p>
&lt;figure id="figure-作ったもの">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./HackathonScoreSheet.png" alt="作ったもの" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
作ったもの
&lt;/figcaption>&lt;/figure>
&lt;p>見た目等はいまいちですが、ちゃんと動きます。&lt;/p>
&lt;p>審査員の方に審査するチーム名を選択してもらい、それぞれの項目について点数を付け送信してもらうといった流れです。&lt;/p>
&lt;p>こういうの何かの初歩の題材でありそうですね&amp;hellip;&lt;/p>
&lt;h2 id="どうして-gas-で">どうして GAS で？&lt;/h2>
&lt;p>大きな理由としては、GAS を知り始めて使ってみたかったというのがありますが、&lt;/p>
&lt;p>その使ってみたくなるという前提となるのが、手軽に作成できるからです。&lt;/p>
&lt;p>その理湯としては大きく分けて２つあります。&lt;/p>
&lt;h3 id="サーバー等の手続きがいらず簡単に公開できる">サーバー等の手続きがいらず、簡単に公開できる&lt;/h3>
&lt;p>GAS では Google のサーバーを使っているので、このような簡単なサイトでもサーバーを借りるなどの作業がいらず、実質ワンクリックで公開、利用できます。&lt;/p>
&lt;p>GAS のエディタから、おおよそここをクリックしたら公開できます&lt;/p>
&lt;figure id="figure-公開方法">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GAS_Release.png" alt="公開方法" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
公開方法
&lt;/figcaption>&lt;/figure>
&lt;h4 id="spreadsheet-を簡易的なデータベースのように利用できる">SpreadSheet を簡易的なデータベースのように利用できる&lt;/h4>
&lt;p>個人的には SpreadSheet を簡易的なデータベースとして利用できるのは大きいと思います。&lt;/p>
&lt;p>SpreadSheet を簡易的なデータベースとして用いることで、データベースの知識がなくても簡単な事ならできますし、なんにせよ上限はありますが、無料で利用できるので、少なくとも何かをパッと作りたいときにはいいのではないかと！&lt;/p>
&lt;p>一応、ちょっとした例として、ユーザーの入力を SpreadSheet に追加するコードを載せておきます…&lt;/p>
&lt;ul>
&lt;li>HTML の&lt;code>&amp;lt;form&amp;gt;&amp;lt;/form&amp;gt;&lt;/code>に入力された内容を SpreadSheet に記述&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-html:index.html">&amp;lt;form method=&amp;quot;post&amp;quot; action=&amp;quot;送信先のURL&amp;quot;&amp;gt;
....
&amp;lt;/form&amp;gt;
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-JavaScript:input.gs">function doPost(e){
//データを記録するスプレッドシート
var sheet =SpreadsheetApp.openByUrl(&amp;quot;//利用したいSpreadSheetのURL//&amp;quot;);
...
//チーム名、各採点項目の情報を取得
var name = e.parameter.name;
var theme = e.parameter.theme;
var uniqe = e.parameter.uniqe;
var practice = e.parameter.practice;
var presentation = e.parameter.presentation;
var comment = e.parameter.comment;
//データ
var array = [userEmail,name,theme,uniqe,practice,presentation,comment];
//SpreadSheetにデータを追加
sheet.appendRow(array);
...
}
&lt;/code>&lt;/pre>
&lt;p>データの保存だけですが、このように SpreadSheet を用いることで手軽に簡易的なデータベースを利用することができます。&lt;/p>
&lt;p>また SpreadSheet を Sheet API として利用することで GAS のプロジェクトだけではなく、その他の web 開発やスマホアプリ開発などにもデータベースとして活用できるので知っておいて損はないかと思います。&lt;/p>
&lt;h2 id="コード">コード&lt;/h2>
&lt;p>こんなので公開していいのかという思いもありますが、大まかなコードを載せておきます。お見苦しいですが、何卒ご容赦下さい、、、
恐らくすごく簡単というのが分かると思います。&lt;/p>
&lt;pre>&lt;code class="language-html:index.html">&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;base target=&amp;quot;_top&amp;quot; /&amp;gt;
&amp;lt;!-- GASでのcssの読み込み--&amp;gt;
&amp;lt;?!= HtmlService.createHtmlOutputFromFile('css').getContent(); ?&amp;gt;
&amp;lt;meta
name=&amp;quot;viewport&amp;quot;
content=&amp;quot;width=device-width,initial-scale=1.0,minimum-scale=1.0&amp;quot;
/&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;
&amp;lt;h1&amp;gt;ハッカソン 採点シート&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;
使い方:&amp;lt;br /&amp;gt;採点欄がチームごとに４つの項目があるので各１０点、&amp;lt;br /&amp;gt;
合計40点で採点をお願いします。&amp;lt;br /&amp;gt;
各チームの採点が終わり次第、一番下の送信ボタンをおしてください。&amp;lt;br /&amp;gt;
また申し訳ありませんが、誤送信など、なにかございましたらすぐにご連絡ください
&amp;lt;/p&amp;gt;
&amp;lt;form method=&amp;quot;post&amp;quot; action=&amp;quot;送信先のURL&amp;quot;&amp;gt;
&amp;lt;table border=&amp;quot;1&amp;quot; width=&amp;quot;100%&amp;quot; height=&amp;quot;30rem&amp;quot;&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th&amp;gt;チーム名&amp;lt;/th&amp;gt;
&amp;lt;th&amp;gt;
&amp;lt;select name=&amp;quot;name&amp;quot;&amp;gt;
&amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;選択してください&amp;lt;/option&amp;gt;
&amp;lt;option value=&amp;quot;/*チーム名*/&amp;quot;&amp;gt;/*チーム名*/&amp;lt;/option&amp;gt;
...
&amp;lt;/select&amp;gt;
&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th colspan=&amp;quot;2&amp;quot;&amp;gt;採点項目&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;/*採点項目*/&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;&amp;lt;input type=&amp;quot;number&amp;quot; name=&amp;quot;name&amp;quot; min=&amp;quot;0&amp;quot; max=&amp;quot;10&amp;quot; /&amp;gt;/10&amp;lt;/td&amp;gt;
...
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;コメント&amp;lt;/td&amp;gt;
&amp;lt;td&amp;gt;
&amp;lt;textarea
id=&amp;quot;commit&amp;quot;
name=&amp;quot;comment&amp;quot;
placeholder=&amp;quot;こちらに何かチームに向けてコメントあればお願いします！&amp;quot;
&amp;gt;&amp;lt;/textarea&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&amp;lt;p&amp;gt;
&amp;lt;input
type=&amp;quot;submit&amp;quot;
value=&amp;quot;送信する&amp;quot;
style=&amp;quot;width:200px;height:100px;font-size:30px;float:right&amp;quot;
/&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-JavaScript:コード.gs">//htmlを読み込む
function doGet() {
var template = 'index';
return HtmlService.createTemplateFromFile(template).evaluate();
}
//得点計算処理
function myFunction() {
var sum = [];
var teamList = [&amp;quot;/*チームリスト*/&amp;quot;];
for(var j = 0; j &amp;lt; 8;j++){
sum[j] = 0;
}
//spreadsheetのデータを取得する処理(細かい解説は省きます)
var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
var sheet = spreadsheet.getActiveSheet();
var lastRow = sheet.getLastRow();
Logger.log(lastRow);
for(i = 9; i &amp;lt;= lastRow;i++){
var range = sheet.getRange(i,2);
for(k = 0; k &amp;lt; 8;k++){
if(range.getValue() == teamList[k]){
var range = sheet.getRange(i,3,1,4);
var valueArray = range.getValues();
for(var u = 0; u &amp;lt; 4;u++){
sum[k] += valueArray[0][u];
}
}
}
}
for(i = 0;i &amp;lt; 8;i++){
sheet.getRange(i + 1 ,9).setValue(sum[i]);
}
}
&lt;/code>&lt;/pre>
&lt;h2 id="作ってみた感想">作ってみた感想&lt;/h2>
&lt;p>コード自体も非常に簡単ながら、データの保存等も SpreadSheet で行い、利用してもらうための公開もすぐにできるので、サクッと作ることが出来ました。
ただやはり GAS 自体の勉強もいるかなという感じです。
また勉強だけでなく、大小あれど自分で実際に使ってもらうものを作ることができたので、その点は良かったと思います。&lt;/p>
&lt;h2 id="最後に">最後に&lt;/h2>
&lt;p>今回は本当に簡単な例をあげましたが、かなりざっくりしていたので、説明不足の点も多々あって申し訳ないです。ただ、こんなのがあるとだけ伝われば幸いです。
また、もちろん GAS にはもっと様々な事に利用することができるので、ご興味のある方は一度調べてみてください！&lt;/p>
&lt;p>追伸&lt;/p>
&lt;p>普通に Google Form とかでやればええやん、とかは言わないで m(_ _)m&lt;/p></description></item><item><title>手軽に始める！GAS を使ってみませんか～</title><link>https://blog.opuappnavi.com/post/gas-recommendation/</link><pubDate>Thu, 28 May 2020 19:47:24 +0900</pubDate><guid>https://blog.opuappnavi.com/post/gas-recommendation/</guid><description>&lt;p>どうもこんにちは、今回は自分がよく使っている、GAS について紹介したいと思います。&lt;/p>
&lt;p>ちなみにタイトルの通り、手軽に始められるので、最近プログラミングを始めたという方にもおススメなのでぜひ見ていってください(^-^)&lt;/p>
&lt;h1 id="gas-って">GAS って?&lt;/h1>
&lt;p>&lt;strong>GAS&lt;/strong>とは &lt;strong>Google Apps Script&lt;/strong>の略でプログラミング言語の一つです。&lt;/p>
&lt;p>読み方はガス、ギャスなどと言われることが多いです。&lt;/p>
&lt;p>一応、
&lt;a href="https://developers.google.com/gsuite/aspects/appsscript?hl=ja" target="_blank" rel="noopener">公式&lt;/a>の文言を載せておくと、&lt;/p>
&lt;blockquote>
&lt;p>Google Apps Script は JavaScript ベースのスクリプト言語で、ドキュメント、スプレッドシート、スライド、フォームなどの G Suite サービスをカスタマイズ、拡張できます。&lt;/p>
&lt;/blockquote>
&lt;p>とのこと。（抜粋）&lt;/p>
&lt;h1 id="gas-で何ができるの">GAS で何ができるの？&lt;/h1>
&lt;p>じゃあ GAS で何ができるのかというと、色々とあると思うのですが、とりあえず大きく分けてこの２つかなと。&lt;/p>
&lt;ul>
&lt;li>Google のサービスをより便利に活用する&lt;/li>
&lt;li>web アプリケーションの作成、公開&lt;/li>
&lt;/ul>
&lt;p>順に紹介していきます。&lt;/p>
&lt;h1 id="google-のサービスをより便利に活用する">Google のサービスをより便利に活用する&lt;/h1>
&lt;p>GAS では Google のサービスをより自由に効率的に使うことが出来ます。&lt;/p>
&lt;p>下記のようなサービスを利用する際、GAS のコードを加えることで、面倒な作業を自動化したりなどが可能です。&lt;/p>
&lt;h2 id="利用できるサービス例">利用できるサービス例&lt;/h2>
&lt;ul>
&lt;li>Google Document&lt;/li>
&lt;li>G Mail&lt;/li>
&lt;li>Google SpreadSheet&lt;/li>
&lt;li>Google Calender&lt;/li>
&lt;li>Google Form 　　　　などなど…&lt;/li>
&lt;/ul>
&lt;p>これらのサービスを使っている人も比較的多いのではないでしょうか？&lt;/p>
&lt;h2 id="使用例">使用例&lt;/h2>
&lt;p>具体的に GAS で Google のサービスをより効果的に用いた使用例としてはこのようなものがあります。&lt;/p>
&lt;ul>
&lt;li>カレンダーに自動でスケジュールを記入&lt;/li>
&lt;li>事務的メールを複数人に指定の時間に自動送信&lt;/li>
&lt;li>Google Formを自分好みに改造&lt;/li>
&lt;/ul>
&lt;p>もちろん他にも色々とありますが、例のように日常の何気ない作業を自動化したり、普段用いているサービスの機能を拡張するようなことができます。&lt;/p>
&lt;h1 id="web-アプリケーションの作成公開">Web アプリケーションの作成、公開&lt;/h1>
&lt;p>GAS では、google のサービスと連携して、web アプリケーションを開発、公開する機能があります。&lt;/p>
&lt;p>またアプリケーションの機能として、googleのサービスと連携しているのでその機能を簡単に用いることができ、少しのコードでちょっと素敵な事を行うことが可能です。&lt;/p>
&lt;h2 id="使用例-1">使用例&lt;/h2>
&lt;p>簡単に例をあげると&lt;/p>
&lt;ul>
&lt;li>SpreadSheetを簡易的なデータベースのように使う&lt;/li>
&lt;li>G Mailを用いてメール送信機能を作る&lt;/li>
&lt;/ul>
&lt;p>などがあります。&lt;/p>
&lt;p>他にも外部アプリケーションとの連携などを組合せて、様々な事ができると思うので、ぜひ試してください！&lt;/p>
&lt;h1 id="gasを使用するメリット">GASを使用するメリット&lt;/h1>
&lt;p>GASで何ができるかというのを紹介したところで、タイトルの&lt;strong>お手軽&lt;/strong>という理由を紹介していきます。&lt;/p>
&lt;h2 id="開発環境構築がいらない">開発環境構築がいらない！&lt;/h2>
&lt;p>GASでは新しく言語をはじめるときの面倒な環境構築はほとんどありません。&lt;/p>
&lt;p>必要なのは&lt;strong>Googleアカウント&lt;/strong>だけ。&lt;/p>
&lt;p>加えて、実行はGoogleのサーバーを利用するので、レンタルサーバーを用意したり、それ関係のツールを利用することもなく開発をすることができます。&lt;/p>
&lt;h2 id="無料">無料！&lt;/h2>
&lt;p>利用するのに基本的にお金はかかりません。&lt;/p>
&lt;h2 id="学習コストが低い勉強になる">学習コストが低い、勉強になる！&lt;/h2>
&lt;p>GASはJavaScriptベースで、そしてwebサイトを開発する時に良く用いられるHTML,CSSを使用して開発することが可能なので、一般的に学習コストはそこまで高くないです。&lt;/p>
&lt;p>それにJavaScriptを勉強中の方はそれを使って手軽にアプリケーションを作ったりできるので、その学習の実践の場として助けにもなると思います。&lt;/p>
&lt;h1 id="デメリットもあります">デメリットもあります…&lt;/h1>
&lt;p>メリットの反面、やはりデメリットもあります。&lt;/p>
&lt;p>その例として一つあげると無料で利用できる反面、Googleのサーバーを利用していているので、ユーザーによる過剰な負担を避けるために利用するのに制限があります。&lt;/p>
&lt;p>もっとも大きな制限として考えられるのは実行制限で、&lt;/p>
&lt;ul>
&lt;li>1回あたりの実行制限時間: 6分&lt;/li>
&lt;/ul>
&lt;p>となっています。&lt;/p>
&lt;p>これは工夫せずに重い処理を何度も書くと、引っかかってしまうので注意が必要です…&lt;/p>
&lt;p>そのためGASはそこまで大きなプロジェクトには向いていないと言えます&amp;hellip;&lt;/p>
&lt;p>詳しい公式の制限は&lt;a href="https://developers.google.com/apps-script/guides/services/quotas" target="_blank" rel="noopener">コチラ&lt;/a>&lt;/p>
&lt;h1 id="さっそく始めてみよう">さっそく始めてみよう&lt;/h1>
&lt;p>始める方法はとても簡単です。せっかくなので実際にやってみます。&lt;/p>
&lt;ol start="0">
&lt;li>
&lt;p>googleアカウントの作成（無い方は）&lt;br>
こちらより必要事項を記入して
&lt;a href="https://support.google.com/accounts/answer/27441?hl=ja" target="_blank" rel="noopener">Google アカウントを作成&lt;/a>
します。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ブラウザで&lt;a href="https://www.google.co.jp/drive/apps.html" target="_blank" rel="noopener">Google Drive&lt;/a>にアクセスします。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Google DriveにGoogle Apps Scriptを追加する&lt;br>
左上の新規＋ボタンをクリックし、その他→アプリを追加→Google Apps Scriptを探し、接続をクリック&lt;/p>
&lt;/li>
&lt;li>
&lt;p>もう一度新規＋を押し、その他にGoogle Apps Scriptが出てきたら完了
&lt;figure id="figure-helloworld">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./nobu_GAS_img_1.png" alt="HelloWorld" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
HelloWorld
&lt;/figcaption>&lt;/figure>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>それをクリックすると、エディタがでてくるので、これでGASをはじめる準備が出来ました！&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>ちなみにHello Worldはこんな感じです。&lt;/p>
&lt;figure id="figure-完了後">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./nobu_GAS_img_2.png" alt="完了後" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
完了後
&lt;/figcaption>&lt;/figure>
&lt;h1 id="最後に">最後に&lt;/h1>
&lt;p>今回はざっくりでしたがGASについて簡単に紹介しました。&lt;/p>
&lt;p>GASの存在だけでも知ってもらい、機会があれば何かで使ってもらえたら幸いです。&lt;/p>
&lt;p>また、GASを十分使いこなせているとは言えない自分ですが、おすすめしたい参考サイトも載せておくので興味がある人は見てみてください！&lt;/p>
&lt;h2 id="参考サイト">参考サイト&lt;/h2>
&lt;p>&lt;a href="https://tonari-it.com/google-apps-script-manual/" target="_blank" rel="noopener">【保存版】初心者向け実務で使えるGoogle Apps Script完全マニュアル&lt;/a>&lt;/p></description></item><item><title>GitHubのforkとライセンス</title><link>https://blog.opuappnavi.com/post/github-fork-mit/</link><pubDate>Sun, 24 May 2020 22:37:45 +0900</pubDate><guid>https://blog.opuappnavi.com/post/github-fork-mit/</guid><description>&lt;h1 id="githubのfork">GitHubのfork&lt;/h1>
&lt;p>GitHubにはforkという機能があります。既に存在するリポジトリをコピーして、オリジナルのリポジトリに影響を与えることなく変更を加えることができます。&lt;br>
このサイトは&lt;a href="https://github.com/sourcethemes/academic-kickstart" target="_blank" rel="noopener">Academic Kickstart&lt;/a>というリポジトリをforkして開発しています。&lt;/p>
&lt;h1 id="ライセンス">ライセンス&lt;/h1>
&lt;p>GitHubのリポジトリにはたいてい、LICENSEという名前のファイルがあります。ライセンスはそのプログラムの改変・商用利用などをしても良いかなどを記したファイルで、何を許可するかによって様々なライセンスが存在します。&lt;br>
その中で一番多く用いられているライセンスの１つがMITライセンスです。&lt;a href="https://github.com/sourcethemes/academic-kickstart" target="_blank" rel="noopener">Academic Kickstart&lt;/a>もMITライセンスです。
MITライセンスが設定されたリポジトリは、以下の2つを守れば改変・商用利用など自由に使うことができます。&lt;/p>
&lt;ul>
&lt;li>元の著作権表示(&lt;code>Copyright (c) 年 作者名&lt;/code>)をそのまま掲載すること&lt;/li>
&lt;li>ライセンスの全文（あるいは全文が掲載されたサイトのURL）を掲載すること&lt;/li>
&lt;/ul>
&lt;p>詳しくは&lt;a href="https://wisdommingle.com/mit-license/" target="_blank" rel="noopener">このサイト&lt;/a>などを参照してください。&lt;/p>
&lt;h1 id="forkとライセンス">forkとライセンス&lt;/h1>
&lt;p>このサイトを開発する中で、「forkしたリポジトリのライセンスはどう変更するべきなのか」という疑問を持ち、検索してみました。その結果わかった2つの方法を紹介します。&lt;/p>
&lt;h2 id="方法1一行下に自分の著作権表示を追加">方法1　一行下に自分の著作権表示を追加&lt;/h2>
&lt;details class="spoiler " id="spoiler-0">
&lt;summary>方法1&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-md">The MIT License (MIT)
Copyright (c) 年 foo
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code>&lt;/pre>
&lt;p>上のようなライセンスのリポジトリをforkする場合、次のように変更します。&lt;/p>
&lt;pre>&lt;code class="language-md">The MIT License (MIT)
Copyright (c) 年 foo
Copyright (c) 年 作者名(自分)
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;h2 id="方法2ライセンスを併記">方法2　ライセンスを併記&lt;/h2>
&lt;details class="spoiler " id="spoiler-1">
&lt;summary>方法2&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-md">The MIT License (MIT)
Copyright (c) 年 foo
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code>&lt;/pre>
&lt;p>上のようなライセンスのリポジトリをforkする場合、書き方は色々ありますが、例えば次のように変更します。&lt;/p>
&lt;pre>&lt;code class="language-md">The MIT License (MIT)
Copyright (c) 年 作者名(自分)
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
Here is the original copyright notice:
The MIT License (MIT)
Copyright (c) 年 foo
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED &amp;quot;AS IS&amp;quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code>&lt;/pre>
&lt;p>GitHubはライセンスの種類を認識し、説明を表示する機能があります。この方法だとGitHubがMITライセンスだと認識してくれないという問題があります。&lt;/p>
&lt;/p>
&lt;/details>
&lt;h1 id="検証">検証&lt;/h1>
&lt;p>forkしたリポジトリのライセンス変更に、実際どのような方法が取られているか検証することにしました。検証するリポジトリは&lt;a href="https://github.com/tokyo-metropolitan-gov/covid19" target="_blank" rel="noopener">東京都コロナウイルス対策サイト&lt;/a>です。GitHubにMITライセンスのリポジトリが公開されており、多くの都道府県が(公式 / 非公式で)このリポジトリをforkした対策サイトを作成しています。&lt;a href="https://github.com/tokyo-metropolitan-gov/covid19/blob/development/FORKED_SITES.md" target="_blank" rel="noopener">派生したサイト一覧&lt;/a>に掲載されているリポジトリについて、&lt;code>master&lt;/code>ブランチの&lt;code>LICENSE.txt&lt;/code>の権利表記を比較すると、以下のような結果になりました。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">著作権表示に加えられた変更&lt;/th>
&lt;th style="text-align:center">リポジトリ数&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">そのまま&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/td>
&lt;td style="text-align:center">51&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">書き換え&lt;/td>
&lt;td style="text-align:center">7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">方法1&lt;/td>
&lt;td style="text-align:center">1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">方法2&lt;/td>
&lt;td style="text-align:center">0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>東京都のリポジトリの権利表記&lt;code>Copyright (c) 2020 Tokyo Metropolitan Government and other contributors.&lt;/code>をforkした側の名前に書き換えているリポジトリがいくつかありました。厳密に言えばこれはMITライセンスの規約違反になるので意外でした。「コロナ対策サイト」で著作権の問題は起こらないでしょうから、ライセンス関連はあまり気にしていないのかもしれません。&lt;/p>
&lt;h1 id="参考サイト">参考サイト&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://help.github.com/ja/github/getting-started-with-github/fork-a-repo">https://help.github.com/ja/github/getting-started-with-github/fork-a-repo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wisdommingle.com/mit-license/">https://wisdommingle.com/mit-license/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gist.github.com/fbaierl/1d740a7925a6e0e608824eb27a429370">https://gist.github.com/fbaierl/1d740a7925a6e0e608824eb27a429370&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://opensource.stackexchange.com/questions/6119/forking-github-repository-mit-what-references-to-the-original-author-should-r">https://opensource.stackexchange.com/questions/6119/forking-github-repository-mit-what-references-to-the-original-author-should-r&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ja.stackoverflow.com/questions/3040/mit%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9%E3%81%AE%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%82%92%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AF%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%AE%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9%E8%A1%A8%E8%A8%98">https://ja.stackoverflow.com/questions/3040/mit%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9%E3%81%AE%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%82%92%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AF%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%AE%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9%E8%A1%A8%E8%A8%98&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://softwareengineering.stackexchange.com/questions/277688/if-i-fork-a-project-on-github-that-is-licensed-under-mit-how-to-i-handle-the-at">https://softwareengineering.stackexchange.com/questions/277688/if-i-fork-a-project-on-github-that-is-licensed-under-mit-how-to-i-handle-the-at&lt;/a>&lt;/li>
&lt;/ul>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>forkした側のライセンスを別ファイルに掲載しているリポジトリを含みます。&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>(個人的)プログラマーなら使えたほうがいいファイル形式</title><link>https://blog.opuappnavi.com/post/file-format-should-able-use/</link><pubDate>Tue, 05 May 2020 21:46:39 +0900</pubDate><guid>https://blog.opuappnavi.com/post/file-format-should-able-use/</guid><description>&lt;p>プログラミング入門講座を学び、UnityやAndroid、Webなどの開発を始めた脱プログラミング初心者に向けた記事です。何を開発するかに関わらず、内容を理解出来たり自分で書けたりすれば役にたつと思うファイル形式を3つ紹介します。&lt;/p>
&lt;h1 id="markdown">Markdown&lt;/h1>
&lt;p>Markdown（マークダウン）は、文書を記述するための軽量マークアップ言語のひとつです。
ソフトウェアのインストールし使用する前の注意事項などを記述した&lt;code>Readme&lt;/code>ファイルなどに用いられています。また、このサイトの記事も全てMarkdownファイルです。&lt;/p>
&lt;h1 id="json">JSON&lt;/h1>
&lt;p>JSONは&lt;code>Javascript Object Notation&lt;/code>の略で、データを記述するための言語です。&lt;/p>
&lt;h2 id="unity">Unity&lt;/h2>
&lt;p>Unityでは&lt;code>JsonUtility&lt;/code>クラスを使用することで、オブジェクトをJSON形式の文字列に変換したり、逆にJSON形式の文字列からオブジェクトを生成することができます。といっても、オブジェクト指向に詳しくない人にはよく分からない説明だったと思います。簡単に言えば、JSONファイルからキャラクターのステータスなどのデータを読み込むことがとても簡単にできます。&lt;/p>
&lt;h2 id="web-api">Web API&lt;/h2>
&lt;p>Web APIとは、ものすごく乱暴に言えば、HTTP通信によって利用できる便利機能です。様々な種類のWebAPIがあり、WebAPIごとに特定のURLにアクセスすることで様々な機能を利用することができます。例えば、天気予報や鉄道の路線情報といったデータを取得したり、AIを用いた画像認識を利用したりすることが可能です。WebAPIを利用した結果は、JSON形式やXML形式の文字列で取得できることが多いです。&lt;/p>
&lt;h1 id="xml">XML&lt;/h1>
&lt;p>XMLは&lt;code>Extensible Markup Language&lt;/code>の略で、文書やデータの意味や構造を記述するためのマークアップ言語の一つです。マークアップ言語とは、「タグ」と呼ばれる特定の文字列で地の文に情報の意味や構造、装飾などを埋め込んでいく言語です。&lt;/p>
&lt;h2 id="web-api-1">Web API&lt;/h2>
&lt;p>WebAPIを利用した結果は、JSON形式やXML形式の文字列で取得できることが多いです。詳しくは&lt;a href="#json">JSON&lt;/a>を参照してください。&lt;/p>
&lt;h2 id="android">Android&lt;/h2>
&lt;p>Android StudioでのAndroidアプリ開発では、UIのレイアウトやスタイル、多言語対応の文字列などに関してxmlで記述されています。&lt;/p>
&lt;h2 id="unity-1">Unity&lt;/h2>
&lt;p>Unity開発でも将来的にXMLを使うことになるかもしれません。&lt;br>
Unity 2019から&lt;code>UI Elements&lt;/code>という新しいUIシステムが使えます。&lt;code>UI Elements&lt;/code>はwebに近い設計で、UIをレイアウト、スタイル、ロジックに分けて記述します。XMLをベースとしたUXMLファイルを記述することでレイアウトをカスタマイズすることができます。
&lt;div class="alert alert-note">
&lt;div>
&lt;code>UI Builder&lt;/code>(preview版)を使えば、マウスクリックやドラッグ＆ドロップなどでレイアウトやスタイルをカスタマイズできます。
&lt;/div>
&lt;/div>
&lt;code>UI Elements&lt;/code>は現状、エディタ拡張のUI(現在のIMGUI)にしか対応していませんが、将来的にはゲーム内UI(現在のuGUI)にも対応する予定とのことです。&lt;/p>
&lt;h1 id="参考">参考&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/Markdown">https://ja.wikipedia.org/wiki/Markdown&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%AA%E3%83%BC%E3%83%89%E3%83%9F%E3%83%BC">https://ja.wikipedia.org/wiki/%E3%83%AA%E3%83%BC%E3%83%89%E3%83%9F%E3%83%BC&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/JavaScript_Object_Notation">https://ja.wikipedia.org/wiki/JavaScript_Object_Notation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/mikan3rd/items/ba4737023f08bb2ca161">https://qiita.com/mikan3rd/items/ba4737023f08bb2ca161&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/NagaokaKenichi/items/df4c8455ab527aeacf02">https://qiita.com/NagaokaKenichi/items/df4c8455ab527aeacf02&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://itpropartners.com/blog/8546/">https://itpropartners.com/blog/8546/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E8%A8%98%E8%BF%B0%E8%A8%80%E8%AA%9E">https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%BC%E3%82%BF%E8%A8%98%E8%BF%B0%E8%A8%80%E8%AA%9E&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://e-words.jp/w/XML.html">http://e-words.jp/w/XML.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blogs.unity3d.com/jp/2019/04/23/whats-new-with-uielements-in-2019-1/">https://blogs.unity3d.com/jp/2019/04/23/whats-new-with-uielements-in-2019-1/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=5UTiLOIU8TE">https://www.youtube.com/watch?v=5UTiLOIU8TE&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity製ゲームをWebで共有する方法</title><link>https://blog.opuappnavi.com/post/unity-github-pages/</link><pubDate>Mon, 04 May 2020 20:17:22 +0900</pubDate><guid>https://blog.opuappnavi.com/post/unity-github-pages/</guid><description>&lt;p>Gitに詳しくない人向けに書いています。Gitに詳しい人は&lt;code>詳しくない人向け&lt;/code>の部分は読まなくて大丈夫です。&lt;/p>
&lt;h1 id="必要なもの">必要なもの&lt;/h1>
&lt;ul>
&lt;li>Unity&lt;/li>
&lt;li>GitHub アカウント&lt;/li>
&lt;li>Git：&lt;a href="https://git-scm.com/downloads" target="_blank" rel="noopener">ここ&lt;/a>からダウンロードできます&lt;/li>
&lt;/ul>
&lt;h1 id="1-unityでゲームをビルドする">1. Unityでゲームをビルドする&lt;/h1>
&lt;h2 id="11-build-settingsを開く">1.1 Build Settingsを開く&lt;/h2>
&lt;p>左上のメニューで&lt;code>File&lt;/code>&amp;gt;&lt;code>Build Settings&lt;/code>をクリックしてください。&lt;/p>
&lt;h2 id="12-プラットフォームの変更">1.2 プラットフォームの変更&lt;/h2>
&lt;p>&lt;code>WebGL&lt;/code>を選択し、&lt;code>Switch Platform&lt;/code>をクリックしてください。&lt;/p>
&lt;h2 id="13-ゲームをビルド">1.3 ゲームをビルド&lt;/h2>
&lt;p>&lt;code>Build&lt;/code>をクリックしてください。ビルド先はどこでも構いません。私は&lt;code>(プロジェクト名)/Builds/WebGL&lt;/code>を選択しています。&lt;/p>
&lt;h1 id="2-githubにアップロード">2. GitHubにアップロード&lt;/h1>
&lt;p>ビルドの結果、以下の3つのファイルが生成されます。&lt;/p>
&lt;ul>
&lt;li>&lt;code>Build&lt;/code>フォルダ&lt;/li>
&lt;li>&lt;code>TemplateData&lt;/code>フォルダ&lt;/li>
&lt;li>&lt;code>index.html&lt;/code>ファイル&lt;/li>
&lt;/ul>
&lt;p>これらのファイルをGitHubにアップロードします。&lt;br>
&lt;details class="spoiler " id="spoiler-0">
&lt;summary>詳しくない人向け&lt;/summary>
&lt;p>&lt;h2 id="21-githubにサインイン">2.1 GitHubにサインイン&lt;/h2>
&lt;p>&lt;a href="https://github.com/">GitHub&lt;/a>にアクセスし、サインインしてください。&lt;/p>
&lt;h2 id="22-新しいリポジトリの作成">2.2 新しいリポジトリの作成&lt;/h2>
&lt;figure class="left" >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GitHub_New_Repository.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
`Repositories`の右にある`New`をクリックしてください。
&lt;figure class="left" >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GitHub_New_Repository2.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
`Repository name`は任意の名前で構いませんが、ゲームをプレイする人も見ることができるので注意してください。
`Public`と`Private`を選択できますが、`Public`を選択してください。
`Create repository`を選択してリポジトリを作成してください。
&lt;figure class="left" >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GitHub_New_Repository3.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
赤い枠で囲まれたボタンを押してください。左のURLがクリップボードにコピーされます。
&lt;h2 id="23-ファイルのアップロード">2.3 ファイルのアップロード&lt;/h2>
&lt;p>&lt;code>Git Bash&lt;/code>を起動してください。
起動時のフォルダは&lt;code>C:\Users\(ユーザー名)&lt;/code>なので、ビルド結果があるフォルダに移動してください。&lt;code>cd (フォルダ名)&lt;/code>コマンドで移動できます。
移動したら、以下のコマンドを一行ずつ実行してください。&lt;/p>
&lt;div class="alert alert-note">
&lt;div>
&lt;code>Git Bash&lt;/code>では&lt;code>Shift&lt;/code>+&lt;code>Insert&lt;/code>で貼り付けができます
&lt;/div>
&lt;/div>
&lt;pre>&lt;code class="language-bash">git init
git add .
git commit -m &amp;quot;Initial Commit&amp;quot;
git remote add origin (先ほどコピーしたURL)
git push -u origin master
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>&lt;/p>
&lt;h1 id="3-webにゲームを公開">3. Webにゲームを公開&lt;/h1>
&lt;p>
&lt;figure class="left" >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GitHub_Pages.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;code>Settings&lt;/code>をクリックしてください。
&lt;figure class="left" >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GitHub_Pages2.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
スクロールし、&lt;code>GitHub Pages&lt;/code>の&lt;code>Source&lt;/code>の下にあるドロップダウンリストで&lt;code>master branch&lt;/code>を選択してください。&lt;/p>
&lt;h1 id="公開したゲームをプレイ">公開したゲームをプレイ&lt;/h1>
&lt;p>&lt;code>https://(ユーザー名).github.io/(リポジトリ名)/&lt;/code>というURLにアクセスすると、作ったゲームをプレイすることができます。&lt;/p></description></item><item><title>GitHub for Unityの紹介</title><link>https://blog.opuappnavi.com/post/github-for-unity/</link><pubDate>Thu, 30 Apr 2020 20:18:25 +0900</pubDate><guid>https://blog.opuappnavi.com/post/github-for-unity/</guid><description>&lt;h1 id="使用したunityのバージョン">使用したUnityのバージョン&lt;/h1>
&lt;p>Unity 2018.4.22f1&lt;/p>
&lt;h1 id="導入方法">導入方法&lt;/h1>
&lt;p>プロジェクトごとに行う必要があります。&lt;/p>
&lt;ol>
&lt;li>Asset Storeから「GitHub for Unity」をインポート&lt;/li>
&lt;li>メニューで&lt;code>Window&lt;/code>&amp;gt;&lt;code>GitHub&lt;/code>を選択&lt;br>
&lt;figure class="left" >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GitHub_Tab_Menu.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
GitHubタブが開きます。
&lt;figure class="left" >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GitHub_Tab.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/li>
&lt;li>&lt;strong>(初回のみ)&lt;/strong> &lt;code>Sign In&lt;/code>をクリック&lt;br>
&lt;figure class="left" >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GitHub_SignIn.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
ダイアログが表示されるので、GitHubアカウントでサインインしてください。&lt;/li>
&lt;li>&lt;code>Initialize a git repository for this project&lt;/code>をクリック&lt;br>
少し待つと、タブの中身が変化します。&lt;br>
&lt;figure class="left" >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GitHub_AfterGitInit.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/li>
&lt;/ol>
&lt;h1 id="使い方">使い方&lt;/h1>
&lt;p>&lt;code>Changes&lt;/code>を選択してください。前回保存した状態から変更があったファイルが一覧表示されます。
&lt;figure class="left" >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="./GitHub_Changes.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>&lt;/p>
&lt;h2 id="変更を保存する">変更を保存する&lt;/h2>
&lt;ol>
&lt;li>リストから保存したい変更をチェックマークをクリックして選択&lt;/li>
&lt;li>&lt;code>Commit summary&lt;/code>に変更内容を記述&lt;/li>
&lt;li>&lt;code>Commit description&lt;/code>に変更内容の詳細を記述（任意）&lt;/li>
&lt;li>&lt;code>Commit to [master]&lt;/code>をクリック&lt;/li>
&lt;/ol>
&lt;h2 id="変更内容を確認する">変更内容を確認する&lt;/h2>
&lt;p>前回保存した状態と現在の状態との差分を見ることができます。
&lt;div class="alert alert-warning">
&lt;div>
差分を比較するソフトウェア(&lt;a href="https://forest.watch.impress.co.jp/library/software/winmerge/">WinMerge&lt;/a>など)をインストールする必要があります。
&lt;/div>
&lt;/div>
&lt;/p>
&lt;ol>
&lt;li>リストから差分を見たいファイルを右クリック&lt;/li>
&lt;li>&lt;code>Show Diff&lt;/code>をクリック&lt;/li>
&lt;/ol>
&lt;h3 id="変更を取り消す">変更を取り消す&lt;/h3>
&lt;p>加えた変更を無かったことにして、前回保存した状態に戻すことができます。&lt;/p>
&lt;ol>
&lt;li>リストから変更を取り消したいファイルを右クリック&lt;/li>
&lt;li>&lt;code>Discard&lt;/code>をクリック&lt;/li>
&lt;/ol>
&lt;h1 id="その他">その他&lt;/h1>
&lt;h2 id="比較ソフトウェアを変更したい">比較ソフトウェアを変更したい&lt;/h2>
&lt;p>比較ソフトウェアが複数インストールされていて、変更したい場合&lt;/p>
&lt;ol>
&lt;li>UnityのPreferenceを開く&lt;/li>
&lt;li>&lt;code>External Tools&lt;/code>を選択&lt;/li>
&lt;li>&lt;code>Revision Controll Diff/Merge&lt;/code>でソフトウェアを選択&lt;/li>
&lt;/ol>
&lt;hr>
&lt;details class="spoiler " id="spoiler-6">
&lt;summary>GitHubやGitに詳しい人向け&lt;/summary>
&lt;p>&lt;h2 id="revert">Revert&lt;/h2>
&lt;ol>
&lt;li>&lt;code>History&lt;/code>を選択&lt;/li>
&lt;li>コミットを右クリック&lt;/li>
&lt;li>&lt;code>Revert&lt;/code>をクリック&lt;/li>
&lt;/ol>
&lt;/p>
&lt;/details></description></item><item><title>Truck Quiz</title><link>https://blog.opuappnavi.com/post/truck-quiz/</link><pubDate>Tue, 28 Apr 2020 15:07:58 +0900</pubDate><guid>https://blog.opuappnavi.com/post/truck-quiz/</guid><description>&lt;p>Unityについて勉強するため春休みの間に作成した、&amp;ldquo;Truck Quiz&amp;quot;を紹介します。&lt;/p>
&lt;h1 id="ゲームの説明">ゲームの説明&lt;/h1>
&lt;p>某有名クイズ番組のクイズを模したゲームです。
2択問題が5問出題されます。間違えてた時点でゲームオーバーです。
キーボード操作、タッチ操作の両方に対応しています。&lt;/p>
&lt;div id="unity_webgl_0_1" style="width: 100%; margin: 15px 0; background: white; border-radius: 15px;">
&lt;div style="position: relative;">
&lt;div id="unity_webgl_0_2" style="height: 0;">
&lt;iframe id="unity_webgl_0_3" src="https://juris710.github.io/TruckQuizSample/" allowfullscreen>&lt;/iframe>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;script>
document.getElementById("unity_webgl_0_2").style.paddingBottom = 100 * 700 / 980 + "%";
function set_width() {
const w = 980 ;
const h = 700 ;
const client_w = document.getElementById("unity_webgl_0_2").clientWidth;
const per = client_w / w;
const rev = 100 / per;
const iframe = document.getElementById("unity_webgl_0_3");
iframe.height = rev + "%";
iframe.width = rev + "%";
iframe.style = "position: absolute; top: 0; left: 0; transform:scale(" + per + ");-o-transform:scale(" + per + ");-webkit-transform:scale(" + per + ");-moz-transform:scale(" + per + ");-ms-transform:scale(" + per + ");transform-origin:top left; border: 0;"
}
set_width();
window.onresize = function(){ set_width(); };
&lt;/script>
&lt;h1 id="工夫した点">工夫した点&lt;/h1>
&lt;ul>
&lt;li>クイズの問題やゲーム設定をJSONファイルで管理&lt;/li>
&lt;li>画像のアスペクト比を維持するように&lt;/li>
&lt;li>解答の取り消し、問題の差し替え機能実装&lt;/li>
&lt;li>ゲーム内の文章ほぼ全てにフリガナを付ける（フリガナ表示・非表示切り替え可能）&lt;/li>
&lt;li>問題の解説に文章だけでなく選択肢の画像も利用できるように&lt;/li>
&lt;/ul>
&lt;h1 id="実装の概説">実装の概説&lt;/h1>
&lt;details class="spoiler " id="spoiler-1">
&lt;summary>Unityに詳しい人向け&lt;/summary>
&lt;p>&amp;ldquo;Truck Quiz&amp;quot;を主に動かしているのは&lt;code>StateMachineBehaviour&lt;/code>です。&lt;code>StateMachineBehaviour&lt;/code>について軽く説明すると、アニメーションの開始時、終了時、Update時(MonoBehaviourのUpdate関数同様、アニメーションの再生中定期的に呼ばれる)に任意の処理を挟むことのできるクラスです。&lt;br>
トロッコとUIで2つのAnimatorがあり、「選択肢を選んだアニメーション」が終了したら「トロッコが曲がるアニメーション」を開始する、みたいな処理をGameManagerクラス内で実装しています。&lt;/p>
&lt;/details>
&lt;h1 id="改良予定">改良予定&lt;/h1>
&lt;details class="spoiler " id="spoiler-2">
&lt;summary>Unityに詳しい人向け&lt;/summary>
&lt;p>&lt;h2 id="assetbundleを使用した画像管理">AssetBundleを使用した画像管理&lt;/h2>
&lt;p>現状Resourceクラスで問題の画像を管理していますが、公式が「Resourceクラスは使うな」と言っているので、AssetBundleへの切替を検討しています&lt;/p>
&lt;h2 id="unityバージョンのアップグレード">Unityバージョンのアップグレード&lt;/h2>
&lt;p>現在使用しているUnityのバージョンは2018ですが、2018ではpreview版である&lt;code>Input System&lt;/code>を使用したいため、2019へのアップグレードを検討しています。&lt;/p>
&lt;h2 id="デザイン面の改善">デザイン面の改善&lt;/h2>
&lt;p>UIデザインの改善を検討しています。&lt;/p>
&lt;/p>
&lt;/details></description></item><item><title>記事の書き方</title><link>https://blog.opuappnavi.com/post/how-to-write-an-article/</link><pubDate>Tue, 28 Apr 2020 00:01:09 +0900</pubDate><guid>https://blog.opuappnavi.com/post/how-to-write-an-article/</guid><description>&lt;h1 id="はじめに">はじめに&lt;/h1>
&lt;p>このサイトでの記事の書き方をまとめました。英語でも構わない場合は&lt;a href="https://sourcethemes.com/academic/docs/writing-markdown-latex/" target="_blank" rel="noopener">公式ドキュメント&lt;/a>も参照してください。&lt;/p>
&lt;h1 id="markdown記法">Markdown記法&lt;/h1>
&lt;p>全ての記事はMarkdown記法で書く必要があります。書き方については&lt;a href="https://qiita.com/kamorits/items/6f342da395ad57468ae3" target="_blank" rel="noopener">このサイト&lt;/a>を参照してください。&lt;/p>
&lt;h2 id="画像を挿入する場合">画像を挿入する場合&lt;/h2>
&lt;pre>&lt;code class="language-md">![代替テキスト](./画像名)
&lt;/code>&lt;/pre>
&lt;p>&lt;div class="alert alert-note">
&lt;div>
「画像名」には拡張子も含めてください
&lt;/div>
&lt;/div>
画像のサイズを変えたい、または画像を左寄せ・右寄せしたい場合は下の&lt;a href="#%e7%94%bb%e5%83%8f%e3%81%ae%e6%8c%bf%e5%85%a5">画像の挿入&lt;/a>を参照してください&lt;/p>
&lt;h1 id="shortcodes">Shortcodes&lt;/h1>
&lt;p>ShortcodesとはHugo独自の機能で、Markdownファイルに書くことができるスニペットです。&lt;/p>
&lt;h2 id="画像の挿入">画像の挿入&lt;/h2>
&lt;pre>&lt;code class="language-md">{{&amp;lt;figure src=&amp;quot;./画像名&amp;quot; title=&amp;quot;代替テキスト&amp;quot;&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;div class="alert alert-note">
&lt;div>
「画像名」には拡張子も含めてください
&lt;/div>
&lt;/div>
&lt;h3 id="画像の左寄せ右寄せ">画像の左寄せ、右寄せ&lt;/h3>
&lt;p>&lt;details class="spoiler " id="spoiler-2">
&lt;summary>左寄せ&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-md">{{&amp;lt;figure src=&amp;quot;./画像名&amp;quot; title=&amp;quot;代替テキスト&amp;quot; class=&amp;quot;left&amp;quot;&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-3">
&lt;summary>右寄せ&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-md">{{&amp;lt;figure src=&amp;quot;./画像名&amp;quot; title=&amp;quot;代替テキスト&amp;quot; class=&amp;quot;right&amp;quot;&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-4">
&lt;summary>左寄せ(float)&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-md">{{&amp;lt;figure src=&amp;quot;./画像名&amp;quot; title=&amp;quot;代替テキスト&amp;quot; class=&amp;quot;float-left&amp;quot;&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-5">
&lt;summary>右寄せ(float)&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-md">{{&amp;lt;figure src=&amp;quot;./画像名&amp;quot; title=&amp;quot;代替テキスト&amp;quot; class=&amp;quot;float-right&amp;quot;&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
他にも、画像の幅・高さなどをカスタムすることができます。詳しくは&lt;a href="https://gohugo.io/content-management/shortcodes/#figure" target="_blank" rel="noopener">公式ドキュメント&lt;/a> を参照してください。&lt;/p>
&lt;h2 id="youtube動画埋め込み">Youtube動画埋め込み&lt;/h2>
&lt;pre>&lt;code class="language-md">{{&amp;lt;youtube 動画のID&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;div class="alert alert-note">
&lt;div>
YoutubeのURLは「https://www.youtube.com/watch?v=動画のID」という形式になっています
&lt;/div>
&lt;/div>
&lt;h2 id="unity-webglの埋め込み">Unity WebGLの埋め込み&lt;/h2>
&lt;p>&lt;a href="https://ch-random.net/post/93/" target="_blank" rel="noopener">ランダムさんの記事&lt;/a>の内容を少し改変した自作Shortcodeです。Unity WebGLのゲームをページ内でプレイすることができます。&lt;/p>
&lt;pre>&lt;code class="language-md">{{&amp;lt;unity src=&amp;quot;URL&amp;quot;&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;h2 id="ツイートの埋め込み">ツイートの埋め込み&lt;/h2>
&lt;pre>&lt;code class="language-md">{{&amp;lt;tweet ツイートID&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;div class="alert alert-note">
&lt;div>
ツイートのURLは「https://twitter.com/&amp;hellip;/status/ツイートID」という形式になっています。
&lt;/div>
&lt;/div>
&lt;h2 id="折りたたみ">折りたたみ&lt;/h2>
&lt;pre>&lt;code class="language-md">{{&amp;lt;spoiler &amp;quot;折りたたまれている時に表示する文字列&amp;quot;&amp;gt;}}
展開された時に表示する文章(複数行可)
{{&amp;lt;/spoiler&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;p>折りたたまれている時、展開された時ともに、Markdown記法を用いた文章が使えます。例えば&lt;/p>
&lt;pre>&lt;code class="language-md">{{&amp;lt;spoiler &amp;quot;`Hello`&amp;quot;&amp;gt;}}
foo
*bar*
&amp;gt; Hello, World!
{{&amp;lt;/spoiler&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;p>のように書けば、下のように表示されます。&lt;/p>
&lt;details class="spoiler " id="spoiler-8">
&lt;summary>&lt;code>Hello&lt;/code>&lt;/summary>
&lt;p>&lt;p>foo&lt;br>
&lt;em>bar&lt;/em>&lt;/p>
&lt;blockquote>
&lt;p>Hello, World!&lt;/p>
&lt;/blockquote>
&lt;/p>
&lt;/details>
&lt;h2 id="ページへのリンク">ページへのリンク&lt;/h2>
&lt;pre>&lt;code class="language-md">{{&amp;lt;cite page=&amp;quot;表示したいページのパス(ホームからの相対パス)&amp;quot; view=&amp;quot;表示形式&amp;quot;&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;p>表示形式には1から4の数値が指定できます。&lt;/p>
&lt;p>例えば、&lt;code>{{&amp;lt;cite page=&amp;quot;project/opu-virtual-festival-2020&amp;quot; view=&amp;quot;1&amp;quot;&amp;gt;}}&lt;/code>と記述すると、下のように表示されます。
&lt;div class="view-list-item">
&lt;i class="fas fa-project-diagram pub-icon" aria-hidden="true">&lt;/i>
&lt;a href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/" >府大バーチャル学祭&lt;/a>
&lt;div class="article-metadata">
&lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/juris710/">Juris710&lt;/a>&lt;/span>, &lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/nobu/">Nobu&lt;/a>&lt;/span>, &lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/yamaguchi/">ヤマグチ&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;/p>
&lt;p>&lt;code>view=&amp;quot;2&amp;quot;&lt;/code>に変えると、下のように表示されます。
&lt;div class="media stream-item">
&lt;div class="media-body">
&lt;div class="section-subheading article-title mb-0 mt-0">
&lt;a href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/" >府大バーチャル学祭&lt;/a>
&lt;/div>
&lt;a href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/" class="summary-link">
&lt;div class="article-style">
OPU Virtual Festival
&lt;/div>
&lt;/a>
&lt;div class="stream-meta article-metadata">
&lt;div>
&lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/juris710/">Juris710&lt;/a>&lt;/span>, &lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/nobu/">Nobu&lt;/a>&lt;/span>, &lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/yamaguchi/">ヤマグチ&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="ml-3">
&lt;/div>
&lt;/div>
&lt;/p>
&lt;p>&lt;code>view=&amp;quot;3&amp;quot;&lt;/code>に変えると、下のように表示されます。
&lt;div class="card-simple">
&lt;div class="article-metadata">
&lt;div>
&lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/juris710/">Juris710&lt;/a>&lt;/span>, &lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/nobu/">Nobu&lt;/a>&lt;/span>, &lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/yamaguchi/">ヤマグチ&lt;/a>&lt;/span>
&lt;/div>
&lt;span class="article-date">
2020/04/28 投稿
( 2021/03/16 最終更新 )
&lt;/span>
&lt;/div>
&lt;div class="section-subheading article-title mb-1 mt-3">
&lt;a href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/">府大バーチャル学祭&lt;/a>
&lt;/div>
&lt;a href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/" class="summary-link">
&lt;div class="article-style">
&lt;p>OPU Virtual Festival&lt;/p>
&lt;/div>
&lt;/a>
&lt;/div>
&lt;/p>
&lt;p>&lt;code>view=&amp;quot;4&amp;quot;&lt;/code>に変えると、下のように表示されます。
&lt;div class="pub-list-item" style="margin-bottom: 1rem">
&lt;i class="far fa-file-alt pub-icon" aria-hidden="true">&lt;/i>
&lt;span class="article-metadata li-cite-author">
&lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/juris710/">Juris710&lt;/a>&lt;/span>, &lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/nobu/">Nobu&lt;/a>&lt;/span>, &lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/yamaguchi/">ヤマグチ&lt;/a>&lt;/span>
&lt;/span>
(2020).
&lt;a href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/">府大バーチャル学祭&lt;/a>.
&lt;p>
&lt;/p>
&lt;/div>
&lt;/p>
&lt;h1 id="その他">その他&lt;/h1>
&lt;h2 id="数式">数式&lt;/h2>
&lt;p>$\LaTeX$ 記法を用いることで数式を表示することができます。数式は&lt;code>$$&lt;/code>で囲む必要があります。&lt;/p>
&lt;pre>&lt;code class="language-md">$$ F=G\frac{Mm}{r^2} $$
&lt;/code>&lt;/pre>
&lt;p>下のように表示されます。
$$ F=G\frac{Mm}{r^2} $$
&lt;code>$$&lt;/code>の代わりに&lt;code>$&lt;/code>で囲むと $ F=G\frac{Mm}{r^2} $ のようにインライン表示できます。&lt;/p>
&lt;h2 id="diagrams">Diagrams&lt;/h2>
&lt;p>mermaid記法を使った図の挿入が可能です。&lt;/p>
&lt;pre>&lt;code class="language-md">```mermaid
graph TD;
A--&amp;gt;B;
A--&amp;gt;C;
B--&amp;gt;D;
C--&amp;gt;D;
```
&lt;/code>&lt;/pre>
&lt;p>以下のように表示されます。&lt;/p>
&lt;pre>&lt;code class="language-mermaid">graph TD;
A--&amp;gt;B;
A--&amp;gt;C;
B--&amp;gt;D;
C--&amp;gt;D;
&lt;/code>&lt;/pre>
&lt;h2 id="スライド">スライド&lt;/h2>
&lt;p>Markdown記法で簡易的なスライドを作成することができます。&lt;/p>
&lt;pre>&lt;code class="language-md">{{&amp;lt;slide-frame src=&amp;quot;スライド名&amp;quot;&amp;gt;}}
&lt;/code>&lt;/pre>
&lt;iframe id=slide-introduction src=https://blog.opuappnavi.com/slides/slide-introduction width=640 height=360 allowfullscreen=true>&lt;/iframe></description></item><item><title>このサイトについて</title><link>https://blog.opuappnavi.com/post/site-introduction/</link><pubDate>Tue, 28 Apr 2020 00:00:59 +0900</pubDate><guid>https://blog.opuappnavi.com/post/site-introduction/</guid><description>&lt;h1 id="サイト制作の経緯">サイト制作の経緯&lt;/h1>
&lt;p>4月末に、コンピュータハウスランダムさんからオンライン友好祭が提案されました。
&lt;div class="card-simple">
&lt;div class="article-metadata">
&lt;div>
&lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/juris710/">Juris710&lt;/a>&lt;/span>, &lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/nobu/">Nobu&lt;/a>&lt;/span>, &lt;span >
&lt;a href="https://blog.opuappnavi.com/authors/yamaguchi/">ヤマグチ&lt;/a>&lt;/span>
&lt;/div>
&lt;span class="article-date">
2020/04/28 投稿
( 2021/03/16 最終更新 )
&lt;/span>
&lt;/div>
&lt;div class="section-subheading article-title mb-1 mt-3">
&lt;a href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/">府大バーチャル学祭&lt;/a>
&lt;/div>
&lt;a href="https://blog.opuappnavi.com/project/opu-virtual-festival-2020/" class="summary-link">
&lt;div class="article-style">
&lt;p>OPU Virtual Festival&lt;/p>
&lt;/div>
&lt;/a>
&lt;/div>
オンライン友好祭において、ゲーム展示以外にできることはないかと考え、部員がブログを書くのはどうだろうかと考えました。既に存在していた&lt;a href="https://opuappnavi.com/#/" target="_blank" rel="noopener">アプリNaviのウェブサイト&lt;/a>には
ブログ投稿機能がなかったことに加え、今まで触ったことがなかったWeb開発をしてみたかったこともありこのサイトを作成しました。&lt;br>
サイトの作成にあたり、アプリNaviと同じく大阪府立大学の部活である、コンピュータハウスランダムさんの&lt;a href="https://ch-random.net/" target="_blank" rel="noopener">ウェブサイト&lt;/a>を参考にしました。&lt;/p>
&lt;h1 id="hugo">Hugo&lt;/h1>
&lt;p>このサイトは、静的サイトジェネレーターであるHugoを用いて作成しました。htmlやcssについてある程度知っている程度でWeb関連に明るくない私でも、Hugoを使うことでとても簡単にWebサイトを作成できました。&lt;/p></description></item></channel></rss>