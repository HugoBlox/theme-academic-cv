@inproceedings{Dias,
abstract = {As with every software, Internet-of-Things (IoT) systems have their own life-cycle, from conception to construction, deployment, and operation. However, the testing requirements from these systems are slightly different due to their inherent coupling with hardware and human factors. Hence, the procedure of delivering new soft- ware versions in a continuous integration/delivery fashion must be adopted. Based on existent solutions (and inspired in other closely- related domains), we describe two common strategies that develop- ers can use for testing IoT systems, (1) Testbed and (2) Simulation- based Testing, as well as one recurrent solution for its deployment (3) Middleman Update},
address = {Irsee, Bavaria, Germany},
author = {Dias, Jo{\~{a}}o Pedro and Ferreira, Hugo Sereno and Sousa, Tiago Boldt},
booktitle = {24th European Conference on Pattern Languages of Programs},
file = {:Users/tiagoboldt/home/var/papers/a16-dias.pdf:pdf},
isbn = {9781450362061},
keywords = {2019,Deployment,Internet-of-Things,Orchestration,Testing,acm reference format,and tiago boldt sousa,deployment,hugo sereno ferreira,internet-of-things,jo{\~{a}}o pedro dias,orchestration,test-,testing},
title = {{Testing and Deployment Patterns for the Internet-of-Things}},
year = {2019}
}
@inproceedings{Ferreirab,
abstract = {Every year, thousands ofnew students begin their Masters in STEM-related topics. Despite being regarded as a common occurrence by the faculty, it represents the culmination of years of studying and preparation for their professional life. Notwithstanding, these stu- dents face well-known recurrent problems: how to choose a topic, how to choose an advisor, how to start researching, and how to deal with all the unknowns associated with academic research. Although there are several books on how to write a thesis, most ofthem avoid prescriptive recommendations on topics beyond research per se or focus on doctoral students, for which the duration and motiva- tion are significantly different. In this paper, we draft a pattern language comprised of thirty patterns that we have observed from supervising over a hundred masters students within the last decade.},
address = {Irsee, Bavaria, Germany},
author = {Ferreira, Hugo Sereno and Restivo, Andr{\'{e}} and Sousa, Tiago Boldt},
booktitle = {24th European Conference on Pattern Languages of Programs},
doi = {10.1145/3361149.3361184},
file = {:Users/tiagoboldt/home/var/papers/a34-ferreira.pdf:pdf},
isbn = {9781450362061},
title = {{Towards a Pattern Language for the Masters Student}},
year = {2019}
}
@book{Sousa2013,
abstract = {Monitor, control and process data on top of distributed networks has been a trending topic in the past few years, with ubiquity being adjective to computing and, gradually, the Internet of Things becoming a reality in home and factory automation or Ambient Assisted Living (aal). Still, there is a general lack of knowledge and best practices on how to build systems that integrate devices and services from third-parties which connect dynamically with each other. Recurring problems such as security, clustering, message passing, deployment and other orchestration details also lack a standardized solution. The authors describe a platform that simplifies the bootstrap and maintenance of such complex systems, presenting its application in an aal scenario. Such platform could orchestrate most distributed systems, possibly setting a pattern for distributed ubiquitous computing. {\textcopyright} 2013 Springer-Verlag Berlin Heidelberg.},
address = {Alcudia, Mallorca, Spain},
author = {Sousa, Tiago Boldt and Martins, Angelo},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-642-40840-3-7},
file = {:Users/tiagoboldt/home/var/papers/bok3A978-3-642-40840-3.pdf:pdf},
isbn = {9783642408397},
issn = {03029743},
keywords = {Distributed Systems,Ubiquitous Computing,aal},
number = {September},
pages = {47--50},
title = {{Monitor, control and process-an adaptive platform for ubiquitous computing}},
volume = {8091 LNCS},
year = {2013}
}
@article{Sousa2013a,
abstract = {Proliferation of the Internet is enabling the use of sensors and actuators to capture data and control devices remotely in a multitude of domains. Still, there is a general lack of best practices while designing such large scale real-time systems. This paper describes a generic architecture used on the implementation of a framework for deploying such systems in the cloud, enabling run-time evolution of the system with new sensors, actuators or services possibly developed by third-parties being integrated dynamically. Such architecture orchestrates the flow of information in the ecosystem and scales transparently to external components when needed, requiring no change in them. Adoption in the Portuguese nation-wide AAL project AAL4ALL is then described. Copyright {\textcopyright} 2013 by the Association for Computing Machinery, Inc. (ACM).},
author = {Sousa, Tiago Boldt},
doi = {10.1145/2508075.2508464},
file = {:Users/tiagoboldt/home/var/papers/AS5895653918146571517574751609{\_}content{\_}1.pdf:pdf},
isbn = {9781450319959},
journal = {SPLASH 2013 - Proceedings of the 2013 Companion Publication for Conference on Systems, Programming, and Applications: Software for Humanity},
keywords = {Distributed systems,Interoperability,Software architectures,Software engineering},
pages = {161--165},
title = {{Sensors, actuators and services - A distributed approach}},
year = {2013}
}
@inproceedings{sousa18,
abstract = {Software businesses are continuously increasing their cloud presence in the cloud. While cloud computing is not a new research topic, designing software for the cloud still requires engineers to make an investment to become proficient working with it. This paper introduces a pattern language for cloud software development and briefly describes details pattern. Design patterns can help developers validate or design their cloud software. The language is composed by ten patterns novel patterns organizes in three categories: Orchestration and Supervision, Monitoring and Discovery and Communication. Finally, the paper demonstrates how to adopt the pattern language using a pattern application sequence.},
address = {Portland, Oregon, USA},
author = {Sousa, Tiago Boldt and Ferreira, Hugo Sereno and Correia, Filipe Figueiredo},
booktitle = {25th Conference on Pattern Languages of Programs},
file = {:Users/tiagoboldt/home/var/papers/sousa-plop18.pdf:pdf},
isbn = {9781941652091},
title = {{Overview of a Pattern Language for Engineering Software for the Cloud}},
year = {2018}
}
@phdthesis{Sousa,
abstract = {... process of an online storytelling application for older adults that integrates into an existing social network. ... We believe the Web is growing into a powerful development platform . ... elements, features and more features, required for us to build a truly cross - platform application in the ...},
author = {{Boldt Sousa}, Tiago},
booktitle = {tiagoboldt.net},
file = {:Users/tiagoboldt/home/var/papers/Sousa - Unknown - Storytelling for Older Adults in Online Social Networks with Novel Web Technologies.pdf:pdf},
title = {{Storytelling for Older Adults in Online Social Networks with Novel Web Technologies}},
url = {http://tiagoboldt.net/var/diss/main.pdf papers2://publication/uuid/64861CED-4D39-446B-B209-4408762CB6F3},
year = {2011}
}
@incollection{Ferreira,
abstract = {With an aging global population, Ambient Assisted Living (aal) attempts to improve life expectancy and quality of life through the remote monitoring of various health signals using personal and home-based sensors. Possible medical conditions can be early ascertained by observable patterns over the patients' health data. However, aggregating multiple raw signals and matching against medical protocols can be computational and bandwidth intensive. Moreover, adding new protocols requires non-trivial expertise to define necessary rules. This paper describes a lightweight, scalable, and composable mechanism that captures, processes and infers possible health problems from raw data obtained from multiple sensors. {\textcopyright} 2012 Springer-Verlag.},
address = {Osaka, Japan},
author = {Ferreira, Hugo Sereno and Sousa, Tiago Boldt and Martins, Angelo},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-642-32609-7_11},
file = {:Users/tiagoboldt/home/var/papers/ferreira-et-al-2012.pdf:pdf},
isbn = {9783642326080},
issn = {03029743},
keywords = {Healthcare Systems,Sensor Networks,aal},
pages = {78--84},
title = {{Scalable integration of multiple health sensor data for observing medical patterns}},
volume = {7467 LNCS},
year = {2012}
}
@incollection{Almeida2012,
abstract = {The quantity and complexity that end-users are increasingly demanding from their applications and devices makes it impractical for a software developer to "foresee" every possible combination and explore every valid alternative. One solution is to empower end-users with tools that allows them to explore their necessities in a collaborative framework, where novices and experts can co-exist and share. We believe that such a tool could not only reduce the number of "small", specific-tailored applications, but also foster discovery and experimentation. {\textcopyright} 2012 Springer-Verlag.},
address = {Osaka, Japan},
author = {Almeida, Tiago and Ferreira, H.S. Hugo Sereno and {Boldt Sousa}, Tiago},
booktitle = {9th Cooperative Design, Visualization, and Engineering},
doi = {10.1007/978-3-642-32609-7_22},
isbn = {9783642326080},
issn = {03029743},
keywords = {Component-based Programming,Cooperative Programming,End-user Programming},
pages = {163--166},
publisher = {Springer Berlin Heidelberg},
title = {{A Collaborative Expandable Framework for Software End-Users and Programmers}},
volume = {7467 LNCS},
year = {2012}
}
@article{Faria2013b,
abstract = {To cope with the needs raised by the demographic changes in our society, several Ambient-Assisted Living (AAL) technologies have emerged in recent years, but those 'first offers' are often monolithic, incompatible and thus expensive and potentially not sustainable. The AAL4ALL project aims at improving that situation through the development of an open ecosystem of interoperable AAL components (products and services), tied together by an integration infrastructure, comprising a message-queue based service bus and gateways bridging the communication with devices. To that end, the project encompasses the specification of interfaces and requirements for interoperable components, against which candidates can be tested and certified before entering the ecosystem. This paper proposes a testing and certification methodology for such an ecosystem. Besides fulfilling specified pre-requisites, candidate components must pass unit tests that check their conformance with interface specifications and integration tests that check their semantic interoperability with other components in specified orchestration scenarios.},
author = {Faria, Jo{\~{a}}o Pascoal and Lima, Bruno and Sousa, Tiago Boldt and Martins, Angelo},
doi = {10.4018/ijehmc.2014100106},
file = {:Users/tiagoboldt/home/var/papers/P-00A-8MG.pdf:pdf},
issn = {19473168},
journal = {International Journal of E-Health and Medical Communications},
keywords = {Ambient-Assisted Living,Certification,Ecosystem,Interoperability,Testing},
number = {4},
pages = {90--107},
title = {{A testing and certification methodology for an open Ambient-Assisted Living ecosystem}},
volume = {5},
year = {2014}
}
@inproceedings{BoldtSousa2012,
abstract = {Dataflow Programming (DFP) has been a research topic of Software Engineering since the '70s. The paradigm models computer pro-grams as a direct graph, promoting the application of dataflow diagram principles to computation, opposing the more linear and classical Von Neumann model. DFP is the core to most visual programming languages, which claim to be able to provide end-user programming: with it's visual interface, it allows non-technical users to extend or create applications without programming knowledges. Also, DFP is capable of achieving parallelization of computation without introducing development com-plexity, resulting in an increased performance of applications built with it when using multi-core computers. This survey describes how visual programming languages built on top of DFP can be used for end-user programming and how easy it is to achieve concurrency by applying the paradigm, without any development overhead. DFP's open problems are discussed and some guidelines for adopting the paradigm are provided.},
address = {Lisbon, Portugal},
author = {Sousa, Tiago Boldt},
booktitle = {7th Doctoral Symposium on Informatics Engineering},
file = {:Users/tiagoboldt/home/var/papers/paper{\_}17.pdf:pdf},
isbn = {9789727521418},
keywords = {dataflow programming,end-user pro-,gramming,parallel computing,programming languages,visual programming},
pages = {13},
title = {{Dataflow Programming: Concept, Languages and Applications}},
url = {http://paginas.fe.up.pt/{~}prodei/dsie12/papers/paper{\_}17.pdf},
volume = {7},
year = {2012}
}
@inproceedings{Faria2013a,
abstract = {To cope with the needs raised by the demographic changes in our society, several Ambient-Assisted Living (AAL) technologies have emerged in recent years, but those 'first offers' are often monolithic, incompatible and thus expensive and potentially not sustainable. The AAL4ALL project aims at improving that situation through the development of an open ecosystem of interoperable products and services for AAL, tied together via an integration infrastructure. To that end, the project encompasses the specification of a set of reference models and requirements for interoperable products and services, against which candidate products and services can be tested and certified, and subsequently integrated as components of the ecosystem. This paper proposes a testing and certification methodology for such an ecosystem. {\textcopyright} 2013 IEEE.},
author = {Faria, Joao Pascoal and Lima, Bruno and Sousa, Tiago Boldt and Martins, Angelo},
booktitle = {2013 IEEE 15th International Conference on e-Health Networking, Applications and Services, Healthcom 2013},
doi = {10.1109/HealthCom.2013.6720744},
file = {:Users/tiagoboldt/home/var/papers/06720744.pdf:pdf},
isbn = {9781467358019},
issn = {1947-315X},
keywords = {ambient-assisted living,certification,testing},
number = {Healthcom},
pages = {585--589},
title = {{A testing and certification methodology for an Ambient-Assisted Living ecosystem}},
volume = {5},
year = {2013}
}
@misc{Castro2014,
address = {Seattle, WA, USA},
author = {Castro, Omar and Ferreira, Hugo Sereno and Sousa, Tiago Boldt},
booktitle = {Cooperative Design, Visualization, and Engineering},
doi = {10.1007/978-3-319-10831-5_30},
title = {{Collaborative Web Platform for UNIX-Based Big Data Processing}},
year = {2014}
}
@inproceedings{Sousa2018a,
abstract = {Cloud software continues to expand globally, highly motivated by the how widespread the Internet is and the possibilities it unlocks with Cloud Computing. Still, cloud development has some intrinsic properties to it, making it complex to unexperienced developers. This research is capturing those intricacies in the form of a pattern language, gathering over 12 patterns for engineering software for the cloud. This paper elaborates on that research by contributing with two new patterns: External Monitoring, which continuously monitors the system as a black box, validating its status and Fault injection, which continuously verifies system reliability by injecting failures into the cloud environment and confirming that the system recovers from it. The described patterns are useful for anyone designing software for the cloud, either to bootstrap or validate their design decisions and ultimately enable them to create better software. Categories},
address = {Irsee, Bavaria, Germany.},
author = {{Boldt Sousa}, Tiago and {Sereno Ferreira}, Hugo and Correia, Filipe Figueiredo and Aguiar, Ademar},
booktitle = {23rd European Conference on Pattern Languages of Programs},
file = {:Users/tiagoboldt/home/var/papers/europlop17-engineering-software.pdf:pdf},
title = {{Engineering Software for the Cloud: External Monitoring and Fault Injection}},
year = {2018}
}
@inproceedings{Sousa2018,
abstract = {Cloud software continues to expand globally, highly motivated by the how widespread the Internet is and the possibilities it unlocks with Cloud Computing. Still, cloud development has some intrinsic properties to it, making it complex to unexperienced developers. This research is capturing those intricacies in the form of a pattern language which gathers over 12 patterns for engineering software for the cloud. This paper elaborates on that research by contributing with two new patterns: Automated Recovery which checks if a container is working properly, automatically recovering it in case of failure and Scheduler, which periodically executes actions within the infrastructure. The described patterns are useful for anyone designing software for the cloud, either to bootstrap or validate their design decisions and ultimately enable them to create better software},
address = {Irsee, Bavaria, Germany.},
author = {{Boldt Sousa}, Tiago and {Sereno Ferreira}, Hugo and Correia, Filipe Figueiredo and Aguiar, Ademar},
booktitle = {23rd European Conference on Pattern Languages of Programs},
file = {:Users/tiagoboldt/home/var/papers/europlop17-engineering-software (1).pdf:pdf},
title = {{Engineering Software for the Cloud: Automated Recovery and Scheduler}},
year = {2018}
}
@inproceedings{Sousa2017,
abstract = {Software business continues to expand globally, highly motivated by the reachability of the Internet and possibilities of Cloud Computing. While widely adopted, development for the cloud has some intrinsic properties to it, making it complex to any newcomer. This research is capturing those intricacies using a pattern catalog, with this paper contributing with three of those patterns: Messaging System, a message bus for abstracting service placement in a cluster and orchestrating messages between multiple services; Preemptive Logging, a design principle where services and servers continuously output relevant information to log files, making them available for later debugging failures; and Log Aggregation, a technique to aggregate logs from multiple services and servers in a centralized location, which indexes and provides them in a queryable, user friendly format. These patterns are useful for anyone designing software for the cloud, either to guide or validate their design decisions.},
address = {Irsee, Bavaria, Germany},
author = {{Boldt Sousa}, Tiago and Ferreira, Hugo Sereno and Correia, Filipe Figueiredo and Aguiar, Ademar},
booktitle = {22nd European Conference on Pattern Languages of Programs},
doi = {10.1145/3147704.3147720},
file = {:Users/tiagoboldt/home/var/papers/europlop 17 final.pdf:pdf},
isbn = {978-1-4503-4848-5},
keywords = {Cloud Computing,Design Patterns,Software Engineering},
title = {{Engineering Software for the Cloud: Messaging Systems and Logging}},
url = {http://doi.acm.org/10.1145/3147704.3147720},
year = {2017}
}
@inproceedings{Sousa2016b,
abstract = {Software businesses are quickly moving towards the cloud. While cloud computing is not a new research subject, engineering software for the cloud is still a challenge, demanding broad knowledge over a multitude of processes and tools that most software development teams lack. This paper identifies and briefly describes the practices required to efficiently engineer software for the cloud. The authors use the concept of patterns to capture and share those practices and describe their possible usage in an exemplar sequence. Patterns are aggregated into categories, namely: DEVELOPMENT, DEPLOYMENT, EXECUTION, DISCOVERY AND COMMUNICATION, MONITORING and SUPERVISION. An example sequence of application for these patterns is described. The paper is targeted at newcomers, practitioners and expert developers of software for the cloud, guiding them through architectural decisions, at solving specific issues or just validating their decisions.},
address = {Buenos Aires, Argentina},
author = {{Boldt Sousa}, Tiago and Aguiar, Ademar and Correia, Filipe Figueiredo and {Sereno Ferreira}, Hugo},
booktitle = {11th Latin American Conference on Pattern Languages of Programs Prog.},
file = {:Users/tiagoboldt/home/var/papers/sousa(3).pdf:pdf},
isbn = {9781941652053},
number = {11},
pages = {8},
title = {{Engineering Software for the Cloud - Patterns and Sequences}},
year = {2016}
}
@inproceedings{Sousa2015,
abstract = {Software businesses are redirecting their expansion towards service-oriented businesses models, highly supported by cloud computing. While cloud computing is not a new research subject, there's a clear lack of documented best practices on how to orchestrate cloud environments, either public, private or hybrid. This paper is targeted at DevOps practitioners and explores solutions for cloud orchestration, describing them as three patterns: a) SOFTWARE CONTAINERIZATION, providing resource sharing with minimal virtualization overhead, b) LOCAL REVERSE PROXY, allowing applications to access any service in a cluster abstracting its placement and c) ORCHESTRATION BY RESOURCE OFFERING, ensuring applications get orchestrated in a machine with the required resources to run it. The authors believe that these three DevOps patterns will help researchers and newcomers to cloud orchestration to identify and adopt existing best practices earlier, hence, simplifying software life cycle management.},
address = {Pittsburgh, Pennsylvania, USA.},
author = {{Boldt Sousa}, Tiago and Correia, Filipe Figueiredo and {Sereno Ferreira}, Hugo},
booktitle = {22nd Conference on Pattern Languages of Programs},
file = {:Users/tiagoboldt/home/var/papers/sousa.pdf:pdf},
isbn = {9781941652039},
title = {{Patterns for Software Orchestration on the Cloud}},
year = {2015}
}
@incollection{BoldtSousa2011a,
author = {{Boldt Sousa}, Tiago and Tenreiro, Pedro and Silva, Paula Alexandra and Rodrigues, Eduarda Mendes},
booktitle = {Human-Computer Interaction–INTERACT 2011},
pages = {364--365},
publisher = {Springer Berlin Heidelberg},
title = {{Storytelling meets the social web: an HTML5 cross-platform application for older adults}},
year = {2011}
}
@incollection{BoldtSousa2011,
author = {{Boldt Sousa}, Tiago and Tenreiro, Pedro and Silva, Paula Alexandra and Nunes, Francisco and Rodrigues, Eduarda Mendes},
booktitle = {Entertainment Computing–ICEC 2011},
pages = {375--378},
publisher = {Springer Berlin Heidelberg},
title = {{Cross-Platform social web application for older adults with HTML 5}},
year = {2011}
}
@inproceedings{Prescher2012a,
abstract = {This paper describes the development, deployment and trial results from 9 volunteers using the eCAALYX system. The eCAALYX system is an ambient assisted living telemonitoring system aimed at older adults suffering with co-morbidity. Described is a raw account of the challenges that exist and results in bringing a Telemedicine system from laboratory to real-world implementation and results for usability, functionality and reliability. {\textcopyright} 2012 IEEE.},
address = {SanDiego, CA, USA},
author = {Prescher, Sandra and Bourke, Alan K. and Koehler, Friedrich and Martins, Angelo and {Sereno Ferreira}, Hugo and {Boldt Sousa}, Tiago and Castro, Rui Nuno and Santos, Antonio and Torrent, Marc and Gomis, Sergi and Hospedales, Margarita and Nelson, John},
booktitle = {Proceedings of the Annual International Conference of the IEEE Engineering in Medicine and Biology Society, EMBS},
doi = {10.1109/EMBC.2012.6347145},
file = {:Users/tiagoboldt/home/var/papers/Prescher et al. - 2012 - Ubiquitous ambient assisted living solution to promote safer independent living in older adults suffering from.pdf:pdf},
isbn = {9781424441198},
issn = {1557170X},
pages = {5118--5121},
pmid = {23367080},
publisher = {IEEE},
title = {{Ubiquitous ambient assisted living solution to promote safer independent living in older adults suffering from co-morbidity}},
year = {2012}
}
@article{Prescher2012,
abstract = {This paper describes the development, deployment and trial results from 9 volunteers using the eCAALYX system. The eCAALYX system is an ambient assisted living telemonitoring system aimed at older adults suffering with co-morbidity. Described is a raw account of the challenges that exist and results in bringing a Telemedicine system from laboratory to real-world implementation and results for usability, functionality and reliability. {\textcopyright} 2012 IEEE.},
author = {Prescher, Sandra and Bourke, Alan K. and Koehler, Friedrich and Martins, Angelo and {Sereno Ferreira}, Hugo and {Boldt Sousa}, Tiago and Castro, Rui Nuno and Santos, Antonio and Torrent, Marc and Gomis, Sergi and Hospedales, Margarita and Nelson, John},
doi = {10.1109/EMBC.2012.6347145},
file = {:Users/tiagoboldt/home/var/papers/Prescher et al. - 2012 - Ubiquitous ambient assisted living solution to promote safer independent living in older adults suffering from.pdf:pdf},
isbn = {9781424441198},
issn = {1557170X},
journal = {Proceedings of the Annual International Conference of the IEEE Engineering in Medicine and Biology Society, EMBS},
pages = {5118--5121},
pmid = {23367080},
title = {{Ubiquitous ambient assisted living solution to promote safer independent living in older adults suffering from co-morbidity}},
volume = {2012},
year = {2012}
}
@inproceedings{BoldtSousa2012b,
address = {Lisbon, Portugal},
author = {{Boldt Sousa}, Tiago and Ferreira, Hugo Sereno},
booktitle = {8th Quality of Information and Communications Technology (QUATIC)},
file = {:Users/tiagoboldt/home/var/papers/06511841.pdf:pdf},
pages = {348--352},
publisher = {IEEE},
title = {{Object-Functional Patterns: Re-thinking Development in a Post-Functional World}},
year = {2012}
}
