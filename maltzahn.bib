%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Carlos Maltzahn at 2020-03-09 22:19:36 -0700 


%% Saved with string encoding Unicode (UTF-8) 



@inproceedings{chu:irishep20poster,
	Address = {Princeton, NJ},
	Author = {Aaron Chu and Ivo Jimenez and Jeff LeFevre and Carlos Maltzahn},
	Booktitle = {Poster at IRIS-HEP Poster Session},
	Date-Added = {2020-03-09 22:19:08 -0700},
	Date-Modified = {2020-03-09 22:19:08 -0700},
	Keywords = {poster, programmable, storage, hep},
	Month = {February 27},
	Title = {SkyhookDM: Programmable Storage for Datasets},
	Year = {2020},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBMLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQy9jaHUtaXJpc2hlcDIwcG9zdGVyLnBkZk8RAXwAAAAAAXwAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xdjaHUtaXJpc2hlcDIwcG9zdGVyLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABQwAAAgA/LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpDOmNodS1pcmlzaGVwMjBwb3N0ZXIucGRmAAAOADAAFwBjAGgAdQAtAGkAcgBpAHMAaABlAHAAMgAwAHAAbwBzAHQAZQByAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAqL015IERyaXZlL1BhcGVycy9DL2NodS1pcmlzaGVwMjBwb3N0ZXIucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHMAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB8w==}}

@inproceedings{chakraborty:ecpam20,
	Author = {Jayjeet Chakraborty and Ivo Jimenez and Carlos Maltzahn and Arshul Mansoori and Quincy Wofford},
	Booktitle = {Poster at 2020 Exaxcale Computing Project Annual Meeting, Houston, TX, February 3-7, 2020},
	Date-Added = {2020-02-05 11:34:01 -0800},
	Date-Modified = {2020-02-05 11:34:01 -0800},
	Keywords = {shortpapers, reproducibility, containers, workflow, automation},
	Title = {Popper 2.0: A Container-native Workflow Execution Engine For Testing Complex Applications and Validating Scientific Claims},
	Year = {2020},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBMLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQy9jaGFrcmFib3J0eS1lY3BhbTIwLnBkZk8RAXwAAAAAAXwAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xdjaGFrcmFib3J0eS1lY3BhbTIwLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABQwAAAgA/LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpDOmNoYWtyYWJvcnR5LWVjcGFtMjAucGRmAAAOADAAFwBjAGgAYQBrAHIAYQBiAG8AcgB0AHkALQBlAGMAcABhAG0AMgAwAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAqL015IERyaXZlL1BhcGVycy9DL2NoYWtyYWJvcnR5LWVjcGFtMjAucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHMAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB8w==},
	Bdsk-Url-1 = {https://ecpannualmeeting.com/}}

@inproceedings{chu:chep19,
	Abstract = {Access libraries such as ROOT and HDF5 allow users to interact with datasets using high level abstractions, like coordinate systems and associated slicing operations. Unfortunately, the implementations of access libraries are based on outdated assumptions about storage systems interfaces and are generally unable to fully benefit from modern fast storage devices. For example, access libraries often implement buffering and data layout that assume that large, single-threaded sequential access patterns are causing less overall latency than small parallel random access: while this is true for spinning media, it is not true for flash media. The situation is getting worse with rapidly evolving storage devices such as non-volatile memory and ever larger datasets. Our Skyhook Dataset Mapping project explores distributed dataset mapping infrastructures that can integrate and scale out existing access libraries using Ceph's extensible object model, avoiding reimplementation or even modifications of these access libraries as much as possible. These programmable storage extensions coupled with our distributed dataset mapping techniques enable: 1) access library operations to be offloaded to storage system servers, 2) the independent evolution of access libraries and storage systems and 3) fully leveraging of the existing load balancing, elasticity, and failure management of distributed storage systems like Ceph. They also create more opportunities to conduct storage server-local optimizations specific to storage servers. For example, storage servers might include local key/value stores combined with chunk stores that require different optimizations than a local file system. As storage servers evolve to support new storage devices like non-volatile memory, these server-local optimizations can be implemented while minimizing disruptions to applications. We will report progress on the means by which distributed dataset mapping can be abstracted over particular access libraries, including access libraries for ROOT data, and how we address some of the challenges revolving around data partitioning and composability of access operations.},
	Address = {Adelaide, Australia},
	Author = {Aaron Chu and Jeff LeFevre and Carlos Maltzahn and Aldrin Montana and Peter Alvaro and Dana Robinson and Quincey Koziol},
	Booktitle = {24th International Conference on Computing in High Energy \& Nuclear Physics},
	Date-Added = {2020-01-20 16:19:51 -0800},
	Date-Modified = {2020-01-20 16:46:26 -0800},
	Keywords = {papers, programmable, declarative, objectstorage},
	Month = {November 4-8},
	Title = {SkyhookDM: Mapping Scientific Datasets to Programmable Storage},
	Year = {2019},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBDLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQy9jaHUtY2hlcDE5LnBkZk8RAVgAAAAAAVgAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w5jaHUtY2hlcDE5LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABQwAAAgA2LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpDOmNodS1jaGVwMTkucGRmAA4AHgAOAGMAaAB1AC0AYwBoAGUAcAAxADkALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACEvTXkgRHJpdmUvUGFwZXJzL0MvY2h1LWNoZXAxOS5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAGoAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAABxg==},
	Bdsk-Url-1 = {https://indico.cern.ch/event/773049/contributions/3474413/}}

@inproceedings{weil:lsf07,
	Address = {San Jose, CA},
	Author = {Sage Weil and Scott A. Brandt and Carlos Maltzahn},
	Booktitle = {Linux Storage and Filesystem Workshop (LSF07), held in conjunction with the Conference on File and Storage Technology (FAST 07)},
	Date-Added = {2019-12-29 16:46:38 -0800},
	Date-Modified = {2019-12-29 16:46:38 -0800},
	Keywords = {shortpapers, storage, scalable},
	Month = {February 12--13},
	Title = {Scaling Linux Storage to Petabytes},
	Year = {2007},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBDLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93ZWlsLWxzZjA3LnBkZk8RAVgAAAAAAVgAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w53ZWlsLWxzZjA3LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABVwAAAgA2LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpXOndlaWwtbHNmMDcucGRmAA4AHgAOAHcAZQBpAGwALQBsAHMAZgAwADcALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACEvTXkgRHJpdmUvUGFwZXJzL1cvd2VpbC1sc2YwNy5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAGoAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAABxg==}}

@inproceedings{estolano:fast08wip,
	Address = {San Jose, CA},
	Author = {Esteban Molina-Estolano and Carlos Maltzahn and Sage Weil and Scott Brandt},
	Booktitle = {Work-in-Progress Session of the USENIX Conference on File and Storage Technology (FAST 2008)},
	Date-Added = {2019-12-29 16:38:04 -0800},
	Date-Modified = {2019-12-29 16:39:22 -0800},
	Keywords = {shortpapers, loadbalancing, objectstorage, distributed, storage},
	Month = {February 26-29},
	Title = {Dynamic Load Balancing in Ceph},
	Year = {2008},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBNLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvRS1GL2VzdG9sYW5vLWZhc3QwOHdpcC5wZGZPEQF+AAAAAAF+AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8WZXN0b2xhbm8tZmFzdDA4d2lwLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA0UtRgAAAgBALzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpFLUY6ZXN0b2xhbm8tZmFzdDA4d2lwLnBkZgAOAC4AFgBlAHMAdABvAGwAYQBuAG8ALQBmAGEAcwB0ADAAOAB3AGkAcAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKy9NeSBEcml2ZS9QYXBlcnMvRS1GL2VzdG9sYW5vLWZhc3QwOHdpcC5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHQAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB9g==}}

@inproceedings{pye:fast08wip,
	Address = {San Jose, CA},
	Author = {Ian Pye and Scott Brandt and Carlos Maltzahn},
	Booktitle = {Work-in-Progress Session of the USENIX Conference on File and Storage Technology (FAST 2008)},
	Date-Added = {2019-12-29 16:29:20 -0800},
	Date-Modified = {2019-12-29 16:30:47 -0800},
	Keywords = {shortpapers, p2p, filesystems, global},
	Month = {February 26-29},
	Title = {Ringer: A Global-Scale Lightweight P2P File Service},
	Year = {2008},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUC9weWUtZmFzdDA4d2lwLnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFweWUtZmFzdDA4d2lwLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABUAAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpQOnB5ZS1mYXN0MDh3aXAucGRmAAAOACQAEQBwAHkAZQAtAGYAYQBzAHQAMAA4AHcAaQBwAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9QL3B5ZS1mYXN0MDh3aXAucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@inproceedings{bigelow:fast08wip,
	Address = {San Jose, CA},
	Author = {David Bigelow and Scott A. Brandt and Carlos Maltzahn and Sage Weil},
	Booktitle = {Work-in-Progress Session of the USENIX Conference on File and Storage Technology (FAST 2008)},
	Date-Added = {2019-12-29 16:25:47 -0800},
	Date-Modified = {2019-12-29 16:31:55 -0800},
	Keywords = {shortpapers, raid, objectstorage},
	Month = {February 26-29},
	Title = {Adapting RAID Methods for Use in Object Storage Systems},
	Year = {2008},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9iaWdlbG93LWZhc3QwOHdpcC5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8VYmlnZWxvdy1mYXN0MDh3aXAucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUIAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6QjpiaWdlbG93LWZhc3QwOHdpcC5wZGYAAA4ALAAVAGIAaQBnAGUAbABvAHcALQBmAGEAcwB0ADAAOAB3AGkAcAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvQi9iaWdlbG93LWZhc3QwOHdpcC5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp}}

@inproceedings{maltzahn:fast08wip,
	Address = {San Jose, CA},
	Author = {Carlos Maltzahn},
	Booktitle = {Work-in-Progress Session of the USENIX Conference on File and Storage Technology (FAST 2008)},
	Date-Added = {2019-12-29 16:18:24 -0800},
	Date-Modified = {2020-01-04 20:29:07 -0700},
	Keywords = {shortpapers, filesystems, metadata, pim},
	Month = {February 26-29},
	Title = {How Private are Home Directories?},
	Year = {2008},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1mYXN0MDh3aXAucGRmTxEBeAAAAAABeAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////Fm1hbHR6YWhuLWZhc3QwOHdpcC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFNAAACAD4vOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOk06bWFsdHphaG4tZmFzdDA4d2lwLnBkZgAOAC4AFgBtAGEAbAB0AHoAYQBoAG4ALQBmAGEAcwB0ADAAOAB3AGkAcAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1mYXN0MDh3aXAucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAByAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAe4=}}

@inproceedings{bhagwan:scc09,
	Address = {Bangalore, India},
	Author = {Varun Bhagwan and Carlos Maltzahn},
	Booktitle = {Work-In-Progress Session at 2009 IEEE International Conference on Services Computing (SCC 2009)},
	Date-Added = {2019-12-29 16:11:09 -0800},
	Date-Modified = {2019-12-29 16:11:52 -0800},
	Keywords = {shortpapers, crowdsourcing, metadata, filesystems},
	Month = {September 21--25},
	Title = {JabberWocky: Crowd-Sourcing Metadata for Files},
	Year = {2009},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi92YmhhZ3dhbi1zY2MwOS5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8SdmJoYWd3YW4tc2NjMDkucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUIAAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Qjp2YmhhZ3dhbi1zY2MwOS5wZGYADgAmABIAdgBiAGgAYQBnAHcAYQBuAC0AcwBjAGMAMAA5AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9CL3ZiaGFnd2FuLXNjYzA5LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@inproceedings{wacha:fast10poster,
	Address = {San Jose, CA},
	Author = {Rosie Wacha and Scott A. Brandt and Carlos Maltzahn},
	Booktitle = {In Poster Session at the Conference on File and Storage Technology (FAST 2010)},
	Date-Added = {2019-12-27 10:40:59 -0800},
	Date-Modified = {2019-12-27 10:43:18 -0800},
	Keywords = {shortpapers, flash, RAID},
	Month = {February 24-27},
	Title = {RAID4S: Adding SSDs to RAID Arrays},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YWNoYS1mYXN0MTBwb3N0ZXIucGRmTxEBeAAAAAABeAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////FndhY2hhLWZhc3QxMHBvc3Rlci5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFXAAACAD4vOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlc6d2FjaGEtZmFzdDEwcG9zdGVyLnBkZgAOAC4AFgB3AGEAYwBoAGEALQBmAGEAcwB0ADEAMABwAG8AcwB0AGUAcgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKS9NeSBEcml2ZS9QYXBlcnMvVy93YWNoYS1mYXN0MTBwb3N0ZXIucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAByAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAe4=},
	Bdsk-Url-1 = {http://users.soe.ucsc.edu/~carlosm/Papers/S11.pdf}}

@inproceedings{ames:fast10poster,
	Address = {San Jose, CA},
	Author = {Sasha Ames and Maya B. Gokhale and Carlos Maltzahn},
	Booktitle = {Poster Session at the Conference on File and Storage Technology (FAST 2010)},
	Date-Added = {2019-12-26 20:23:07 -0800},
	Date-Modified = {2019-12-29 16:32:23 -0800},
	Keywords = {shortpapers, filesystems, linking, metadata},
	Month = {February 24-27},
	Title = {Design and Implementation of a Metadata-Rich File System},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQS9hbWVzLWZhc3QxMHBvc3Rlci5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8VYW1lcy1mYXN0MTBwb3N0ZXIucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUEAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6QTphbWVzLWZhc3QxMHBvc3Rlci5wZGYAAA4ALAAVAGEAbQBlAHMALQBmAGEAcwB0ADEAMABwAG8AcwB0AGUAcgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvQS9hbWVzLWZhc3QxMHBvc3Rlci5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp}}

@inproceedings{polte:pdsw10poster,
	Address = {New Orleans, LA},
	Author = {Milo Polte, Esteban Molina-Estolan, John Bent and Garth Gibson and Carlos Maltzahn and Maya B. Gokhale and Scott Brandt},
	Booktitle = {Poster Session at 5th Petascale Data Storage Workshop (PDSW 2010), co-located with Supercomputing 2010},
	Date-Added = {2019-12-26 20:08:27 -0800},
	Date-Modified = {2019-12-29 16:32:38 -0800},
	Keywords = {shortpapers, parallel, filesystems, cloudcomputing},
	Month = {November 15},
	Title = {PLFS and HDFS: Enabling Parallel Filesystem Semantics In The Cloud},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUC9wb2x0ZS1wZHN3MTBwb3N0ZXIucGRmTxEBeAAAAAABeAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////FnBvbHRlLXBkc3cxMHBvc3Rlci5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFQAAACAD4vOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlA6cG9sdGUtcGRzdzEwcG9zdGVyLnBkZgAOAC4AFgBwAG8AbAB0AGUALQBwAGQAcwB3ADEAMABwAG8AcwB0AGUAcgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKS9NeSBEcml2ZS9QYXBlcnMvUC9wb2x0ZS1wZHN3MTBwb3N0ZXIucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAByAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAe4=},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBSLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUC9wb2x0ZS1wZHN3MTBwb3N0ZXItcG9zdGVyLnBkZk8RAZQAAAAAAZQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////x1wb2x0ZS1wZHN3MTBwb3N0ZXItcG9zdGVyLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABUAAAAgBFLzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpQOnBvbHRlLXBkc3cxMHBvc3Rlci1wb3N0ZXIucGRmAAAOADwAHQBwAG8AbAB0AGUALQBwAGQAcwB3ADEAMABwAG8AcwB0AGUAcgAtAHAAbwBzAHQAZQByAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAwL015IERyaXZlL1BhcGVycy9QL3BvbHRlLXBkc3cxMHBvc3Rlci1wb3N0ZXIucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHkAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAACEQ==},
	Bdsk-File-3 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBPLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUC9wb2x0ZS1wZHN3MTBwb3N0ZXItd2lwLnBkZk8RAYgAAAAAAYgAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xpwb2x0ZS1wZHN3MTBwb3N0ZXItd2lwLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABUAAAAgBCLzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpQOnBvbHRlLXBkc3cxMHBvc3Rlci13aXAucGRmAA4ANgAaAHAAbwBsAHQAZQAtAHAAZABzAHcAMQAwAHAAbwBzAHQAZQByAC0AdwBpAHAALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASAC0vTXkgRHJpdmUvUGFwZXJzL1AvcG9sdGUtcGRzdzEwcG9zdGVyLXdpcC5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHYAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAACAg==}}

@inproceedings{ames:pdsw10poster,
	Address = {New Orleans, LA},
	Author = {Sasha Ames and Maya B. Gokhale and Carlos Maltzahn},
	Booktitle = {Session at 5th Petascale Data Storage Workshop (PDSW 2010), co-located with Supercomputing 2010},
	Date-Added = {2019-12-26 20:05:01 -0800},
	Date-Modified = {2019-12-29 16:32:49 -0800},
	Keywords = {shortpapers, linking, filesystems, metadata},
	Month = {November 15},
	Title = {QMDS: A File System Metadata Service Supporting a Graph Data Model-Based Query Language},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQS9hbWVzLXBkc3cxMHBvc3Rlci5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8VYW1lcy1wZHN3MTBwb3N0ZXIucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUEAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6QTphbWVzLXBkc3cxMHBvc3Rlci5wZGYAAA4ALAAVAGEAbQBlAHMALQBwAGQAcwB3ADEAMABwAG8AcwB0AGUAcgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvQS9hbWVzLXBkc3cxMHBvc3Rlci5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp}}

@inproceedings{skourtis:fast13wip,
	Address = {San Jose, CA},
	Author = {Dimitris Skourtis and Scott A. Brandt and Carlos Maltzahn},
	Booktitle = {Work-in-Progress and Poster Session at the Conference on File and Storage Technology (FAST 2013)},
	Date-Added = {2019-12-26 19:57:02 -0800},
	Date-Modified = {2019-12-29 16:34:24 -0800},
	Keywords = {shortpapers, performance, predictable, flash, redundancy},
	Month = {February 12-15},
	Title = {High Performance \& Low Latency in Solid-State Drives Through Redundancy},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy1mYXN0MTN3aXAucGRmTxEBeAAAAAABeAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////FnNrb3VydGlzLWZhc3QxM3dpcC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFTAAACAD4vOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlM6c2tvdXJ0aXMtZmFzdDEzd2lwLnBkZgAOAC4AFgBzAGsAbwB1AHIAdABpAHMALQBmAGEAcwB0ADEAMwB3AGkAcAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKS9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy1mYXN0MTN3aXAucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAByAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAe4=},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBSLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy1mYXN0MTN3aXAtcG9zdGVyLnBkZk8RAZQAAAAAAZQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////x1za291cnRpcy1mYXN0MTN3aXAtcG9zdGVyLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABUwAAAgBFLzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpTOnNrb3VydGlzLWZhc3QxM3dpcC1wb3N0ZXIucGRmAAAOADwAHQBzAGsAbwB1AHIAdABpAHMALQBmAGEAcwB0ADEAMwB3AGkAcAAtAHAAbwBzAHQAZQByAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAwL015IERyaXZlL1BhcGVycy9TL3Nrb3VydGlzLWZhc3QxM3dpcC1wb3N0ZXIucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHkAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAACEQ==}}

@inproceedings{lofstead:cluster14poster,
	Address = {Madrid, Spain},
	Author = {Jay Lofstead and Ivo Jimenez and Carlos Maltzahn and Quincey Koziol and John Bent and Eric Barton},
	Booktitle = {in Poster Session at IEEE Cluster 2014},
	Date-Added = {2019-12-26 19:23:07 -0800},
	Date-Modified = {2019-12-29 16:34:56 -0800},
	Keywords = {shortpapers, storage, parallel, hpc, exascale},
	Month = {September 22-26},
	Title = {An Innovative Storage Stack Addressing Extreme Scale Platforms and Big Data Applications},
	Year = {2014}}

@inproceedings{sevilla:fast14wip,
	Address = {San Jose, CA},
	Author = {Michael Sevilla and Scott Brandt and Carlos Maltzahn and Ike Nassi and Sam Fineberg},
	Booktitle = {Work-in-Progress and Poster Session at the 12th USENIX Conference on File and Storage Technology (FAST 2014)},
	Date-Added = {2019-12-26 19:20:27 -0800},
	Date-Modified = {2019-12-29 16:35:02 -0800},
	Keywords = {shortpapers, filesystems, metadata, loadbalancing},
	Month = {February 17-20},
	Title = {Exploring Resource Migration using the CephFS Metadata cluster},
	Year = {2014}}

@inproceedings{kufeldt:fast18wip,
	Address = {Oakland, CA},
	Author = {Philip Kufeldt and Timothy Feldman and Christine Green and Grant Mackey and Carlos Maltzahn and Shingo Tanaka},
	Booktitle = {WiP and Poster Sessions at 16th USENIX Conference on File and Storage Technologies (FAST'18)},
	Date-Added = {2019-12-26 19:17:05 -0800},
	Date-Modified = {2019-12-29 16:35:11 -0800},
	Keywords = {shortpapers, eusocial, embedded, storage},
	Month = {Feb 12-15},
	Title = {Eusocial Storage Devices},
	Year = {2018}}

@inproceedings{jimenez:xldb18,
	Address = {Stanford, CA},
	Author = {Ivo Jimenez and Carlos Maltzahn},
	Booktitle = {Lightning Talk and Poster Session at the 11th Extremely Large Databases Conference (XLDB)},
	Date-Added = {2019-12-26 19:14:42 -0800},
	Date-Modified = {2019-12-29 16:35:19 -0800},
	Keywords = {shortpapers, reproducibility},
	Month = {April 30},
	Title = {Reproducible Computational and Data-Intensive Experimentation Pipelines with Popper},
	Year = {2018}}

@inproceedings{maltzahn:hotstorage18-breakout,
	Address = {Boston, MA},
	Author = {Carlos Maltzahn},
	Booktitle = {Breakouts Session abstract at 10th USENIX Workshop on Hot Topics in Storage and File Systems (HotStorage'18, co-located with USENIX ATC'18)},
	Date-Added = {2019-12-26 19:10:01 -0800},
	Date-Modified = {2020-01-19 16:20:17 -0800},
	Keywords = {shortpapers, storage, embedded, eusocial, programmable},
	Month = {July 9-10},
	Title = {Should Storage Devices Stay Dumb or Become Smart?},
	Year = {2018},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBXLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1ob3RzdG9yYWdlMTgtYnJlYWtvdXQucGRmTxEBqAAAAAABqAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////H21hbHR6YWhuLWhvdHN0b3JhZyNGRkZGRkZGRi5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFNAAACAEovOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOk06bWFsdHphaG4taG90c3RvcmFnZTE4LWJyZWFrb3V0LnBkZgAOAEYAIgBtAGEAbAB0AHoAYQBoAG4ALQBoAG8AdABzAHQAbwByAGEAZwBlADEAOAAtAGIAcgBlAGEAawBvAHUAdAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIANS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1ob3RzdG9yYWdlMTgtYnJlYWtvdXQucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB+AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAio=},
	Bdsk-Url-1 = {https://docs.google.com/presentation/d/1yvXWpxfNWZ4NIL9GLLWM_e3TAm-8Mu-EfAygo1SRRlg/edit?usp=sharing},
	Bdsk-Url-2 = {https://docs.google.com/document/d/1Vfuoy2H8Mg2PrweO5I2sP04gAZonhUIxE3_W9oMFhwI/edit?usp=sharing}}

@inproceedings{kufeldt:fast19poster,
	Address = {Boston, MA},
	Author = {Philip Kufeldt and Jianshen Liu and Carlos Maltzahn},
	Booktitle = {Poster Session at 17th USENIX Conference on File and Storage Technologies (FAST'19)},
	Date-Added = {2019-12-26 19:07:25 -0800},
	Date-Modified = {2019-12-29 16:35:40 -0800},
	Keywords = {shortpapers, reproducibility, embedded, storage, eusocial},
	Month = {Februrary 25-28},
	Title = {MBWU (MibeeWu): Quantifying benefits of offloading data management to storage devices},
	Year = {2019}}

@inproceedings{lefevre:vault20,
	Address = {Santa Clara, CA},
	Author = {Jeff LeFevre and Carlos Maltzahn},
	Booktitle = {2020 Linux Storage and Filesystems Conference (Vault'20, co-located with FAST'20 and NSDI'20)},
	Date-Added = {2019-12-26 19:04:52 -0800},
	Date-Modified = {2019-12-29 16:36:00 -0800},
	Keywords = {shortpapers, programmable, storage, physicaldesign},
	Month = {February 24-25},
	Title = {Scaling databases and file APIs with programmable Ceph object storage},
	Year = {2020}}

@article{ellis:jbcs94,
	Author = {Clarence E. Ellis and Carlos Maltzahn},
	Date-Added = {2019-12-26 18:50:02 -0800},
	Date-Modified = {2019-12-26 18:51:29 -0800},
	Journal = {Journal of the Brazilian Computer Society, Special Edition on CSCW},
	Keywords = {papers, cscw},
	Number = {1},
	Pages = {15--23},
	Title = {Collaboration with Spreadsheets},
	Volume = {1},
	Year = {1994},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvRS1GL2VsbGlzLWpiY3M5NC5wZGZPEQFmAAAAAAFmAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8QZWxsaXMtamJjczk0LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA0UtRgAAAgA6LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpFLUY6ZWxsaXMtamJjczk0LnBkZgAOACIAEABlAGwAbABpAHMALQBqAGIAYwBzADkANAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAJS9NeSBEcml2ZS9QYXBlcnMvRS1GL2VsbGlzLWpiY3M5NC5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG4AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB2A==}}

@article{jimenez:tinytocs16,
	Abstract = {Validating experimental results in the field of computer systems is a challenging task, mainly due to the many changes in software and hardware that computational environments go through. Determining if an experiment is reproducible entails two separate tasks: re-executing the experiment and validating the results. Existing reproducibility efforts have focused on the former, envisioning techniques and infrastructures that make it easier to re-execute an experiment. By focusing on the latter and analyzing the validation workflow that an experiment re-executioner goes through, we notice that validating results is done on the basis of experiment design and high-level goals, rather than exact quantitative metrics.
Based on this insight, we introduce a declarative format for describing the high-level components of an experiment, as well as a language for specifying generic, testable statements that serve as the basis for validation [1,2]. Our language allows to express and validate statements on top of metrics gathered at runtime. We demonstrate the feasibility of this approach by taking an experiment from an already published article and obtain the corresponding experiment specification. We show that, if we had this specification in the first place, validating the original findings would be an almost entirely automated task. If we contrast this with the current state of our practice, where it takes days or weeks (if successful) to reproduce results, we see how making experiment specifications available as part of a publication or as addendum to experimental results can significantly aid in the validation of computer systems research.
Acknowledgements: Work performed under auspices of US DOE by LLNL contract DE-AC52- 07NA27344 ABS-684863 and by SNL contract DE-AC04-94AL85000.},
	Author = {Ivo Jimenez and Carlos Maltzahn and Jay Lofstead and Adam Moody and Kathryn Mohror and Remzi Arpaci-Dusseau and Andrea Arpaci-Dusseau},
	Date-Added = {2019-12-26 18:43:34 -0800},
	Date-Modified = {2020-01-04 21:15:26 -0700},
	Journal = {Tiny Transactions on Computer Science (TinyToCS)},
	Keywords = {papers, reproducibility, evaluation},
	Title = {I Aver: Providing Declarative Experiment Specifications Facilitates the Evaluation of Computer Systems Research},
	Volume = {4},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBNLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotdGlueXRvY3MxNi5wZGZPEQF+AAAAAAF+AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8WamltZW5lei10aW55dG9jczE2LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA0ktSgAAAgBALzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpJLUo6amltZW5lei10aW55dG9jczE2LnBkZgAOAC4AFgBqAGkAbQBlAG4AZQB6AC0AdABpAG4AeQB0AG8AYwBzADEANgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKy9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotdGlueXRvY3MxNi5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHQAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB9g==}}

@inproceedings{maltzahn:vkika91,
	Abstract = {Die meisten CAD-Umgebungen betonen die Unterstatzung einzelner Arbeitspliitze und helfen nur sekundiir bei deren Kooperation. Wir schlagen einen umgekehrten Ansatz vor: Entwiirfe entstehen im Rahmen von interagierenden Sharing-Prozessen, die den gemeinsamen Zugang aller Beteiligten zu Konzepten, Aufgaben und Ergebnissen strukturieren. Dieser Ansatz und seine Konsequenzen werden am Beispiel des Software Engineering dargestellt. Aufder Basis einer Formalisierung dieser Prozesse steuert der ConceptTalk-Prototyp eine verteilte Softwareumgebung und speziel/e Kommunikationswerkzeuge aber das Wissensbanksystem ConceptBase. Erfahrungen mit ConceptTalk unterstatzen ein neues Paradigma, das ein Informationssystem als Medium for komplexe Kommunikation betrachtet.},
	Author = {Carlos Maltzahn and Thomas Rose},
	Booktitle = {Verteilte K{\"u}nstliche Intelligenz und kooperatives Arbeiten},
	Date-Added = {2019-12-26 18:32:03 -0800},
	Date-Modified = {2020-01-04 21:16:07 -0700},
	Editor = {W. Brauer and D. Hern{\'a}ndez},
	Keywords = {papers, cscw, softwareengineering},
	Pages = {195--206},
	Publisher = {Springer-Verlag Berlin Heidelberg},
	Title = {ConceptTalk: Kooperationsunterst{\"u}tzung in Softwareumgebungen},
	Volume = {291},
	Year = {1991},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi12a2lrYTkxLnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xRtYWx0emFobi12a2lrYTkxLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABTQAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpNOm1hbHR6YWhuLXZraWthOTEucGRmAA4AKgAUAG0AYQBsAHQAegBhAGgAbgAtAHYAawBpAGsAYQA5ADEALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL00vbWFsdHphaG4tdmtpa2E5MS5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@inproceedings{leung:msst07,
	Abstract = {Achieving performance, reliability, and scalability presents a unique set of challenges for large distributed storage. To identify problem areas, there must be a way for developers to have a comprehensive view of the entire storage system. That is, users must be able to understand both node specific behavior and complex relationships between nodes. We present a distributed file system profiling method that supports such analysis. Our approach is based on combining node-specific metrics into a single cohesive system image. This affords users two views of the storage system: a micro, per-node view, as well as, a macro, multi- node view, allowing both node-specific and complex inter- nodal problems to be debugged. We visualize the storage system by displaying nodes and intuitively animating their metrics and behavior allowing easy analysis of complex problems.},
	Address = {Santa Clara, CA},
	Author = {Andrew Leung and Eric Lalonde and Jacob Telleen and James Davis and Carlos Maltzahn},
	Booktitle = {Proceedings of the 24th IEEE Conference on Mass Storage Systems and Technologies (MSST 2007)},
	Date-Added = {2019-12-26 18:07:11 -0800},
	Date-Modified = {2020-01-04 21:16:58 -0700},
	Keywords = {papers, performance, debuggung, distributed, storage, systems},
	Month = {September},
	Title = {Using Comprehensive Analysis for Performance Debugging in Distributed Storage Systems},
	Year = {2007},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBFLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9sZXVuZy1tc3N0MDcucGRmTxEBYAAAAAABYAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EGxldW5nLW1zc3QwNy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFMAAACADgvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkw6bGV1bmctbXNzdDA3LnBkZgAOACIAEABsAGUAdQBuAGcALQBtAHMAcwB0ADAANwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIy9NeSBEcml2ZS9QYXBlcnMvTC9sZXVuZy1tc3N0MDcucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABsAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAdA=}}

@inproceedings{lofstead:pdsw13,
	Abstract = {The rise of Integrated Application Workflows (IAWs) for processing data prior to storage on persistent media prompts the need to incorporate features that reproduce many of the semantics of persistent storage devices. One such feature is the ability to manage data sets as chunks with natural barriers between different data sets. Towards that end, we need a mechanism to ensure that data moved to an intermediate storage area is both complete and correct before allowing access by other processing components. The Dou- bly Distributed Transactions (D2T) protocol offers such a mechanism. The initial development [9] suffered from scal- ability limitations and undue requirements on server processes. The current version has addressed these limitations and has demonstrated scalability with low overhead.},
	Address = {Denver, CO},
	Author = {Jay Lofstead and Jai Dayal and Ivo Jimenez and Carlos Maltzahn},
	Booktitle = {8th Parallel Data Storage Workshop at Supercomputing '13 (PDSW 2013)},
	Date-Added = {2019-12-26 16:21:31 -0800},
	Date-Modified = {2020-01-04 21:17:41 -0700},
	Keywords = {papers, transactions, datamanagement, hpc},
	Month = {November 18},
	Title = {Efficient Transactions for Parallel Data Movement},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9sb2ZzdGVhZC1wZHN3MTMucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E2xvZnN0ZWFkLXBkc3cxMy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFMAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkw6bG9mc3RlYWQtcGRzdzEzLnBkZgAADgAoABMAbABvAGYAcwB0AGUAYQBkAC0AcABkAHMAdwAxADMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL0wvbG9mc3RlYWQtcGRzdzEzLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@inproceedings{lofstead:iasds14,
	Abstract = {The DOE Extreme-Scale Technology Acceleration Fast Forward Storage and IO Stack project is going to have significant impact on storage systems design within and beyond the HPC community. With phase 1 of the project complete, it is an excellent opportunity to evaluate many of the decisions made to feed into the phase 2 effort. With this paper we not only provide a timely summary of important aspects of the design specifications but also capture the underlying reasoning that is not available elsewhere.
The initial effort to define a next generation storage system has made admirable contributions in architecture and design. Formalizing the general idea of data staging into burst buffers for the storage system will help manage the performance variability and offer additional data processing opportunities outside the main compute and storage system. Adding a transactional mech- anism to manage faults and data visibility helps enable effective analytics without having to work around the IO stack semantics. While these and other contributions are valuable, similar efforts made elsewhere may offer attractive alternatives or differing semantics that could yield a more feature rich environment with little to no additional overhead. For example, the Doubly Distributed Transactions (D2T) protocol offers an alternative approach for incorporating transactional semantics into the data path. Another project, PreDatA, examined how to get the best throughput for data operators and may offer additional insights into further refinements of the Burst Buffer concept.
This paper examines some of the choices made by the Fast Forward team and compares them with other options and offers observations and suggestions based on these other efforts. This will include some non-core contributions of other projects, such as some of the demonstration metadata and data storage components generated while implementing D2T, to make suggestions that may help the next generation design for how the IO stack works as a whole.},
	Address = {Minneapolis, MN},
	Author = {Jay Lofstead and Ivo Jimenez and Carlos Maltzahn},
	Booktitle = {Workshop on Interfaces and Architectures for Scientific Data Storage (IASDS 2014)},
	Date-Added = {2019-12-26 16:17:49 -0800},
	Date-Modified = {2020-01-04 23:08:26 -0700},
	Keywords = {papers, datamanagement, hpc},
	Month = {September 9-12},
	Title = {Consistency and Fault Tolerance Considerations for the Next Iteration of the DOE Fast Forward Storage and IO Project},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9sb2ZzdGVhZC1pYXNkczE0LnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xRsb2ZzdGVhZC1pYXNkczE0LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABTAAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpMOmxvZnN0ZWFkLWlhc2RzMTQucGRmAA4AKgAUAGwAbwBmAHMAdABlAGEAZAAtAGkAYQBzAGQAcwAxADQALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL0wvbG9mc3RlYWQtaWFzZHMxNC5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@inproceedings{lofstead:discs14,
	Abstract = {Scientific simulations are moving away from using centralized persistent storage for intermediate data between workflow steps towards an all online model. This shift is motivated by the relatively slow IO bandwidth growth compared with compute speed increases. The challenges presented by this shift to Integrated Application Workflows are motivated by the loss of persistent storage semantics for node-to-node communication. One step towards addressing this semantics gap is using transac- tions to logically delineate a data set from 100,000s of processes to 1000s of servers as an atomic unit.
Our previously demonstrated Doubly Distributed Transac- tions (D2T) protocol showed a high-performance solution, but had not explored how to detect and recover from faults. Instead, the focus was on demonstrating high-performance typical case performance. The research presented here addresses fault detec- tion and recovery based on the enhanced protocol design. The total overhead for a full transaction with multiple operations at 65,536 processes is on average 0.055 seconds. Fault detection and recovery mechanisms demonstrate similar performance to the success case with only the addition of appropriate timeouts for the system. This paper explores the challenges in designing a recoverable protocol for doubly distributed transactions, partic- ularly for parallel computing environments.},
	Address = {New Orleans, LA},
	Author = {Jay Lofstead and Jai Dayal and Ivo Jimenez and Carlos Maltzahn},
	Booktitle = {The 2014 International Workshop on Data-Intensive Scalable Computing Systems (DISCS-2014) (Workshop co-located with Supercomputing 2014)},
	Date-Added = {2019-12-26 16:14:45 -0800},
	Date-Modified = {2020-01-04 21:18:57 -0700},
	Keywords = {papers, datamanagement, hpc},
	Month = {November 16},
	Title = {Efficient, Failure Resilient Transactions for Parallel and Distributed Computing},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9sb2ZzdGVhZC1kaXNjczE0LnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xRsb2ZzdGVhZC1kaXNjczE0LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABTAAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpMOmxvZnN0ZWFkLWRpc2NzMTQucGRmAA4AKgAUAGwAbwBmAHMAdABlAGEAZAAtAGQAaQBzAGMAcwAxADQALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL0wvbG9mc3RlYWQtZGlzY3MxNC5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@inproceedings{jimenez:woc15,
	Abstract = {Evaluating experimental results in the field of com- puter systems is a challenging task, mainly due to the many changes in software and hardware that computational environ- ments go through. In this position paper, we analyze salient features of container technology that, if leveraged correctly, can help reduce the complexity of reproducing experiments in systems research. We present a use case in the area of distributed storage systems to illustrate the extensions that we envision, mainly in terms of container management infrastructure. We also discuss the benefits and limitations of using containers as a way of reproducing research in other areas of experimental systems research.},
	Address = {Tempe, AZ},
	Author = {Ivo Jimenez and Carlos Maltzahn and Adam Moody and Kathryn Mohror and Jay Lofstead and Remzi Arpaci-Dusseau and Andrea Arpaci-Dusseau},
	Booktitle = {First Workshop on Containers (WoC 2015) (Workshop co-located with IEEE International Conference on Cloud Engineering - IC2E 2015)},
	Date-Added = {2019-12-26 16:08:16 -0800},
	Date-Modified = {2020-01-19 16:41:52 -0800},
	Keywords = {papers, reproducibility, containers},
	Month = {March 9-13},
	Title = {The Role of Container Technology in Reproducible Computer Systems Research},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotd29jMTUucGRmTxEBagAAAAABagACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EWppbWVuZXotd29jMTUucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAANJLUoAAAIAOy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6SS1KOmppbWVuZXotd29jMTUucGRmAAAOACQAEQBqAGkAbQBlAG4AZQB6AC0AdwBvAGMAMQA1AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAmL015IERyaXZlL1BhcGVycy9JLUovamltZW5lei13b2MxNS5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbwAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHd}}

@inproceedings{lofstead:sc16,
	Abstract = {The DOE Extreme-Scale Technology Acceleration Fast Forward Storage and IO Stack project is going to have significant impact on storage systems design within and beyond the HPC community. With phase two of the project starting, it is an excellent opportunity to explore the complete design and how it will address the needs of extreme scale platforms. This paper examines each layer of the proposed stack in some detail along with cross-cutting topics, such as transactions and metadata management.
This paper not only provides a timely summary of important aspects of the design specifications but also captures the under- lying reasoning that is not available elsewhere. We encourage the broader community to understand the design, intent, and future directions to foster discussion guiding phase two and the ultimate production storage stack based on this work. An initial performance evaluation of the early prototype implementation is also provided to validate the presented design.
},
	Address = {Salt Lake City, UT},
	Author = {Jay Lofstead and Ivo Jimenez and Carlos Maltzahn and Quincey Koziol and John Bent and Eric Barton},
	Booktitle = {29th ACM and IEEE International Conference for High Performance Computing, Networking, Storage and Analysis (SC16)},
	Date-Added = {2019-12-26 15:58:41 -0800},
	Date-Modified = {2020-01-04 21:19:51 -0700},
	Keywords = {papers, parallel, storage, hpc, exascale},
	Month = {November 13-18},
	Title = {DAOS and Friends: A Proposal for an Exascale Storage System},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9sb2ZzdGVhZC1zYzE2LnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFsb2ZzdGVhZC1zYzE2LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABTAAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpMOmxvZnN0ZWFkLXNjMTYucGRmAAAOACQAEQBsAG8AZgBzAHQAZQBhAGQALQBzAGMAMQA2AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9ML2xvZnN0ZWFkLXNjMTYucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@inproceedings{jimenez:icpe18,
	Abstract = {We introduce quiho, a framework for profiling application performance that can be used in automated performance regression tests. quiho profiles an application by applying sensitivity analysis, in particular statistical regression analysis (SRA), using application-independent performance feature vectors that characterize the performance of machines. The result of the SRA, feature importance specifically, is used as a proxy to identify hardware and low-level system software behavior. The relative importance of these features serve as a performance profile of an application (termed inferred resource utilization profile or IRUP), which is used to automatically validate performance behavior across multiple revisions of an application's code base without having to instrument code or obtain performance counters. We demonstrate that quiho can successfully discover performance regressions by showing its effectiveness in profiling application performance for synthetically introduced regressions as well as those found in real-world applications.},
	Address = {Berlin, Germany},
	Author = {Ivo Jimenez and Noah Watkins and Michael Sevilla and Jay Lofstead and Carlos Maltzahn},
	Booktitle = {9th ACM/SPEC International Conference on Performance Engineering (ICPE 2018)},
	Date-Added = {2019-12-26 15:51:19 -0800},
	Date-Modified = {2020-01-04 23:15:59 -0700},
	Keywords = {papers, reproducibility, performance, testing},
	Month = {April 9-13},
	Title = {quiho: Automated Performance Regression Testing Using Inferred Resource Utilization Profiles},
	Year = {2018},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotaWNwZTE4LnBkZk8RAW4AAAAAAW4AAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xJqaW1lbmV6LWljcGUxOC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAADSS1KAAACADwvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkktSjpqaW1lbmV6LWljcGUxOC5wZGYADgAmABIAagBpAG0AZQBuAGUAegAtAGkAYwBwAGUAMQA4AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAnL015IERyaXZlL1BhcGVycy9JLUovamltZW5lei1pY3BlMTgucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABwAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAeI=}}

@inproceedings{jimenez:rescue-hpc18,
	Abstract = {Advances in agile software delivery methodologies and tools (commonly referred to as DevOps) have not yet materialized in academic scenarios such as university, industry and government laboratories. In this position paper we make the case for Black Swan, a platform for the agile implementation, maintenance and curation of experimentation pipelines by embracing a DevOps approach.},
	Address = {Dallas, TX},
	Author = {Ivo Jimenez and Carlos Maltzahn},
	Booktitle = {1st Workshop on Reproducible, Customizable and Portable Workflows for HPC (ResCuE-HPC'18, co-located with SC'18)},
	Date-Added = {2019-12-26 15:45:05 -0800},
	Date-Modified = {2020-01-04 21:20:33 -0700},
	Keywords = {papers, reproducibility},
	Month = {November 11},
	Title = {Spotting Black Swans With Ease: The Case for a Practical Reproducibility Platform},
	Year = {2018},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBPLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotcmVzY3VlLWhwYzE4LnBkZk8RAYYAAAAAAYYAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xhqaW1lbmV6LXJlc2N1ZS1ocGMxOC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAADSS1KAAACAEIvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkktSjpqaW1lbmV6LXJlc2N1ZS1ocGMxOC5wZGYADgAyABgAagBpAG0AZQBuAGUAegAtAHIAZQBzAGMAdQBlAC0AaABwAGMAMQA4AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAtL015IERyaXZlL1BhcGVycy9JLUovamltZW5lei1yZXNjdWUtaHBjMTgucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB2AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAgA=},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBWLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotcmVzY3VlLWhwYzE4LXNsaWRlcy5wZGZPEQGiAAAAAAGiAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8famltZW5lei1yZXNjdWUtaHBjMTgtc2xpZGVzLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA0ktSgAAAgBJLzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpJLUo6amltZW5lei1yZXNjdWUtaHBjMTgtc2xpZGVzLnBkZgAADgBAAB8AagBpAG0AZQBuAGUAegAtAHIAZQBzAGMAdQBlAC0AaABwAGMAMQA4AC0AcwBsAGkAZABlAHMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASADQvTXkgRHJpdmUvUGFwZXJzL0ktSi9qaW1lbmV6LXJlc2N1ZS1ocGMxOC1zbGlkZXMucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAH0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAACIw==}}

@inproceedings{liu:iodc19,
	Abstract = {The storage industry is considering new kinds of storage de- vices that support data access function offloading, i.e. the ability to perform data access functions on the storage device itself as opposed to performing it on a separate compute system to which the storage device is connected. But what is the benefit of offloading to a storage device that is controlled by an embedded platform, very different from a host platform? To quantify the benefit, we need a measurement methodology that enables apple-to-apple comparisons between different platforms. We propose a Media-based Work Unit (MBWU, pronounced ''MibeeWu''), and an MBWU-based measurement methodology to standardize the platform efficiency evaluation so as to quantify the benefit of offloading. To demonstrate the merit of this methodology, we implemented a prototype to automate quantifying the benefit of offloading the key-value data access function.},
	Address = {Frankfurt a. M., Germany},
	Author = {Jianshen Liu and Philip Kufeldt and Carlos Maltzahn},
	Booktitle = {HPC I/O in the Data Center Workshop (HPC-IODC 2019, co-located with ISC-HPC 2019)},
	Date-Added = {2019-12-26 15:40:05 -0800},
	Date-Modified = {2020-01-04 21:23:18 -0700},
	Keywords = {papers, reproducibility, performance, embedded, storage, eusocial},
	Month = {June 20},
	Title = {MBWU: Benefit Quantification for Data Access Function Offloading},
	Year = {2019},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBDLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9saXUtaW9kYzE5LnBkZk8RAVgAAAAAAVgAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w5saXUtaW9kYzE5LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABTAAAAgA2LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpMOmxpdS1pb2RjMTkucGRmAA4AHgAOAGwAaQB1AC0AaQBvAGQAYwAxADkALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACEvTXkgRHJpdmUvUGFwZXJzL0wvbGl1LWlvZGMxOS5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAGoAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAABxg==},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9saXUtaW9kYzE5LXNsaWRlcy5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8VbGl1LWlvZGMxOS1zbGlkZXMucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUwAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6TDpsaXUtaW9kYzE5LXNsaWRlcy5wZGYAAA4ALAAVAGwAaQB1AC0AaQBvAGQAYwAxADkALQBzAGwAaQBkAGUAcwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvTC9saXUtaW9kYzE5LXNsaWRlcy5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp}}

@inproceedings{dahlgren:pdsw19,
	Abstract = {In the post-Moore era, systems and devices with new architectures will arrive at a rapid rate with significant impacts on the software stack. Applications will not be able to fully benefit from new architectures unless they can delegate adapting to new devices in lower layers of the stack. In this paper we introduce physical design management which deals with the problem of identifying and executing transformations on physical designs of stored data, i.e. how data is mapped to storage abstractions like files, objects, or blocks, in order to improve performance. Physical design is traditionally placed with applications, access libraries, and databases, using hard- wired assumptions about underlying storage systems. Yet, storage systems increasingly not only contain multiple kinds of storage devices with vastly different performance profiles but also move data among those storage devices, thereby changing the benefit of a particular physical design. We advocate placing physical design management in storage, identify interesting research challenges, provide a brief description of a prototype implementation in Ceph, and discuss the results of initial experiments at scale that are replicable using Cloudlab. These experiments show performance and resource utilization trade-offs associated with choosing different physical designs and choosing to transform between physical designs.},
	Address = {Denver, CO},
	Author = {Kathryn Dahlgren and Jeff LeFevre and Ashay Shirwadkar and Ken Iizawa and Aldrin Montana and Peter Alvaro and Carlos Maltzahn},
	Booktitle = {4th International Parallel Data Systems Workshop (PDSW 2019, co-located with SC'19)},
	Date-Added = {2019-12-26 15:35:44 -0800},
	Date-Modified = {2020-01-04 21:24:17 -0700},
	Keywords = {papers, programmable, storage, datamanagement, physicaldesign},
	Month = {November 18},
	Title = {Towards Physical Design Management in Storage Systems},
	Year = {2019},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvRC9kYWhsZ3Jlbi1wZHN3MTkucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E2RhaGxncmVuLXBkc3cxOS5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFEAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkQ6ZGFobGdyZW4tcGRzdzE5LnBkZgAADgAoABMAZABhAGgAbABnAHIAZQBuAC0AcABkAHMAdwAxADkALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL0QvZGFobGdyZW4tcGRzdzE5LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@inproceedings{uta:nsdi20,
	Abstract = {Performance variability has been acknowledged as a problem for over a decade by cloud practitioners and performance engineers. Yet, our survey of top systems conferences reveals that the research community regularly disregards variability when running  experiments  in  the  cloud.  Focusing  on  networks, we assess the impact of variability on cloud-based big-data workloads by gathering traces from mainstream commercial clouds and private research clouds. Our data collection consists of millions of datapoints gathered while transferring over 9 petabytes of data. We characterize the network variability present in our data and show that, even though commercial cloud providers implement mechanisms for quality-of-service enforcement, variability still occurs, and is even exacerbated by such mechanisms and service provider policies. We show how big-data workloads suffer from significant slowdowns and  lack  predictability  and  replicability, even  when  state-of-the-art experimentation techniques are used. We provide guidelines for practitioners to reduce the volatility of big data performance, making experiments more repeatable.},
	Address = {Santa Clara, CA},
	Author = {Alexandru Uta and Alexandru Custura and Dmitry Duplyakin and Ivo Jimenez and Jan Rellermeyer and Carlos Maltzahn and Robert Ricci and Alexandru Iosup},
	Booktitle = {NSDI '20},
	Date-Added = {2019-12-26 15:33:24 -0800},
	Date-Modified = {2020-01-04 21:25:56 -0700},
	Keywords = {papers, reproducibility, datacenter, performance},
	Month = {February 25-27},
	Title = {Is Big Data Performance Reproducible in Modern Cloud Networks?},
	Year = {2020},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBFLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVS1WL3V0YS1uc2RpMjAucGRmTxEBXgAAAAABXgACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DnV0YS1uc2RpMjAucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAANVLVYAAAIAOC86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6VS1WOnV0YS1uc2RpMjAucGRmAA4AHgAOAHUAdABhAC0AbgBzAGQAaQAyADAALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACMvTXkgRHJpdmUvUGFwZXJzL1UtVi91dGEtbnNkaTIwLnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbAAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHO}}

@inproceedings{lefevre:vault19,
	Abstract = {Ceph is an open source distributed storage system that is object-based and massively scalable. Ceph provides developers with the capability to create data interfaces that can take advantage of local CPU and memory on the storage nodes (Ceph Object Storage Devices). These interfaces are powerful for application developers and can be created in C, C++, and Lua.

Skyhook is an open source storage and database project in the Center for Research in Open Source Software at UC Santa Cruz. Skyhook uses these capabilities in Ceph to create specialized read/write interfaces that leverage IO and CPU within the storage layer toward database processing and management. Specifically, we develop methods to apply predicates locally as well as additional metadata and indexing capabilities using Ceph's internal indexing mechanism built on top of RocksDB.

Skyhook's approach helps to enable scale-out of a single node database system by scaling out the storage layer. Our results show the performance benefits for some queries indeed scale well as the storage layer scales out.},
	Address = {Boston, MA},
	Author = {Jeff LeFevre and Noah Watkins and Michael Sevilla and Carlos Maltzahn},
	Booktitle = {2019 Linux Storage and Filesystems (Vault'19, co-located with FAST'19)},
	Date-Added = {2019-08-07 17:58:01 -0700},
	Date-Modified = {2020-01-21 19:40:26 -0800},
	Keywords = {papers, programmable, storage, database},
	Month = {Februrary 25-26},
	Title = {Skyhook: Programmable storage for databases},
	Year = {2019},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBPLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9sZWZldnJlLXZhdWx0MTktc2xpZGVzLnBkZk8RAYgAAAAAAYgAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xpsZWZldnJlLXZhdWx0MTktc2xpZGVzLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABTAAAAgBCLzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpMOmxlZmV2cmUtdmF1bHQxOS1zbGlkZXMucGRmAA4ANgAaAGwAZQBmAGUAdgByAGUALQB2AGEAdQBsAHQAMQA5AC0AcwBsAGkAZABlAHMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASAC0vTXkgRHJpdmUvUGFwZXJzL0wvbGVmZXZyZS12YXVsdDE5LXNsaWRlcy5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHYAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAACAg==}}

@inproceedings{david:precs19,
	Abstract = {Computer network research experiments can be broadly grouped in three categories: simulated, controlled, and real-world experiments. Simulation frameworks, experiment testbeds and measurement tools, respectively, are commonly used as the platforms for carrying out network experiments. In many cases, given the nature of computer network experiments, properly configuring these platforms is a complex and time-consuming task, which makes replicating and validating research results quite challenging. This complexity can be reduced by leveraging tools that enable experiment reproducibility. In this paper, we show how a recently proposed reproducibility tool called Popper facilitates the reproduction of networking exper- iments. In particular, we detail the steps taken to reproduce results in two published articles that rely on simulations. The outcome of this exercise is a generic workflow for carrying out network simulation experiments. In addition, we briefly present two additional Popper workflows for running experiments on controlled testbeds, as well as studies that gather real-world metrics (all code is publicly available on Github). We close by providing a list of lessons we learned throughout this process.},
	Author = {Andrea David and Mariette Souppe and Ivo Jimenez and Katia Obraczka and Sam Mansfield and Kerry Veenstra and Carlos Maltzahn},
	Booktitle = {P-RECS'19},
	Date-Added = {2019-06-25 11:22:58 -0700},
	Date-Modified = {2020-01-04 21:28:38 -0700},
	Keywords = {papers, reproducibility, networking, experience},
	Month = {June 24},
	Title = {Reproducible Computer Network Experiments: A Case Study Using Popper},
	Year = {2019},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvRC9kYXZpZC1wcmVjczE5LnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFkYXZpZC1wcmVjczE5LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABRAAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpEOmRhdmlkLXByZWNzMTkucGRmAAAOACQAEQBkAGEAdgBpAGQALQBwAHIAZQBjAHMAMQA5AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9EL2RhdmlkLXByZWNzMTkucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@unpublished{liu:ocpgs19,
	Author = {Jianshen Liu and Philip Kufeldt and Carlos Maltzahn},
	Date-Added = {2019-05-06 18:39:54 -0700},
	Date-Modified = {2020-01-04 21:29:52 -0700},
	Keywords = {shortpapers, eusocial, storagemedium, performance},
	Month = {March 14-15},
	Note = {Poster at OCP Global Summit 2019},
	Title = {Quantifying benefits of offloading data management to storage devices},
	Year = {2019},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9saXUtb2NwZ3MxOS1wb3N0ZXIucGRmTxEBeAAAAAABeAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////FmxpdS1vY3BnczE5LXBvc3Rlci5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFMAAACAD4vOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkw6bGl1LW9jcGdzMTktcG9zdGVyLnBkZgAOAC4AFgBsAGkAdQAtAG8AYwBwAGcAcwAxADkALQBwAG8AcwB0AGUAcgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKS9NeSBEcml2ZS9QYXBlcnMvTC9saXUtb2NwZ3MxOS1wb3N0ZXIucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAByAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAe4=}}

@inproceedings{sevilla:hotstorage18,
	Abstract = {The file system metadata service is the scalability bottleneck for many of today's workloads. Common approaches for attacking this ``metadata scaling wall'' include: caching inodes on clients and servers, caching parent inodes for path traversal, and dynamic caching policies that exploit workload locality. These caches reduce the number of remote procedure calls (RPCs) but the effectiveness is dependent on the overhead of maintaining cache coherence and the administrator's ability to select the best cache size for the given workloads. Recent work reduces the number of metadata RPCs to 1 without using a cache at all, by letting clients ``decouple'' the subtrees from the global namespace so that they can do metadata operations locally. Even with this technique, we show that file system metadata is still a bottleneck because namespaces for today's workloads can be very large. The size is problematic for reads because metadata needs to be transferred and materialized. 

The management techniques for file system metadata assume that namespaces have no structure but we observe that this is not the case for all workloads. We propose Tintenfisch, a file system that allows users to succinctly express the structure of the metadata they intend to create. If a user can express the structure of the namespace, Tintenfisch clients and servers can (1) compact metadata, (2) modify large namespaces more quickly, and (3) generate only relevant parts of the namespace. This reduces network traffic, storage footprints, and the number of overall metadata operations needed to complete a job.},
	Address = {Boston, MA},
	Annote = {Submitted to HotStorage'18},
	Author = {Michael A. Sevilla and Reza Nasirigerdeh and Carlos Maltzahn and Jeff LeFevre and Noah Watkins and Peter Alvaro and Margaret Lawson and Jay Lofstead and Jim Pivarski},
	Booktitle = {HotStorage '18},
	Date-Added = {2018-09-04 00:39:56 -0700},
	Date-Modified = {2020-01-21 18:52:29 -0800},
	Keywords = {papers, metadata, filesystems, scalable, naming},
	Month = {July 9-10},
	Title = {Tintenfisch: File System Namespace Schemas and Generators},
	Year = {2018},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBNLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLWhvdHN0b3JhZ2UxOC5wZGZPEQGAAAAAAAGAAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Yc2V2aWxsYS1ob3RzdG9yYWdlMTgucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAABQREYgQ0FST/////8AAAoAY3UAAAAAAAAAAAAAAAAAAVMAAAIAQC86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6UzpzZXZpbGxhLWhvdHN0b3JhZ2UxOC5wZGYADgAyABgAcwBlAHYAaQBsAGwAYQAtAGgAbwB0AHMAdABvAHIAYQBnAGUAMQA4AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgArL015IERyaXZlL1BhcGVycy9TL3NldmlsbGEtaG90c3RvcmFnZTE4LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAdAAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAH4}}

@inproceedings{maricq:osdi18,
	Abstract = {The performance of compute hardware varies: software run repeatedly on the same server (or a different server with supposedly identical parts) can produce performance results that differ with each execution. This variation has important effects on the reproducibility of systems research and ability to quantitatively compare the performance of different systems. It also has implications for commercial computing, where agreements are often made conditioned on meeting specific performance targets.
Over a period of 10 months, we conducted a large-scale study capturing nearly 900,000 data points from 835 servers. We examine this data from two perspectives: that of a service provider wishing to offer a consistent environment, and that of a systems researcher who must understand how variability impacts experimental results. From this examination, we draw a number of lessons about the types and magnitudes of performance variability and the effects on confidence in experiment results. We also create a statistical model that can be used to understand how representative an individual server is of the general population. The full dataset and our analysis tools are publicly available, and we have built a system to interactively explore the data and make recommendations for experiment parameters based on statistical analysis of historical data.},
	Address = {Carlsbad, CA},
	Author = {Aleksander Maricq and Dmitry Duplyakin and Ivo Jimenez and Carlos Maltzahn and Ryan Stutsman and Robert Ricci},
	Booktitle = {13th USENIX Symposium on Operating Systems Design and Implementation (OSDI'18)},
	Date-Added = {2018-07-21 02:10:24 +0000},
	Date-Modified = {2020-01-04 21:30:49 -0700},
	Keywords = {papers, performance, statistics, cloud, reproducibility, systems},
	Month = {October 8-10},
	Title = {Taming Performance Variability},
	Year = {2018},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYXJpY3Etb3NkaTE4LnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFtYXJpY3Etb3NkaTE4LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABTQAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpNOm1hcmljcS1vc2RpMTgucGRmAAAOACQAEQBtAGEAcgBpAGMAcQAtAG8AcwBkAGkAMQA4AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9NL21hcmljcS1vc2RpMTgucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@inproceedings{sevilla:ccgrid18,
	Abstract = {Our analysis of the key-value activity generated by the ParSplice molecular dynamics simulation demonstrates the need for more complex cache management strategies. Baseline measurements show clear key access patterns and hot spots that offer significant opportunity for optimization. We use the data management language and policy engine from the Mantle system to dynamically explore a variety of techniques, ranging from basic algorithms and heuristics to statistical models, calculus, and machine learning. While Mantle was originally designed for distributed file systems, we show how the collection of abstractions effectively decomposes the problem into manageable policies for a different application and storage system. Our exploration of this space results in a dynamically sized cache policy that does not sacrifice any performance while using 32-66% less memory than the default ParSplice configuration.},
	Address = {Washington, DC},
	Author = {Michael A. Sevilla and Carlos Maltzahn and Peter Alvaro and Reza Nasirigerdeh and Bradley W. Settlemyer and Danny Perez and David Rich and Galen M. Shipman},
	Booktitle = {CCGRID '18},
	Date-Added = {2018-07-01 21:56:37 +0000},
	Date-Modified = {2020-01-04 21:31:45 -0700},
	Keywords = {papers, caching, programmable, storage, hpc},
	Month = {May 1-4},
	Title = {Programmable Caches with a Data Management Language \& Policy Engine},
	Year = {2018},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLWNjZ3JpZDE4LnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xRzZXZpbGxhLWNjZ3JpZDE4LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAFBERiBDQVJP/////wAACgBjdQAAAAAAAAAAAAAAAAABUwAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpTOnNldmlsbGEtY2NncmlkMTgucGRmAA4AKgAUAHMAZQB2AGkAbABsAGEALQBjAGMAZwByAGkAZAAxADgALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL1Mvc2V2aWxsYS1jY2dyaWQxOC5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@inproceedings{sevilla:precs18,
	Abstract = {We describe the four publications we have tried to make reproducible and discuss how each paper has changed our workflows, practices, and collaboration policies. The fundamental insight is that paper artifacts must be made reproducible from the start of the project; artifacts are too difficult to make reproducible when the papers are (1) already published and (2) authored by researchers that are not thinking about reproducibility. In this paper, we present the best practices adopted by our research laboratory, which was sculpted by the pitfalls we have identified for the Popper convention. We conclude with a ``call-to-arms" for the community focused on enhancing reproducibility initiatives for academic conferences, industry environments, and national laboratories. We hope that our experiences will shape a best practices guide for future reproducible papers.},
	Address = {Tempe, AZ},
	Author = {Michael A. Sevilla and Carlos Maltzahn},
	Booktitle = {P-RECS'18},
	Date-Added = {2018-06-12 17:20:57 +0000},
	Date-Modified = {2020-01-04 21:32:14 -0700},
	Keywords = {papers, reproducibility, experience},
	Month = {June 11},
	Title = {Popper Pitfalls: Experiences Following a Reproducibility Convention},
	Year = {2018},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLXByZWNzMTgucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E3NldmlsbGEtcHJlY3MxOC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFTAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlM6c2V2aWxsYS1wcmVjczE4LnBkZgAADgAoABMAcwBlAHYAaQBsAGwAYQAtAHAAcgBlAGMAcwAxADgALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL1Mvc2V2aWxsYS1wcmVjczE4LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@article{kufeldt:login18,
	Abstract = {As storage devices get faster, data management tasks rob the host of CPU cycles and DDR bandwidth. In this article, we examine a new interface to storage devices that can leverage existing and new CPU and DRAM resources to take over data management tasks like availability, recovery, and migrations. This new interface provides a roadmap for device-to-device interactions and more powerful storage devices capable of providing in-store compute services that can dramatically improve performance. We call such storage devices ``eusocial'' because we are inspired by eusocial insects like ants, termites, and bees, which as individuals are primitive but collectively accomplish amazing things.
},
	Author = {Philip Kufeldt and Carlos Maltzahn and Tim Feldman and Christine Green and Grant Mackey and Shingo Tanaka},
	Date-Added = {2018-06-06 16:06:14 +0000},
	Date-Modified = {2020-01-04 21:33:08 -0700},
	Journal = {;login: The USENIX Magazine},
	Keywords = {papers, storage, devices, networking, flash, offloading},
	Number = {2},
	Pages = {16--22},
	Title = {Eusocial Storage Devices - Offloading Data Management to Storage Devices that Can Act Collectively},
	Volume = {43},
	Year = {2018},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSy9rdWZlbGR0LWxvZ2luMTgucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E2t1ZmVsZHQtbG9naW4xOC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFLAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOks6a3VmZWxkdC1sb2dpbjE4LnBkZgAADgAoABMAawB1AGYAZQBsAGQAdAAtAGwAbwBnAGkAbgAxADgALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL0sva3VmZWxkdC1sb2dpbjE4LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@inproceedings{jimenez:pdsw15,
	Abstract = {Validating experimental results in the field of storage systems is a challenging task, mainly due to the many changes in software and hardware that computational environments go through. Determining if an experiment is reproducible entails two separate tasks: re-executing the experiment and validating the results. Existing reproducibility efforts have focused on the former, envisioning techniques and infrastructures that make it easier to re-execute an experiment. In this position paper, we focus on the latter by analyzing the validation workflow that an experiment re-executioner goes through. We notice that validating results is done on the basis of experiment design and high-level goals, rather than exact quantitative metrics. Based on this insight, we introduce a declarative format for specifying the high-level components of an experiment as well as describing generic, testable conditions that serve as the basis for validation. We present a use case in the area of distributed storage systems to illustrate the usefulness of this approach.},
	Address = {Austin, TX},
	Author = {Ivo Jimenez and Carlos Maltzahn and Jay Lofstead and Kathryn Mohror and Adam Moody and Remzi Arpaci-Dusseau and Andrea Arpaci-Dusseau},
	Booktitle = {PDSW'15},
	Date-Added = {2018-05-15 06:28:35 +0000},
	Date-Modified = {2020-01-04 23:42:08 -0700},
	Keywords = {papers, reproducibility, declarative},
	Month = {November 15},
	Title = {Tackling the Reproducibility Problem in Storage Systems Research with Declarative Experiment Specifications},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotcGRzdzE1LnBkZk8RAW4AAAAAAW4AAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xJqaW1lbmV6LXBkc3cxNS5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAADSS1KAAACADwvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkktSjpqaW1lbmV6LXBkc3cxNS5wZGYADgAmABIAagBpAG0AZQBuAGUAegAtAHAAZABzAHcAMQA1AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAnL015IERyaXZlL1BhcGVycy9JLUovamltZW5lei1wZHN3MTUucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABwAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAeI=}}

@techreport{sevilla:ucsctr18,
	Address = {Santa Cruz, CA},
	Annote = {Submitted to HotStorage'18},
	Author = {Michael A. Sevilla and Reza Nasirigerdeh and Carlos Maltzahn and Jeff LeFevre and Noah Watkins and Peter Alvaro and Margaret Lawson and Jay Lofstead and Jim Pivarski},
	Date-Added = {2018-04-08 04:09:23 +0000},
	Date-Modified = {2018-04-08 04:13:07 +0000},
	Institution = {UC Santa Cruz},
	Keywords = {papers, metadata, filesystems, scalable, naming},
	Month = {April 7},
	Number = {UCSC-SOE-18-08},
	Title = {Tintenfisch: File System Namespace Schemas and Generators},
	Type = {Tech. rept.},
	Year = {2018},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLXVjc2N0cjE4LnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xRzZXZpbGxhLXVjc2N0cjE4LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABUwAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpTOnNldmlsbGEtdWNzY3RyMTgucGRmAA4AKgAUAHMAZQB2AGkAbABsAGEALQB1AGMAcwBjAHQAcgAxADgALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL1Mvc2V2aWxsYS11Y3NjdHIxOC5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@inproceedings{jia:hipc17,
	Abstract = {Accessing external resources (e.g., loading input data, checkpointing snapshots, and out-of-core processing) can have a significant impact on the performance of applications. However, no existing programming systems for high-performance computing directly manage and optimize external accesses. As a result, users must explicitly manage external accesses alongside their computation at the application level, which can result in both correctness and performance issues.
We address this limitation by introducing Iris, a task-based programming model with semantics for external resources. Iris allows applications to describe their access requirements to external resources and the relationship of those accesses to the computation. Iris incorporates external I/O into a deferred execution model, reschedules external I/O to overlap I/O with computation, and reduces external I/O when possible. We evaluate Iris on three microbenchmarks representative of important workloads in HPC and a full combustion simulation, S3D. We demonstrate that the Iris implementation of S3D reduces the external I/O overhead by up to 20x, compared to the Legion and the Fortran implementations.},
	Address = {Jaipur, India},
	Author = {Zhihao Jia and Sean Treichler and Galen Shipman and Michael Bauer and Noah Watkins and Carlos Maltzahn and Pat McCormick and Alex Aiken},
	Booktitle = {HiPC 2017},
	Date-Added = {2018-04-03 18:26:23 +0000},
	Date-Modified = {2020-01-04 22:56:24 -0700},
	Keywords = {papers, runtime, distributed, programming, storage},
	Month = {December 18-21},
	Title = {Integrating External Resources with a Task-Based Programming Model},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBFLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppYS1oaXBjMTcucGRmTxEBXgAAAAABXgACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DmppYS1oaXBjMTcucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk//////AAAKAGN1AAAAAAAAAAAAAAAAAANJLUoAAAIAOC86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6SS1KOmppYS1oaXBjMTcucGRmAA4AHgAOAGoAaQBhAC0AaABpAHAAYwAxADcALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACMvTXkgRHJpdmUvUGFwZXJzL0ktSi9qaWEtaGlwYzE3LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbAAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHO}}

@inproceedings{sevilla:ipdps18,
	Abstract = {HPC and data center scale application developers are abandoning POSIX IO because file system metadata synchronization and serialization overheads of providing strong consistency and durability are too costly -- and often unnecessary -- for their applications. Unfortunately, designing file systems with weaker consistency or durability semantics excludes applications that rely on stronger guarantees, forcing developers to re-write their applications or deploy them on a different system. We present a framework and API that lets administrators specify their consistency/durability requirements and dynamically assign them to subtrees in the same namespace, allowing administrators to optimize subtrees over time and space for different workloads. We show similar speedups to related work but more importantly, we show performance improvements when we custom fit subtree semantics to applications such as checkpoint-restart (91.7x speedup), user home directories (0.03 standard deviation from optimal), and users checking for partial results (2\% overhead).},
	Address = {Vancouver, BC, Canada},
	Author = {Michael A. Sevilla and Ivo Jimenez and Noah Watkins and Jeff LeFevre and Peter Alvaro and Shel Finkelstein and Patrick Donnelly and Carlos Maltzahn},
	Booktitle = {IPDPS 2018},
	Date-Added = {2018-03-19 21:24:16 +0000},
	Date-Modified = {2020-01-04 22:56:45 -0700},
	Keywords = {papers, metadata, datamanagement, programmable, filesystems, storage, systems},
	Month = {May 21-25},
	Title = {Cudele: An API and Framework for Programmable Consistency and Durability in a Global Namespace},
	Year = {2018},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLWlwZHBzMTgucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E3NldmlsbGEtaXBkcHMxOC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAUERGIENBUk//////AAAKAGN1AAAAAAAAAAAAAAAAAAFTAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlM6c2V2aWxsYS1pcGRwczE4LnBkZgAADgAoABMAcwBlAHYAaQBsAGwAYQAtAGkAcABkAHAAcwAxADgALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL1Mvc2V2aWxsYS1pcGRwczE4LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@inproceedings{ionkov-pdsw17,
	Abstract = {Scientific workflows contain an increasing number of interacting applications, often with big disparity between the formats of data being produced and consumed by different applications. This mismatch can result in performance degradation as data retrieval causes multiple read operations (often to a remote storage system) in order to convert the data. Although some parallel filesystems and middleware libraries attempt to identify access patterns and optimize data retrieval, they frequently fail if the patterns are complex.
The goal of ASGARD is to replace I/O operations issued to a file by the processes with a single operation that passes enough semantic information to the storage system, so it can combine (and eventually optimize) the data movement. ASGARD allows application developers to define their application's abstract dataset as well as the subsets of the data (fragments) that are created and used by the HPC codes. It uses the semantic information to generate and execute transformation rules that convert the data between the the memory layouts of the producer and consumer applications, as well as the layout on nonvolatile storage. The transformation engine implements functionality similar to the scatter/gather support available in some file systems. Since data subsets are defined during the initialization phase, i.e., well in advance from the time they are used to store and retrieve data, the storage system has multiple opportunities to optimize both the data layout and the transformation rules in order to increase the overall I/O performance.
In order to evaluate ASGARD's performance, we added support for ASGARD's transformation rules to Ceph's object store RADOS. We created Ceph data objects that allow custom data striping based on ASGARD's fragment definitions. Our tests with the extended RADOS show up to 5 times performance improvements for writes and 10 times performance improvements for reads over collective MPI I/O.},
	Address = {Denver, CO},
	Author = {Latchesar Ionkov and Carlos Maltzahn and Michael Lang},
	Booktitle = {PDSW-DISCS 2017 at SC17},
	Date-Added = {2017-11-07 16:45:07 +0000},
	Date-Modified = {2020-01-04 21:39:53 -0700},
	Keywords = {papers, replication, layout, language},
	Month = {Nov 13},
	Title = {Optimized Scatter/Gather Data Operations for Parallel Storage},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2lvbmtvdi1wZHN3MTcucGRmTxEBagAAAAABagACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EWlvbmtvdi1wZHN3MTcucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAANJLUoAAAIAOy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6SS1KOmlvbmtvdi1wZHN3MTcucGRmAAAOACQAEQBpAG8AbgBrAG8AdgAtAHAAZABzAHcAMQA3AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAmL015IERyaXZlL1BhcGVycy9JLUovaW9ua292LXBkc3cxNy5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbwAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHd},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBPLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2lvbmtvdi1wZHN3MTctc2xpZGVzLnBkZk8RAYYAAAAAAYYAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xhpb25rb3YtcGRzdzE3LXNsaWRlcy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAADSS1KAAACAEIvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkktSjppb25rb3YtcGRzdzE3LXNsaWRlcy5wZGYADgAyABgAaQBvAG4AawBvAHYALQBwAGQAcwB3ADEANwAtAHMAbABpAGQAZQBzAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAtL015IERyaXZlL1BhcGVycy9JLUovaW9ua292LXBkc3cxNy1zbGlkZXMucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB2AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAgA=}}

@article{hacker:bams17,
	Abstract = {Software containers can revolutionize research and education with numerical weather prediction models by easing use and guaranteeing reproducibility.},
	Author = {Joshua P. Hacker and John Exby and David Gill and Ivo Jimenez and Carlos Maltzahn and Timothy See and Gretchen Mullendore and Kathryn Fossell},
	Date-Added = {2017-08-29 05:50:47 +0000},
	Date-Modified = {2020-01-04 21:40:58 -0700},
	Journal = {Bull. Amer. Meteor. Soc.},
	Keywords = {papers, containers, nwp, learning},
	Pages = {1129--1138},
	Title = {A Containerized Mesoscale Model and Analysis Toolkit to Accelerate Classroom Learning, Collaborative Research, and Uncertainty Quantification},
	Volume = {98},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSC9oYWNrZXItYmFtczE3LnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFoYWNrZXItYmFtczE3LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABSAAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpIOmhhY2tlci1iYW1zMTcucGRmAAAOACQAEQBoAGEAYwBrAGUAcgAtAGIAYQBtAHMAMQA3AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9IL2hhY2tlci1iYW1zMTcucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@inproceedings{jimenez:cnert17,
	Abstract = {This paper introduces PopperCI, a continous integration (CI) service hosted at UC Santa Cruz that allows researchers to automate the end-to-end execution and validation of experiments. PopperCI assumes that experiments follow Popper, a convention for implementing experiments and writing articles following a DevOps approach that has been proposed recently. PopperCI runs experiments on public, private or government-fundend cloud infrastructures in a fully automated way. We describe how PopperCI executes experiments and present a use case that illustrates the usefulness of the service.},
	Address = {Atlanta, GA},
	Author = {Ivo Jimenez and Andrea Arpaci-Dusseau and Remzi Arpaci-Dusseau and Jay Lofstead and Carlos Maltzahn and Kathryn Mohror and Robert Ricci},
	Booktitle = {Workshop on Computer and Networking Experimental Research Using Testbeds (CNERT'17) in conjunction with IEEE INFOCOM 2017},
	Date-Added = {2017-07-31 03:37:33 +0000},
	Date-Modified = {2020-01-04 21:41:20 -0700},
	Keywords = {papers, reproducibility, devops},
	Month = {May 1},
	Title = {PopperCI: Automated Reproducibility Validation},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotY25lcnQxNy5wZGZPEQFyAAAAAAFyAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8TamltZW5lei1jbmVydDE3LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA0ktSgAAAgA9LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpJLUo6amltZW5lei1jbmVydDE3LnBkZgAADgAoABMAagBpAG0AZQBuAGUAegAtAGMAbgBlAHIAdAAxADcALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACgvTXkgRHJpdmUvUGFwZXJzL0ktSi9qaW1lbmV6LWNuZXJ0MTcucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHEAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5w==}}

@inproceedings{jimenez:reppar17,
	Abstract = {Independent validation of experimental results in the field of systems research is a challenging task, mainly due to differences in software and hardware in computational environments. Recreating an environment that resembles the original is difficult and time-consuming. In this paper we introduce Popper, a convention based on a set of modern open source software (OSS) development principles for generating reproducible scientific publications. Concretely, we make the case for treating an article as an OSS project following a DevOps approach and applying software engineering best-practices to manage its associated artifacts and maintain the reproducibility of its findings. Popper leverages existing cloud-computing infrastructure and DevOps tools to produce academic articles that are easy to validate and extend. We present a use case that illustrates the usefulness of this approach. We show how, by following the Popper convention, reviewers and researchers can quickly get to the point of getting results without relying on the original author's intervention.
},
	Address = {Orlando, FL},
	Author = {Ivo Jimenez and Michael Sevilla and Noah Watkins and Carlos Maltzahn and Jay Lofstead and Kathryn Mohror and Andrea Arpac-Dusseau and Remzi Arpaci-Dusseau},
	Booktitle = {4th International Workshop on Reproducibility in Parallel Computing (REPPAR) in conjunction with IPDPS 2017},
	Date-Added = {2017-07-31 03:27:58 +0000},
	Date-Modified = {2020-01-04 21:41:54 -0700},
	Keywords = {papers, reproducibility, devops},
	Month = {June 2},
	Title = {The Popper Convention: Making Reproducible Systems Evaluation Practical},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotcmVwcGFyMTcucGRmTxEBdgAAAAABdgACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////FGppbWVuZXotcmVwcGFyMTcucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAANJLUoAAAIAPi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6SS1KOmppbWVuZXotcmVwcGFyMTcucGRmAA4AKgAUAGoAaQBtAGUAbgBlAHoALQByAGUAcABwAGEAcgAxADcALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACkvTXkgRHJpdmUvUGFwZXJzL0ktSi9qaW1lbmV6LXJlcHBhcjE3LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHs}}

@inproceedings{watkins:hotstorage17,
	Abstract = {Popular storage systems support diverse storage abstractions by providing important disaggregation benefits. Instead of maintaining a separate system for each abstraction, unified storage systems, in particular, support standard file, block, and object abstractions so the same hardware can be used for a wider range and a more flexible mix of applications. As large-scale unified storage systems continue to evolve to meet the requirements of an increasingly diverse set of applications and next-generation hardware, de jure approaches of the past---based on standardized interfaces---are giving way to domain-specific interfaces and optimizations. While promising, the ad-hoc strategies characteristic of current approaches to co-design are untenable.
The standardization of the POSIX I/O interface has been a major success. General adoption has allowed application developers to avoid vendor lock-in and encourages storage system designers to innovate independently. However, large-scale storage systems are generally dominated by proprietary offerings, preventing exploration of alternative interfaces when the need has presented itself. An increase in the number of special-purpose storage systems characterizes recent history in the field, including the emergence of high-performance, and highly modifiable, open-source storage systems, which enable system changes without fear of vendor lock-in. Unfortunately, evolving storage system interfaces is a challenging task requiring domain expertise, and is predicated on the willingness of programmers to forfeit the protection from change afforded by narrow interfaces.},
	Address = {Santa Clara, CA},
	Author = {Noah Watkins and Michael A. Sevilla and Ivo Jimenez and Kathryn Dahlgren and Peter Alvaro and Shel Finkelstein and Carlos Maltzahn},
	Booktitle = {HotStorage '17},
	Date-Added = {2017-05-20 22:54:48 +0000},
	Date-Modified = {2020-01-19 15:33:14 -0800},
	Keywords = {papers, storage, systems, declarative, distributed},
	Month = {July 10-11},
	Title = {DeclStore: Layering is for the Faint of Heart},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBNLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLWhvdHN0b3JhZ2UxNy5wZGZPEQGAAAAAAAGAAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Yd2F0a2lucy1ob3RzdG9yYWdlMTcucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVcAAAIAQC86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Vzp3YXRraW5zLWhvdHN0b3JhZ2UxNy5wZGYADgAyABgAdwBhAHQAawBpAG4AcwAtAGgAbwB0AHMAdABvAHIAYQBnAGUAMQA3AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgArL015IERyaXZlL1BhcGVycy9XL3dhdGtpbnMtaG90c3RvcmFnZTE3LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAdAAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAH4},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBULi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLWhvdHN0b3JhZ2UxNy1zbGlkZXMucGRmTxEBnAAAAAABnAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////H3dhdGtpbnMtaG90c3RvcmFnZTE3LXNsaWRlcy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFXAAACAEcvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlc6d2F0a2lucy1ob3RzdG9yYWdlMTctc2xpZGVzLnBkZgAADgBAAB8AdwBhAHQAawBpAG4AcwAtAGgAbwB0AHMAdABvAHIAYQBnAGUAMQA3AC0AcwBsAGkAZABlAHMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASADIvTXkgRHJpdmUvUGFwZXJzL1cvd2F0a2lucy1ob3RzdG9yYWdlMTctc2xpZGVzLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB7AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAhs=}}

@inproceedings{sevilla:eurosys17,
	Abstract = {Storage systems need to support high-performance for special-purpose data processing applications that run on an evolving storage device technology landscape. This puts tremendous pressure on storage systems to support rapid change both in terms of their interfaces and their performance. But adapting storage systems can be difficult because unprincipled changes might jeopardize years of code-hardening and performance optimization efforts that were necessary for users to entrust their data to the storage system. We introduce the programmable storage approach, which exposes internal services and abstractions of the storage stack as building blocks for higher-level services. We also build a prototype to explore how existing abstractions of common storage system services can be leveraged to adapt to the needs of new data processing systems and the increasing variety of storage devices. We illustrate the advantages and challenges of this approach by composing existing internal abstractions into two new higher-level services: a file system metadata load balancer and a high-performance distributed shared-log. The evaluation demonstrates that our services inherit desirable qualities of the back-end storage system, including the ability to balance load, efficiently propagate service metadata, recover from failure, and navigate trade-offs between latency and throughput using leases.},
	Address = {Belgrade, Serbia},
	Author = {Michael A. Sevilla and Noah Watkins and Ivo Jimenez and Peter Alvaro and Shel Finkelstein and Jeff LeFevre and Carlos Maltzahn},
	Booktitle = {EuroSys '17},
	Date-Added = {2017-03-14 22:06:29 +0000},
	Date-Modified = {2020-01-04 21:42:47 -0700},
	Keywords = {papers, storage, systems, programmable, abstraction},
	Month = {April 23-26},
	Title = {Malacology: A Programmable Storage System},
	Year = {2017},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLWV1cm9zeXMxNy5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Vc2V2aWxsYS1ldXJvc3lzMTcucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVMAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6UzpzZXZpbGxhLWV1cm9zeXMxNy5wZGYAAA4ALAAVAHMAZQB2AGkAbABsAGEALQBlAHUAcgBvAHMAeQBzADEANwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLWV1cm9zeXMxNy5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBRLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLWV1cm9zeXMxNy1zbGlkZXMucGRmTxEBkAAAAAABkAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////HHNldmlsbGEtZXVyb3N5czE3LXNsaWRlcy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFTAAACAEQvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlM6c2V2aWxsYS1ldXJvc3lzMTctc2xpZGVzLnBkZgAOADoAHABzAGUAdgBpAGwAbABhAC0AZQB1AHIAbwBzAHkAcwAxADcALQBzAGwAaQBkAGUAcwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIALy9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLWV1cm9zeXMxNy1zbGlkZXMucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB4AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAgw=}}

@inproceedings{shewmaker:icccn16,
	Abstract = {No one likes waiting in traffic, whether on a road or on a computer network. Stuttering audio, slow interactive feedback, and untimely pauses in video annoy everyone and cost businesses sales and productivity. An ideal network should (1) minimize latency, (2) maximize bandwidth, (3) share resources according to a desired policy, (4) enable incremental deployment, and (5) minimize administrative overhead. Many technologies have been developed, but none yet satisfactorily address all five goals. The best performing solutions developed so far require controlled environments where coordinated modification of multiple components in the network is possible, but they suffer poor performance in more complex scenarios.
We present TCP Inigo, which uses independent delay-based algorithms on the sender and receiver (i.e. ambidextrously) to satisfy all five goals. In networks with single administrative domains, like those in data centers, Inigo's fairness, bandwidth, and latency indices are up to 1.3x better than the best deployable solution. When deployed in a more complex environment, such as across administrative domains, Inigo possesses latency distribution tail up to 42x better.},
	Address = {Waikoloa, HI},
	Author = {Andrew G. Shewmaker and Carlos Maltzahn and Katia Obraczka and Scott Brandt and John Bent},
	Booktitle = {25th International Conference on Computer Communications and Networks (ICCCN 2016)},
	Date-Added = {2017-02-26 19:02:21 +0000},
	Date-Modified = {2020-01-04 22:58:02 -0700},
	Keywords = {papers, networking, congestion, datacenter},
	Month = {August 1-4},
	Title = {TCP Inigo: Ambidextrous Congestion Control},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zaGV3bWFrZXItaWNjY24xNi5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Vc2hld21ha2VyLWljY2NuMTYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVMAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6UzpzaGV3bWFrZXItaWNjY24xNi5wZGYAAA4ALAAVAHMAaABlAHcAbQBhAGsAZQByAC0AaQBjAGMAYwBuADEANgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvUy9zaGV3bWFrZXItaWNjY24xNi5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBRLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zaGV3bWFrZXItaWNjY24xNi1zbGlkZXMucGRmTxEBkAAAAAABkAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////HHNoZXdtYWtlci1pY2NjbjE2LXNsaWRlcy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFTAAACAEQvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlM6c2hld21ha2VyLWljY2NuMTYtc2xpZGVzLnBkZgAOADoAHABzAGgAZQB3AG0AYQBrAGUAcgAtAGkAYwBjAGMAbgAxADYALQBzAGwAaQBkAGUAcwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIALy9NeSBEcml2ZS9QYXBlcnMvUy9zaGV3bWFrZXItaWNjY24xNi1zbGlkZXMucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB4AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAgw=}}

@article{jimenez:login16,
	Abstract = {Independently validating experimental results in the field of computer systems research is a challenging task. Recreating an environment that resembles the one where an experiment was originally executed is a time-consuming endeavor. In this article, we present Popper, a convention (or protocol) for conducting experiments following a DevOps approach that allows researchers to make all associated artifacts publicly available with the goal of maximizing automation in the re-execution of an experiment and validation of its results.},
	Author = {Ivo Jimenez and Michael Sevilla and Noah Watkins and Carlos Maltzahn and Jay Lofstead and Kathryn Mohror and Remzi Arpaci-Dusseau and Andrea Arpaci-Dusseau},
	Date-Added = {2017-01-17 23:58:32 +0000},
	Date-Modified = {2020-01-04 21:44:35 -0700},
	Journal = {USENIX ;login:},
	Keywords = {papers, reproducibility, devops, versioning},
	Number = {4},
	Pages = {20--26},
	Title = {Standing on the Shoulders of Giants by Managing Scientific Experiments Like Software},
	Volume = {41},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotbG9naW4xNi5wZGZPEQFyAAAAAAFyAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8TamltZW5lei1sb2dpbjE2LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA0ktSgAAAgA9LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpJLUo6amltZW5lei1sb2dpbjE2LnBkZgAADgAoABMAagBpAG0AZQBuAGUAegAtAGwAbwBnAGkAbgAxADYALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACgvTXkgRHJpdmUvUGFwZXJzL0ktSi9qaW1lbmV6LWxvZ2luMTYucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHEAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5w==}}

@article{klasky:jp16,
	Abstract = {As the exascale computing age emerges, data related issues are becoming critical factors that determine how and where we do computing. Popular approaches used by traditional I/O solution and storage libraries become increasingly bottlenecked due to their assumptions about data movement, re-organization, and storage. While, new technologies, such as ``burst buffers'', can help address some of the short-term performance issues, it is essential that we reexamine the underlying storage and I/O infrastructure to effectively support requirements and challenges at exascale and beyond. In this paper we present a new approach to the exascale Storage System and I/O (SSIO), which is based on allowing users to inject application knowledge into the system and leverage this knowledge to better manage, store, and access large data volumes so as to minimize the time to scientific insights. Central to our approach is the distinction between the data, metadata, and the knowledge contained therein, transferred from the user to the system by describing ``utility'' of data as it ages.},
	Author = {Scott A. Klasky and Hasan Abbasi and Mark Ainsworth and J. Choi and Matthew Curry and T. Kurc and Qing Liu and Jay Lofstead and Carlos Maltzahn and Manish Parashar and Norbert Podhorszki and Eric Suchyta and Fang Wang and Matthew Wolf and C. S. Chang and M. Churchill and S. Ethier},
	Date-Added = {2017-01-14 20:46:38 +0000},
	Date-Modified = {2020-01-04 21:45:50 -0700},
	Journal = {J. Phys.: Conf. Ser.},
	Keywords = {papers, storage, exascale, systems, hpc},
	Month = {November 11},
	Number = {1},
	Pages = {012095},
	Title = {Exascale Storage Systems the SIRIUS Way},
	Volume = {759},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBELi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSy9rbGFza3ktanAxNi5wZGZPEQFcAAAAAAFcAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Pa2xhc2t5LWpwMTYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUsAAAIANy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6SzprbGFza3ktanAxNi5wZGYAAA4AIAAPAGsAbABhAHMAawB5AC0AagBwADEANgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIi9NeSBEcml2ZS9QYXBlcnMvSy9rbGFza3ktanAxNi5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAawAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHL}}

@inproceedings{watkins:socc16-poster,
	Address = {Santa Clara, CA},
	Author = {Noah Watkins and Michael Sevilla and Ivo Jimenez and Neha Ohja and Peter Alvaro and Carlos Maltzahn},
	Booktitle = {SoCC'16},
	Date-Added = {2016-12-21 23:16:32 +0000},
	Date-Modified = {2020-01-04 21:46:57 -0700},
	Keywords = {shortpapers, declarative, storage, programmable},
	Month = {October 5-7},
	Title = {Brados: Declarative,Programmable Object Storage},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBOLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLXNvY2MxNi1wb3N0ZXIucGRmTxEBhAAAAAABhAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////GXdhdGtpbnMtc29jYzE2LXBvc3Rlci5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFXAAACAEEvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlc6d2F0a2lucy1zb2NjMTYtcG9zdGVyLnBkZgAADgA0ABkAdwBhAHQAawBpAG4AcwAtAHMAbwBjAGMAMQA2AC0AcABvAHMAdABlAHIALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACwvTXkgRHJpdmUvUGFwZXJzL1cvd2F0a2lucy1zb2NjMTYtcG9zdGVyLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB1AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAf0=}}

@inproceedings{brummell:pmes16,
	Abstract = {To raise performance beyond Moore's law scaling, Approximate Computing reduces arithmetic quality to increase operations per second or per joule. It works on only a few applications. The quality-speed tradeoff seems inescapable; however, Unum Arithmetic simultaneously raises arithmetic quality yet reduces the number of bits required. Unums extend IEEE floats (type 1) or provide custom number systems to maximize information per bit (type 2). Unums achieve Approximate Computing cost savings without sacrificing answer quality.},
	Author = {Nic Brummell and John L. Gustafson and Andrew Klofas and Carlos Maltzahn and Andrew Shewmaker},
	Booktitle = {PMES 2016},
	Date-Added = {2016-10-21 17:31:51 +0000},
	Date-Modified = {2020-01-04 21:47:19 -0700},
	Keywords = {papers, math, computation},
	Month = {November 14},
	Title = {Unum Arithmetic: Better Math with Clearer Tradeoffs},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9icnVtbWVsbC1wbWVzMTYucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E2JydW1tZWxsLXBtZXMxNi5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFCAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkI6YnJ1bW1lbGwtcG1lczE2LnBkZgAADgAoABMAYgByAHUAbQBtAGUAbABsAC0AcABtAGUAcwAxADYALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL0IvYnJ1bW1lbGwtcG1lczE2LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@inproceedings{hacker:wrfws16,
	Address = {Boulder, CO},
	Author = {Josh Hacker and John Exby and David Gill and Ivo Jimenez and Carlos Maltzahn and Tim See and Gretchen Mullendore},
	Booktitle = {17th annual WRF Users Workshop},
	Date-Added = {2016-10-19 08:18:01 +0000},
	Date-Modified = {2016-10-19 08:22:45 +0000},
	Month = {June 27 - July 2},
	Title = {Collaborative WRF-based research and education with reproducible numerical weather prediction enabled by software containers},
	Year = {2016},
	Bdsk-Url-1 = {http://www2.mmm.ucar.edu/wrf/users/workshops/WS2016/oral_presentations/4.3.pdf}}

@inproceedings{hacker:ams16,
	Author = {Josh Hacker and John Exby and Nick Chartier and David Gill and Ivo Jimenez and Carlos Maltzahn and Gretchen Mullendore},
	Booktitle = {American Meteorological Society 32nd Conference on Environmental Processing Technologies},
	Date-Added = {2016-10-19 08:14:20 +0000},
	Date-Modified = {2019-12-26 16:07:15 -0800},
	Keywords = {papers, reproducibility, containers},
	Month = {January},
	Title = {Collaborative Research and Education with Numerical Weather Prediction Enabled by Software Containers},
	Year = {2016},
	Bdsk-Url-1 = {https://drive.google.com/file/d/0B5rZ7hI6vXv3NXNRSWFnR2QwX2s/view}}

@inproceedings{watkins:pdsw15,
	Abstract = {Traditionally storage has not been part of a programming model's semantics and is added only as an I/O library interface. As a result, programming models, languages, and storage systems are limited in the optimizations they can perform for I/O operations, as the semantics of the I/O library is typically at the level of transfers of blocks of uninterpreted bits, with no accompanying knowledge of how those bits are used by the application. For many HPC applications where I/O operations for analyzing and checkpointing large data sets are a non-negligible portion of the overall execution time, such a ``know nothing'' I/O design has negative performance implications.
We propose an alternative design where the I/O semantics are integrated as part of the programming model, and a common data model is used throughout the entire memory and storage hierarchy enabling storage and application level co-optimizations. We demonstrate these ideas through the integration of storage services within the Legion [2] runtime and present preliminary results demonstrating the integration.},
	Address = {Austin, TX},
	Author = {Noah Watkins and Zhihao Jia and Galen Shipman and Carlos Maltzahn and Alex Aiken and Pat McCormick},
	Booktitle = {PDSW'15},
	Date-Added = {2016-08-31 06:03:13 +0000},
	Date-Modified = {2020-01-04 21:48:24 -0700},
	Keywords = {papers, storage, systems, optimization, parallel, distributed, runtime},
	Month = {November 16},
	Title = {Automatic and transparent I/O optimization with storage integrated application runtime support},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLXBkc3cxNS5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Sd2F0a2lucy1wZHN3MTUucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVcAAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Vzp3YXRraW5zLXBkc3cxNS5wZGYADgAmABIAdwBhAHQAawBpAG4AcwAtAHAAZABzAHcAMQA1AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9XL3dhdGtpbnMtcGRzdzE1LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@techreport{watkins:ucsctr16,
	Abstract = {As applications scale to new levels and migrate into cloud environments, there has been a significant departure from the exclusive reliance on the POSIX file I/O interface. However in doing so, application often discover a lack of services, forcing them to use bolt-on features or take on the responsibility of critical data management tasks. This often results in duplication of complex software with extreme correctness requirements. Instead, wouldn't it be nice if an application could just convey what it wanted out of a storage system, and have the storage system understand?
The central question we address in this paper is whether or not the design delta between two storage systems can be expressed in a form such that one system becomes little more than a configuration of the other. Storage systems should expose their useful services in a way that separates performance from correctness, allowing for their safe reuse. After all, hardened code in storage systems protects countless value, and its correctness is only as good as the stress we place on it. We demonstrate these concepts by synthesizing the CORFU high-performance shared-log abstraction in Ceph through minor modifications of existing sub-systems that are orthogonal to correctness.},
	Address = {Santa Cruz, CA},
	Author = {Noah Watkins and Michael Sevilla and Carlos Maltzahn},
	Date-Added = {2016-08-26 18:45:34 +0000},
	Date-Modified = {2020-01-04 21:48:55 -0700},
	Institution = {UC Santa Cruz},
	Keywords = {papers, programmable, storage, systems},
	Month = {June 11},
	Number = {UCSC-SOE-15-12},
	Title = {The Case for Programmable Object Storage Systems},
	Type = {Tech. rept.},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLXVjc2N0cjE2LnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xR3YXRraW5zLXVjc2N0cjE2LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABVwAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpXOndhdGtpbnMtdWNzY3RyMTYucGRmAA4AKgAUAHcAYQB0AGsAaQBuAHMALQB1AGMAcwBjAHQAcgAxADYALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL1cvd2F0a2lucy11Y3NjdHIxNi5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@unpublished{maltzahn:si2ws-poster16,
	Author = {Carlos Maltzahn and others},
	Date-Added = {2016-08-18 06:04:41 +0000},
	Date-Modified = {2020-01-04 21:49:20 -0700},
	Keywords = {shortpapers, overview, bigdata, reproducibility},
	Month = {February 16},
	Note = {Poster at SI2 Workshop},
	Title = {Big Weather Web: A common and sustainable big data infrastructure in support of weather prediction research and education in universities},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBQLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1zaTJ3cy1wb3N0ZXIxNi5wZGZPEQGMAAAAAAGMAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8bbWFsdHphaG4tc2kyd3MtcG9zdGVyMTYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAU0AAAIAQy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6TTptYWx0emFobi1zaTJ3cy1wb3N0ZXIxNi5wZGYAAA4AOAAbAG0AYQBsAHQAegBhAGgAbgAtAHMAaQAyAHcAcwAtAHAAbwBzAHQAZQByADEANgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIALi9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1zaTJ3cy1wb3N0ZXIxNi5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAdwAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAIH}}

@techreport{jimenez:ucsctr16,
	Abstract = {Independent validation of experimental results in the field of parallel and distributed systems research is a challenging task, mainly due to changes and differences in software and hardware in computational environments. Recreating an environment that resembles the original systems research is difficult and time-consuming. In this paper we introduce the Popper Convention, a set of principles for producing scientific publications. Concretely, we make the case for treating an article as an open source software (OSS) project, applying software engineering best-practices to manage its associated artifacts and maintain the reproducibility of its findings. Leveraging existing cloud-computing infrastructure and modern OSS development tools to produce academic articles that are easy to validate. We present our prototype file system, GassyFS, as a use case for illustrating the usefulness of this approach. We show how, by following Popper, re-executing experiments on multiple platforms is more practical, allowing reviewers and students to quickly get to the point of getting results without relying on the author's intervention.},
	Address = {Santa Cruz, CA},
	Author = {Ivo Jimenez and Michael Sevilla and Noah Watkins and Carlos Maltzahn},
	Date-Added = {2016-08-18 05:58:51 +0000},
	Date-Modified = {2020-01-04 21:49:52 -0700},
	Institution = {UC Santa Cruz},
	Keywords = {papers, reproducibility, systems, evaluation},
	Month = {May 19},
	Number = {UCSC-SOE-16-10},
	Title = {Popper: Making Reproducible Systems Performance Evaluation Practical},
	Type = {Tech. rept.},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotdWNzY3RyMTYucGRmTxEBdgAAAAABdgACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////FGppbWVuZXotdWNzY3RyMTYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAANJLUoAAAIAPi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6SS1KOmppbWVuZXotdWNzY3RyMTYucGRmAA4AKgAUAGoAaQBtAGUAbgBlAHoALQB1AGMAcwBjAHQAcgAxADYALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACkvTXkgRHJpdmUvUGFwZXJzL0ktSi9qaW1lbmV6LXVjc2N0cjE2LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHs}}

@inproceedings{jimenez:varsys16,
	Abstract = {Independent validation of experimental results in the field of parallel and distributed systems research is a challenging task, mainly due to changes and differences in software and hardware in computational environments. In particular, when an experiment runs on different hardware than the one where it originally executed, predicting the differences in results is difficult. In this paper, we introduce an architecture-independent method for characterizing the performance of a machine by obtaining a profile (a vector of microbenchark results) that we use to quantify the variability between two hardware platforms. We propose the use of isolation features that OS-level virtualization offers to reduce the variability observed when validating application performance across multiple machines. Our results show that, using our variability characterization methodology, we can correctly predict the variability bounds of CPU-intensive applications, as well as reduce it by up to 2.8x if we make use of CPU bandwidth limitations, depending on the opcode mix of an application, as well as generational and architectural differences between two hardware platforms.},
	Address = {Chicago, IL},
	Author = {Ivo Jimenez and Carlos Maltzahn and Jay Lofstead and Adam Moody and Kathryn Mohror and Remzi Arpaci-Dusseau and Andrea Arpaci-Dusseau},
	Booktitle = {VarSys'16},
	Date-Added = {2016-05-19 13:24:07 +0000},
	Date-Modified = {2020-01-04 21:50:21 -0700},
	Keywords = {papers, reproducibility,},
	Month = {May 23},
	Title = {Characterizing and Reducing Cross-Platform Performance Variability Using OS-level Virtualization},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotdmFyc3lzMTYucGRmTxEBdgAAAAABdgACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////FGppbWVuZXotdmFyc3lzMTYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAANJLUoAAAIAPi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6SS1KOmppbWVuZXotdmFyc3lzMTYucGRmAA4AKgAUAGoAaQBtAGUAbgBlAHoALQB2AGEAcgBzAHkAcwAxADYALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACkvTXkgRHJpdmUvUGFwZXJzL0ktSi9qaW1lbmV6LXZhcnN5czE2LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHs}}

@inproceedings{manzanares:hotstorage16,
	Address = {Denver, CO},
	Author = {Manzanares and Noah Watkins and Cyril Guyot and Damien LeMoal and Carlos Maltzahn and Zvonimir Bandic},
	Booktitle = {HotStorage '16},
	Date-Added = {2016-05-17 21:34:02 +0000},
	Date-Modified = {2016-05-17 21:36:35 +0000},
	Keywords = {papers, storagemedium, shingledrecording, os, allocation},
	Month = {June 20-21},
	Title = {ZEA, A Data Management Approach for SMR},
	Year = {2016},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBQLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYW56YW5hcmVzLWhvdHN0b3JhZ2UxNi5wZGZPEQGMAAAAAAGMAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8bbWFuemFuYXJlcy1ob3RzdG9yYWdlMTYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAU0AAAIAQy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6TTptYW56YW5hcmVzLWhvdHN0b3JhZ2UxNi5wZGYAAA4AOAAbAG0AYQBuAHoAYQBuAGEAcgBlAHMALQBoAG8AdABzAHQAbwByAGEAZwBlADEANgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIALi9NeSBEcml2ZS9QYXBlcnMvTS9tYW56YW5hcmVzLWhvdHN0b3JhZ2UxNi5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAdwAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAIH}}

@inproceedings{sevilla:sc15,
	Abstract = {Migrating resources is a useful tool for balancing load in a distributed system, but it is difficult to determine when to move resources, where to move resources, and how much of them to move. We look at resource migration for file system metadata and show how CephFS's dynamic subtree partitioning approach can exploit varying degrees of locality and balance because it can partition the namespace into variable sized units. Unfortunately, the current metadata balancer is complicated and difficult to control because it struggles to address many of the general resource migration challenges inherent to the metadata management problem. To help decouple policy from mechanism, we introduce a programmable storage system that lets the designer inject custom balancing logic. We show the flexibility and transparency of this approach by replicating the strategy of a state-of-the-art metadata balancer and conclude by comparing this strategy to other custom balancers on the same system.},
	Address = {Austin, TX},
	Author = {Michael Sevilla and Noah Watkins and Carlos Maltzahn and Ike Nassi and Scott Brandt and Sage Weil and Greg Farnum and Sam Fineberg},
	Booktitle = {SC '15},
	Date-Added = {2015-07-11 20:49:14 +0000},
	Date-Modified = {2020-01-04 21:51:04 -0700},
	Keywords = {papers, metadata, management, loadbalancing, programmable, distributed, systems},
	Month = {November},
	Title = {Mantle: A Programmable Metadata Load Balancer for the Ceph File System},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBFLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLXNjMTUucGRmTxEBYAAAAAABYAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EHNldmlsbGEtc2MxNS5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFTAAACADgvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlM6c2V2aWxsYS1zYzE1LnBkZgAOACIAEABzAGUAdgBpAGwAbABhAC0AcwBjADEANQAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIy9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLXNjMTUucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABsAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAdA=}}

@techreport{watkins:ucsctr15,
	Abstract = {As applications scale to new levels and migrate into cloud environments, there has been a significant departure from the exclusive reliance on the POSIX file I/O interface. However in doing so, application often discover a lack of services, forcing them to use bolt-on features or take on the respon- sibility of critical data management tasks. This often results in duplication of complex software with extreme correctness requirements. Instead, wouldn't it be nice if an application could just convey what it wanted out of a storage system, and have the storage system understand?
The central question we address in this paper is whether or not the design delta between two storage systems can be expressed in a form such that one system becomes lit- tle more than a configuration of the other. Storage systems should expose their useful services in a way that separates performance from correctness, allowing for their safe reuse. After all, hardened code in storage systems protects count- less value, and its correctness is only as good as the stress we place on it. We demonstrate these concepts by synthesiz- ing the CORFU high-performance shared-log abstraction in Ceph through minor modifications of existing sub-systems that are orthogonal to correctness.},
	Author = {Noah Watkins and Michael Sevilla and Carlos Maltzahn},
	Date-Added = {2015-06-11 07:31:24 +0000},
	Date-Modified = {2020-01-04 21:51:36 -0700},
	Institution = {UC Santa Cruz},
	Keywords = {papers, programmable, storage, systems},
	Month = {June 11},
	Number = {UCSC-SOE-15-12},
	Title = {The Case for Programmable Object Storage Systems},
	Type = {Tech. rept.},
	Year = {2015},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLXVjc2N0cjE1LnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xR3YXRraW5zLXVjc2N0cjE1LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABVwAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpXOndhdGtpbnMtdWNzY3RyMTUucGRmAA4AKgAUAHcAYQB0AGsAaQBuAHMALQB1AGMAcwBjAHQAcgAxADUALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL1cvd2F0a2lucy11Y3NjdHIxNS5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@inproceedings{skourtis:inflow14,
	Abstract = {We want to create a scalable flash storage system that provides read/write separation and uses erasure coding to provide reliability without the storage cost of replication. Flash on Rails [19] is a system for enabling consistent performance in flash storage by physically separating reads from writes through redundancy. In principle, Rails supports erasure codes. However, it has only been evaluated using replication in small arrays, so it is currently uncertain how it would scale with erasure coding.
In this work we consider the applicability of erasure coding in Rails, in a new system called eRails. We consider the effects of computation due to encoding/decoding on the raw performance, as well as its effect on performance consistency. We demonstrate that up to a certain number of drives the performance remains unaffected while the computation cost remains modest. After that point, the computational cost grows quickly due to coding itself making further scaling inefficient. To support an arbitrary number of drives we present a design allowing us to scale eRails by constructing overlapping erasure coding groups that preserve read/write separation. Finally, through benchmarks we demonstrate that eRails achieves read/write separation and consistent read performance under read/write workloads.
},
	Address = {Broomfield, CO},
	Author = {Dimitris Skourtis and Dimitris Achlioptas and Noah Watkins and Carlos Maltzahn and Scott Brandt},
	Booktitle = {INFLOW '14 (at OSDI'14)},
	Date-Added = {2014-12-06 21:50:01 +0000},
	Date-Modified = {2020-01-04 21:52:42 -0700},
	Keywords = {papers, erasurecodes, performance, flash, garbagecollection, predictable},
	Month = {October 5},
	Title = {Erasure Coding \& Read/Write Separation in Flash Storage},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy1pbmZsb3cxNC5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Vc2tvdXJ0aXMtaW5mbG93MTQucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVMAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Uzpza291cnRpcy1pbmZsb3cxNC5wZGYAAA4ALAAVAHMAawBvAHUAcgB0AGkAcwAtAGkAbgBmAGwAbwB3ADEANAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy1pbmZsb3cxNC5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp}}

@techreport{shewmaker:ucsctr14,
	Abstract = {The RUN (Reduction to UNiprocessor) [18, 19, 13] algorithm was first described by Regnier, et al. as a novel and elegant solution to real-time multiprocessor scheduling. The first practical implementation of RUN [3] created by Compagnin, et. al., both verified the simulation results and showed that it can be efficiently implemented on top of standard operating system primitives. While RUN is now the proven best solution for scheduling fixed rate tasks on multiprocessors, it can also be applied to other resources. This technical report briefly describes RUN and how it could be used in any situation involving an array of multiple resources where some form of preemptions and migrations are allowed (although must be minimized). It also describes how buffers can be sanity checked in a system where a RUN-scheduled resource is consuming data from another RUN-scheduled resource.
},
	Address = {Santa Cruz, CA},
	Author = {Andrew Shewmaker and Carlos Maltzahn and Katia Obraczka and Scott Brandt},
	Date-Added = {2014-09-06 04:13:59 +0000},
	Date-Modified = {2020-01-04 21:53:19 -0700},
	Institution = {University of California at Santa Cruz},
	Keywords = {papers, scheduling, networking, realtime, performance, management},
	Month = {July 23},
	Number = {UCSC-SOE-14-08},
	Title = {Run, Fatboy, Run: Applying the Reduction to Uniprocessor Algorithm to Other Wide Resources},
	Type = {Tech. rept.},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zaGV3bWFrZXItdWNzY3RyMTQucGRmTxEBeAAAAAABeAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////FnNoZXdtYWtlci11Y3NjdHIxNC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFTAAACAD4vOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlM6c2hld21ha2VyLXVjc2N0cjE0LnBkZgAOAC4AFgBzAGgAZQB3AG0AYQBrAGUAcgAtAHUAYwBzAGMAdAByADEANAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKS9NeSBEcml2ZS9QYXBlcnMvUy9zaGV3bWFrZXItdWNzY3RyMTQucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAByAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAe4=}}

@inproceedings{sevilla:lspp14,
	Abstract = {Reading input from primary storage (i.e. the ingest phase) and aggregating results (i.e. the merge phase) are important pre- and post-processing steps in large batch computations. Unfortunately, today's data sets are so large that the ingest and merge job phases are now performance bottlenecks. In this paper, we mitigate the ingest and merge bottlenecks by leveraging the scale-up MapReduce model. We introduce an ingest chunk pipeline and a merge optimization that increases CPU utilization (50 - 100\%) and job phase speedups (1.16x - 3.13x) for the ingest and merge phases. Our techniques are based on well-known algorithms and scale-out MapReduce optimizations, but applying them to a scale-up computation framework to mitigate the ingest and merge bottlenecks is novel.},
	Address = {Phoenix, AZ},
	Author = {Michael Sevilla and Ike Nassi and Kleoni Ioannidou and Scott Brandt and Carlos Maltzahn},
	Booktitle = {LSPP at IPDPS 2014},
	Date-Added = {2014-07-11 20:56:28 +0000},
	Date-Modified = {2020-01-04 21:54:00 -0700},
	Keywords = {papers, mapreduce, sharedmemory, performance},
	Month = {May 23},
	Title = {SupMR: Circumventing Disk and Memory Bandwidth Bottlenecks for Scale-up MapReduce},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLWxzcHAxNC5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Sc2V2aWxsYS1sc3BwMTQucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVMAAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6UzpzZXZpbGxhLWxzcHAxNC5wZGYADgAmABIAcwBlAHYAaQBsAGwAYQAtAGwAcwBwAHAAMQA0AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9TL3NldmlsbGEtbHNwcDE0LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@inproceedings{sevilla:discs13,
	Abstract = {When data grows too large, we scale to larger systems, either by scaling out or up. It is understood that scale-out and scale-up have different complexities and bottlenecks but a thorough comparison of the two architectures is challenging because of the diversity of their programming interfaces, their significantly different system environments, and their sensitivity to workload specifics. In this paper, we propose a novel comparison framework based on MapReduce that accounts for the application, its requirements, and its input size by considering input, software, and hardware parameters. Part of this framework requires implementing scale-out properties on scale-up and we discuss the complex trade-offs, interactions, and dependencies of these properties for two specific case studies (word count and sort). This work lays the foundation for future work in quantifying design decisions and in building a system that automatically compares architectures and selects the best one.},
	Address = {Denver, CO},
	Author = {Micheal Sevilla and Ike Nassi and Kleoni Ioannidou and Scott Brandt and Carlos Maltzahn},
	Booktitle = {DISCS 2013 at SC13},
	Date-Added = {2014-07-11 20:53:58 +0000},
	Date-Modified = {2020-01-04 21:55:43 -0700},
	Keywords = {papers, scalable, systems, distributed, sharedmemory},
	Month = {November 18},
	Title = {A Framework for an In-depth Comparison of Scale-up and Scale-out},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9zZXZpbGxhLWRpc2NzMTMucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E3NldmlsbGEtZGlzY3MxMy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFTAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlM6c2V2aWxsYS1kaXNjczEzLnBkZgAADgAoABMAcwBlAHYAaQBsAGwAYQAtAGQAaQBzAGMAcwAxADMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL1Mvc2V2aWxsYS1kaXNjczEzLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@article{rose:sej91,
	Abstract = {In the context of the ESPRIT project DAIDA, we have developed an experimental environment intended to achieve consistency-in-the-large in a multi-person setting. Our conceptual model of configuration processes, the CAD$\,^{\circ}$ model, centres around decisions that work on configured objects and are subject to structured conversations. The environment, extending the knowledge-based software information system ConceptBase, supports co-operation within development teams by integrating models and tools for argumentation and co-ordination with those for versioning and configuration. Versioning decisions are discussed and decided on within an argument editor, and executed by specialised tools for programming-in-the-small. Tasks are assigned and monitored through a contract tool, and carried out within co-ordinated workspaces under a conflict-tolerant transaction protocol. Consistent configuration and reconfiguration of local results is supported by a logic-based configuration assistant.},
	Author = {Thomas Rose and Matthias Jarke and Martin Gocek and Carlos Maltzahn and Hans Nissen},
	Date-Added = {2014-06-27 02:43:48 +0000},
	Date-Modified = {2020-01-04 21:56:48 -0700},
	Journal = {Software Engineering Journal},
	Keywords = {papers, software, programming, collaborative},
	Month = {September},
	Number = {5},
	Pages = {332--346},
	Title = {A Decision-Based Configuration Process Environment},
	Volume = {6},
	Year = {1991},
	Bdsk-Url-1 = {http://dx.doi.org/10.1049/sej.1991.0034}}

@misc{hacker:ncar14,
	Author = {Joshua Hacker and Carlos Maltzahn and Gretchen Mullendore and Russ Schumacher},
	Date-Added = {2014-06-21 21:53:41 +0000},
	Date-Modified = {2014-06-24 17:21:49 +0000},
	Howpublished = {Web page. www.rap.ucar.edu/staff/hacker/BigWeather.pdf},
	Keywords = {papers, nwp, geoscience, simulation, infrastructure},
	Month = {January},
	Title = {Big Weather - A workshop on overcoming barriers to distributed production, storage, and analysis of multi-model ensemble forecasts in support of weather prediction research and education in universities},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSC9oYWNrZXItbmNhcjE0LnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFoYWNrZXItbmNhcjE0LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABSAAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpIOmhhY2tlci1uY2FyMTQucGRmAAAOACQAEQBoAGEAYwBrAGUAcgAtAG4AYwBhAHIAMQA0AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9IL2hhY2tlci1uY2FyMTQucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@inproceedings{skourtis:atc14,
	Abstract = {Modern applications and virtualization require fast and predictable storage. Hard-drives have low and unpredictable performance, while keeping everything in DRAM is still prohibitively expensive or unnecessary in many cases. Solid-state drives offer a balance between performance and cost and are becoming increasingly popular in storage systems, playing the role of large caches and permanent storage. Although their read performance is high and predictable, SSDs frequently block in the presence of writes, exceeding hard-drive latency and leading to unpredictable performance.
Many systems with mixed workloads have low latency requirements or require predictable performance and guarantees. In such cases the performance variance of SSDs becomes a problem for both predictability and raw performance. In this paper, we propose Rails, a design based on redundancy, which provides predictable performance and low latency for reads under read/write workloads by physically separating reads from writes. More specifically, reads achieve read-only performance while writes perform at least as well as before. We evaluate our design using micro-benchmarks and real traces, illustrating the performance benefits of Rails and read/write separation in solid-state drives.},
	Address = {Philadelphia, PA},
	Author = {Dimitris Skourtis and Dimitris Achlioptas and Noah Watkins and Carlos Maltzahn and Scott Brandt},
	Booktitle = {USENIX ATC '14},
	Date-Added = {2014-05-10 00:06:33 +0000},
	Date-Modified = {2020-01-04 21:58:01 -0700},
	Keywords = {papers, flash, performance, redundancy, qos},
	Month = {June 19-20},
	Title = {Flash on Rails: Consistent Flash Performance through Redundancy},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy1hdGMxNC5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Sc2tvdXJ0aXMtYXRjMTQucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVMAAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Uzpza291cnRpcy1hdGMxNC5wZGYADgAmABIAcwBrAG8AdQByAHQAaQBzAC0AYQB0AGMAMQA0AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9TL3Nrb3VydGlzLWF0YzE0LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@inproceedings{crume:msst14,
	Abstract = {Predicting access times is a crucial part of predicting hard disk drive performance. Existing approaches use white-box modeling and require intimate knowledge of the internal layout of the drive, which can take months to extract. Automatically learning this behavior is a much more desirable approach, requiring less expert knowledge, fewer assumptions, and less time. While previous research has created black-box models of hard disk drive performance, none have shown low per-request errors. A barrier to machine learning of access times has been the existence of periodic behavior with high, unknown frequencies. We identify these high frequencies with Fourier analysis and include them explicitly as input to the model. In this paper we focus on the simulation of access times for random read workloads within a single zone. We are able to automatically generate and tune request-level access time models with mean absolute error less than 0.15 ms. To our knowledge this is the first time such a fidelity has been achieved with modern disk drives using machine learning. We are confident that our approach forms the core for automatic generation of access time models that include other workloads and span across entire disk drives, but more work remains.},
	Address = {Santa Clara, CA},
	Author = {Adam Crume and Carlos Maltzahn and Lee Ward and Thomas Kroeger and Matthew Curry},
	Booktitle = {MSST '14},
	Date-Added = {2014-05-10 00:02:27 +0000},
	Date-Modified = {2020-01-04 21:58:30 -0700},
	Keywords = {papers, machinelearning, modeling, simulation, storagemedium, autotuning},
	Month = {June 2-6},
	Title = {Automatic Generation of Behavioral Hard Disk Drive Access Time Models},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBFLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQy9jcnVtZS1tc3N0MTQucGRmTxEBYAAAAAABYAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EGNydW1lLW1zc3QxNC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFDAAACADgvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkM6Y3J1bWUtbXNzdDE0LnBkZgAOACIAEABjAHIAdQBtAGUALQBtAHMAcwB0ADEANAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIy9NeSBEcml2ZS9QYXBlcnMvQy9jcnVtZS1tc3N0MTQucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABsAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAdA=}}

@inproceedings{maltzahn:gamifir14,
	Abstract = {The super-exponential growth of digital data world-wide is matched by personal digital archives containing songs, ebooks, audio books, photos, movies, textual documents, and documents of other media types. For many types of media it is usually a lot easier to add items than to keep archives from falling into disarray and incurring data loss. The overhead of maintaining these personal archives frequently surpasses the time and patience their owners are willing to dedicate to this important task. The promise of gamification in this context is to significantly extend the willingness to maintain personal archives by enhancing the experience of personal archive management.
In this paper we focus on a subcategory of personal archives which we call private archives. These are archives that for a variety of reasons the owner does not want to make available online and which consequently limits archive maintenance to an individual activity and does not allow any form of crowdsourcing out of fear for unwanted information leaks. As an example of private digital archive maintenance gamification we describe InfoGarden, a casual game that turns document tagging into an individual activity of (metaphorically) weeding a garden and protecting plants from gophers and includes a reward system that encourages orthogonal tag usage. The paper concludes with lessons learned and summarizes remaining challenges.},
	Address = {Amsterdam, Netherlands},
	Author = {Carlos Maltzahn and Arnav Jhala and Michael Mateas and Jim Whitehead},
	Booktitle = {GamifIR'14 at ECIR'14},
	Date-Added = {2014-04-22 01:27:12 +0000},
	Date-Modified = {2020-01-04 21:59:05 -0700},
	Keywords = {papers, gamification, games, archive, digitalpreservation, tagging},
	Month = {April 13},
	Title = {Gamification of Private Digital Data Archive Management},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1nYW1pZmlyMTQucGRmTxEBeAAAAAABeAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////Fm1hbHR6YWhuLWdhbWlmaXIxNC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFNAAACAD4vOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOk06bWFsdHphaG4tZ2FtaWZpcjE0LnBkZgAOAC4AFgBtAGEAbAB0AHoAYQBoAG4ALQBnAGEAbQBpAGYAaQByADEANAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1nYW1pZmlyMTQucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAByAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAe4=}}

@techreport{crume:ucsctr14,
	Abstract = {Predicting access times is a crucial part of predicting hard disk drive performance. Existing approaches use white-box modeling and require intimate knowledge of the internal layout of the drive, which can take months to extract. Automatically learning this behavior is a much more desirable approach, requiring less expert knowledge, fewer assumptions, and less time. While previous research has created black-box models of hard disk drive performance, none have shown low per-request errors. A barrier to machine learning of access times has been the existence of periodic behavior with high, unknown frequencies. We identify these high frequencies with Fourier analysis and include them explicitly as input to the model. In this paper we focus on the simulation of access times for random read workloads within a single zone. We are able to automatically generate and tune request-level access time models with mean absolute error less than 0.15 ms. To our knowledge this is the first time such a fidelity has been achieved with modern disk drives using machine learning. We are confident that our approach forms the core for automatic generation of access time models that include other workloads and span across entire disk drives, but more work remains.},
	Address = {Santa Cruz, CA},
	Author = {Adam Crume and Carlos Maltzahn and Lee Ward and Thomas Kroeger and Matthew Curry},
	Date-Added = {2014-03-28 22:23:23 +0000},
	Date-Modified = {2020-01-04 21:59:33 -0700},
	Institution = {University of California at Santa Cruz},
	Keywords = {papers, machinelearning, storagemedium, simulation, modeling, autotuning, neuralnetworks},
	Month = {March 28},
	Number = {UCSC-SOE-14-02},
	Title = {Automatic Generation of Behavioral Hard Disk Drive Access Time Models},
	Type = {Technical Report},
	Year = {2014},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQy9jcnVtZS11Y3NjdHIxNC5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8SY3J1bWUtdWNzY3RyMTQucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUMAAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6QzpjcnVtZS11Y3NjdHIxNC5wZGYADgAmABIAYwByAHUAbQBlAC0AdQBjAHMAYwB0AHIAMQA0AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9DL2NydW1lLXVjc2N0cjE0LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@inproceedings{jimenez:pdsw13poster,
	Address = {Denver, CO},
	Author = {Ivo Jimenez and Carlos Maltzahn and Jai Dayal and Jay Lofstead},
	Booktitle = {Poster Session at PDSW 2013 at SC13},
	Date-Added = {2013-12-08 21:27:53 +0000},
	Date-Modified = {2020-01-04 21:59:53 -0700},
	Keywords = {shortpapers, transactions, hpc, exascale, parallel, datamanagement},
	Month = {November 17},
	Title = {Exploring Trade-offs in Transactional Parallel Data Movement},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBPLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2ppbWVuZXotcGRzdzEzcG9zdGVyLnBkZk8RAYYAAAAAAYYAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xhqaW1lbmV6LXBkc3cxM3Bvc3Rlci5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAADSS1KAAACAEIvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkktSjpqaW1lbmV6LXBkc3cxM3Bvc3Rlci5wZGYADgAyABgAagBpAG0AZQBuAGUAegAtAHAAZABzAHcAMQAzAHAAbwBzAHQAZQByAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAtL015IERyaXZlL1BhcGVycy9JLUovamltZW5lei1wZHN3MTNwb3N0ZXIucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB2AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAgA=}}

@inproceedings{crume:pdsw13,
	Abstract = {Predicting access times is a crucial part of predicting hard disk drive performance. Existing approaches use white-box modeling and require intimate knowledge of the internal layout of the drive, which can take months to extract. Automatically learning this behavior is a much more desirable approach, requiring less expert knowledge, fewer assumptions, and less time. Others have created behavioral models of hard disk drive performance, but none have shown low per-request errors. A barrier to machine learning of access times has been the existence of periodic behavior with high, unknown frequencies. We show how hard disk drive access times can be predicted to within 0.83 ms using a neural net after these frequencies are found using Fourier analysis.
},
	Address = {Denver, CO},
	Author = {Adam Crume and Carlos Maltzahn and Lee Ward and Thomas Kroeger and Matthew Curry and Ron Oldfield},
	Booktitle = {PDSW'13},
	Date-Added = {2013-11-30 19:31:15 +0000},
	Date-Modified = {2020-01-04 22:00:13 -0700},
	Keywords = {papers, machinelearning, performance, modeling, storagemedium, neuralnetworks},
	Month = {November 18},
	Title = {Fourier-Assisted Machine Learning of Hard Disk Drive Access Time Models},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBFLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQy9jcnVtZS1wZHN3MTMucGRmTxEBYAAAAAABYAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EGNydW1lLXBkc3cxMy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFDAAACADgvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkM6Y3J1bWUtcGRzdzEzLnBkZgAOACIAEABjAHIAdQBtAGUALQBwAGQAcwB3ADEAMwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIy9NeSBEcml2ZS9QYXBlcnMvQy9jcnVtZS1wZHN3MTMucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABsAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAdA=}}

@inproceedings{skourtis:inflow13,
	Abstract = {Solid-state drives are becoming increasingly popular in enterprise storage systems, playing the role of large caches and permanent storage. Although SSDs provide faster random access than hard-drives, their performance under read/write workloads is highly variable often exceeding that of harddrives (e.g., taking 100ms for a single read). Many systems with mixed workloads have low latency requirements, or require predictable performance and guarantees. In such cases, the performance variance of SSDs becomes a problem for both predictability and raw performance.
In this paper, we propose a design based on redundancy, which provides high performance and low latency for reads under read/write workloads by physically separating reads from writes. More specifically, reads achieve read-only performance while writes perform at least as good as before. We evaluate our design using micro-benchmarks and real traces, illustrating the performance benefits of read/write separation in solid-state drives.},
	Address = {Farmington, PA},
	Author = {Dimitris Skourtis and Dimitris Achlioptas and Carlos Maltzahn and Scott Brandt},
	Booktitle = {INFLOW '13},
	Date-Added = {2013-09-11 06:19:23 +0000},
	Date-Modified = {2020-01-04 22:04:04 -0700},
	Keywords = {papers, flash, erasurecodes, redundancy, storage, distributed, systems},
	Month = {November 3},
	Title = {High Performance \& Low Latency in Solid-State Drives Through Redundancy},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy1pbmZsb3cxMy5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Vc2tvdXJ0aXMtaW5mbG93MTMucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVMAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Uzpza291cnRpcy1pbmZsb3cxMy5wZGYAAA4ALAAVAHMAawBvAHUAcgB0AGkAcwAtAGkAbgBmAGwAbwB3ADEAMwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy1pbmZsb3cxMy5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp}}

@inproceedings{watkins:bdmc13,
	Abstract = {The emergence of high-performance open-source storage systems is allowing application and middleware developers to consider non-standard storage system interfaces. In contrast to the practice of virtually always designing for file-like byte-stream interfaces, co-designed domain-specific storage system interfaces are becoming increasingly common. However, in order for developers to evolve interfaces in high-availability storage systems, services are needed for in-vivo interface evolution that allows the development of interfaces in the context of a live system. Current clustered storage systems that provide interface customizability expose primitive services for managing ad-hoc interfaces. For maximum utility, the ability to create, evolve, and deploy dynamic storage interfaces is needed. However, in large-scale clusters, dynamic interface instantiation will require system-level support that ensures interface version consistency among storage nodes and client applications. We propose that storage systems should provide services that fully manage the life-cycle of dynamic interfaces that are aligned with the common branch-and-merge form of software maintenance, including isolated development workspaces that can be combined into existing production views of the system.},
	Address = {Aachen, Germany},
	Author = {Noah Watkins and Carlos Maltzahn and Scott Brandt and Ian Pye and Adam Manzanares},
	Booktitle = {BigDataCloud '13 (in conjunction with EuroPar 2013)},
	Date-Added = {2013-07-21 00:37:45 +0000},
	Date-Modified = {2020-01-04 23:18:47 -0700},
	Keywords = {papers, datamodel, scripting, storage, systems, software-defined},
	Month = {August 26},
	Title = {In-Vivo Storage System Development},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLWJkbWMxMy5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Sd2F0a2lucy1iZG1jMTMucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVcAAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Vzp3YXRraW5zLWJkbWMxMy5wZGYADgAmABIAdwBhAHQAawBpAG4AcwAtAGIAZABtAGMAMQAzAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9XL3dhdGtpbnMtYmRtYzEzLnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBOLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLWJkbWMxMy1zbGlkZXMucGRmTxEBhAAAAAABhAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////GXdhdGtpbnMtYmRtYzEzLXNsaWRlcy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFXAAACAEEvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlc6d2F0a2lucy1iZG1jMTMtc2xpZGVzLnBkZgAADgA0ABkAdwBhAHQAawBpAG4AcwAtAGIAZABtAGMAMQAzAC0AcwBsAGkAZABlAHMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACwvTXkgRHJpdmUvUGFwZXJzL1cvd2F0a2lucy1iZG1jMTMtc2xpZGVzLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB1AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAf0=}}

@inproceedings{buck:sc13,
	Abstract = {The MapReduce framework is being extended for domains quite different from the web applications for which it was designed, including the processing of big structured data, e.g., scientific and financial data. Previous work using MapReduce to process scientific data ignores existing structure when assigning intermediate data and scheduling tasks. In this paper, we present a method for incorporating knowledge of the structure of scientific data and executing query into the MapReduce communication model. Built in SciHadoop, a version of the Hadoop MapReduce framework for scientific data, SIDR intelligently partitions and routes intermediate data, allowing it to: remove Hadoop's global barrier and execute Reduce tasks prior to all Map tasks completing; minimize intermediate key skew; and produce early, correct results. SIDR executes queries up to 2.5 times faster than Hadoop and 37% faster than SciHadoop; produces initial results with only 6\% of the query completed; and produces dense, contiguous output.},
	Address = {Denver, CO},
	Author = {Joe Buck and Noah Watkins and Greg Levin and Adam Crume and Kleoni Ioannidou and Scott Brandt and Carlos Maltzahn and Neoklis Polyzotis and Aaron Torres},
	Booktitle = {SC '13},
	Date-Added = {2013-07-21 00:28:59 +0000},
	Date-Modified = {2020-01-04 23:20:15 -0700},
	Keywords = {papers, mapreduce, structured, datamanagement, routing, hpc},
	Month = {November},
	Title = {SIDR: Structure-Aware Intelligent Data Routing in Hadoop},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBCLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9idWNrLXNjMTMucGRmTxEBVAAAAAABVAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DWJ1Y2stc2MxMy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFCAAACADUvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkI6YnVjay1zYzEzLnBkZgAADgAcAA0AYgB1AGMAawAtAHMAYwAxADMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACAvTXkgRHJpdmUvUGFwZXJzL0IvYnVjay1zYzEzLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABpAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAcE=}}

@techreport{skourtis:ucsctr13a,
	Address = {Santa Cruz, CA},
	Author = {Dimitris Skourtis and Noah Watkins and Dimitris Achlioptas and Carlos Maltzahn and Scott Brandt},
	Date-Added = {2013-07-18 18:38:34 +0000},
	Date-Modified = {2013-07-19 05:52:07 +0000},
	Institution = {UCSC},
	Keywords = {papers, flash, cluster, redundancy, performance, management, qos, parallel, filesystems},
	Month = {July 18},
	Number = {UCSC-SOE-13-10},
	Title = {Latency Minimization in {SSD} Clusters for Free},
	Type = {Tech. rept.},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy11Y3NjdHIxM2EucGRmTxEBeAAAAAABeAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////FnNrb3VydGlzLXVjc2N0cjEzYS5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFTAAACAD4vOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlM6c2tvdXJ0aXMtdWNzY3RyMTNhLnBkZgAOAC4AFgBzAGsAbwB1AHIAdABpAHMALQB1AGMAcwBjAHQAcgAxADMAYQAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKS9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy11Y3NjdHIxM2EucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAByAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAe4=}}

@techreport{skourtis:ucsctr13,
	Address = {Santa Cruz, CA},
	Author = {Dimitris Skourtis and Scott A. Brandt and Carlos Maltzahn},
	Date-Added = {2013-07-17 23:54:42 +0000},
	Date-Modified = {2013-07-17 23:58:48 +0000},
	Institution = {UCSC},
	Keywords = {papers, flash, performance, management, qos},
	Month = {May 14},
	Number = {UCSC-SOE-13-08},
	Title = {Ianus: Guaranteeing High Performance in Solid-State Drives},
	Type = {Tech. rept.},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy11Y3NjdHIxMy5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Vc2tvdXJ0aXMtdWNzY3RyMTMucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVMAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Uzpza291cnRpcy11Y3NjdHIxMy5wZGYAAA4ALAAVAHMAawBvAHUAcgB0AGkAcwAtAHUAYwBzAGMAdAByADEAMwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvUy9za291cnRpcy11Y3NjdHIxMy5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp},
	Bdsk-Url-1 = {http://www.soe.ucsc.edu/research/technical-reports/ucsc-soe-13-08}}

@techreport{buck:ucsctr12,
	Address = {Santa Cruz, CA},
	Author = {Joe Buck and Noah Watkins and Greg Levin and Adam Crume and Kleoni Ioannidou and Scott Brandt and Carlos Maltzahn and Neoklis Polyzotis},
	Date-Added = {2013-05-30 22:56:59 +0000},
	Date-Modified = {2013-05-30 22:59:07 +0000},
	Institution = {University of California Santa Cruz},
	Keywords = {papers, mapreduce, hadoop, hpc, communication, networking, structured, datamanagement},
	Month = {July 26},
	Number = {UCSC-SOE-12-08},
	Title = {Structure-Aware Intelligent Data Routing in SciHadoop},
	Type = {Technical Report},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9idWNrLXVjc2N0cjEyLnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFidWNrLXVjc2N0cjEyLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABQgAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpCOmJ1Y2stdWNzY3RyMTIucGRmAAAOACQAEQBiAHUAYwBrAC0AdQBjAHMAYwB0AHIAMQAyAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9CL2J1Y2stdWNzY3RyMTIucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@techreport{crume:ucsctr12,
	Address = {Santa Cruz, CA},
	Author = {Adam Crume and Joe Buck and Noah Watkins and Carlos Maltzahn and Scott Brandt and Neoklis Polyzotis},
	Date-Added = {2013-05-30 22:54:07 +0000},
	Date-Modified = {2013-05-30 22:55:49 +0000},
	Institution = {University of California Santa Cruz},
	Keywords = {papers, compression, hadoop, semantic, structured, datamanagement, mapreduce},
	Month = {August 16},
	Number = {UCSC-SOE-12-13},
	Title = {SciHadoop Semantic Compression},
	Type = {Technical Report},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQy9jcnVtZS11Y3NjdHIxMi5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8SY3J1bWUtdWNzY3RyMTIucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUMAAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6QzpjcnVtZS11Y3NjdHIxMi5wZGYADgAmABIAYwByAHUAbQBlAC0AdQBjAHMAYwB0AHIAMQAyAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9DL2NydW1lLXVjc2N0cjEyLnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@techreport{watkins:ucsctr13,
	Abstract = {The emergence of high-performance open-source storage systems is allowing application and middleware developers to consider non-standard storage system interfaces. In contrast to the common practice of translating all I/O access onto the POSIX file interface, it will soon be common for application development to include the co-design of storage system interfaces. In order for developers to evolve a co-design in high-availability clusters, services are needed for in-vivo interface evolution that allows the development of interfaces in the context of a live system.
Current clustered storage systems that provide interface customizability expose primitive services for managing static interfaces. For maximum utility, creating, evolving, and deploying dynamic storage interfaces is needed. However, in large-scale clusters, dynamic interface instantiation will require system-level support that ensures interface version consistency among storage nodes and clients. We propose that storage systems should provide services that fully manage the life-cycle of dynamic interfaces that are aligned with the common branch-and-merge form of software maintenance, including isolated development workspaces that can be combined into existing production views of the system.
},
	Address = {Santa Cruz, CA},
	Author = {Noah Watkins and Carlos Maltzahn and Scott Brandt and Ian Pye and Adam Manzanares},
	Date-Added = {2013-05-30 22:41:44 +0000},
	Date-Modified = {2020-01-04 23:01:28 -0700},
	Institution = {University of California Santa Cruz},
	Keywords = {papers, datamodel, scripting, storage, systems, software-defined},
	Month = {March 16},
	Number = {UCSC-SOE-13-02},
	Title = {In-Vivo Storage System Development},
	Type = {Technical Report},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLXVjc2N0cjEzLnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xR3YXRraW5zLXVjc2N0cjEzLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABVwAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpXOndhdGtpbnMtdWNzY3RyMTMucGRmAA4AKgAUAHcAYQB0AGsAaQBuAHMALQB1AGMAcwBjAHQAcgAxADMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL1cvd2F0a2lucy11Y3NjdHIxMy5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@inproceedings{ionkov:msst13,
	Abstract = {Until recently most scientific applications produced data that is saved, analyzed and visualized at later time. In recent years, with the large increase in the amount of data and computational power available there is demand for applications to support data access in-situ, or close-to simulation to provide application steering, analytics and visualization. Data access patterns required for these activities are usually different than the data layout produced by the application. In most of the large HPC clusters scientific data is stored in parallel file systems instead of locally on the cluster nodes. To increase reliability, the data is replicated, usually using some of the standard RAID schemes. Parallel file server nodes usually have more processing power than they need, so it is feasible to offload some of the data intensive processing to them. DRepl project replaces the standard methods of data replication with replicas having different layouts, optimized for the most commonly used access patterns. Replicas can be complete (i.e. any other replica can be reconstructed from it), or incomplete. DRepl consists of a language to describe the dataset and the necessary data layouts and tools to create a user-space file server that provides and keeps the data consistent and up to date in all optimized layouts.},
	Address = {Long Beach, CA},
	Author = {Latchesar Ionkov and Mike Lang and Carlos Maltzahn},
	Booktitle = {MSST '13},
	Date-Added = {2013-03-26 23:29:57 +0000},
	Date-Modified = {2020-01-05 05:23:58 -0700},
	Keywords = {papers, redundancy, layout, hpc, storage, storagemedium, languages},
	Month = {May 6-10},
	Title = {DRepl: Optimizing Access to Application Data for Analysis and Visualization},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSS1KL2lvbmtvdi1tc3N0MTMucGRmTxEBagAAAAABagACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EWlvbmtvdi1tc3N0MTMucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAANJLUoAAAIAOy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6SS1KOmlvbmtvdi1tc3N0MTMucGRmAAAOACQAEQBpAG8AbgBrAG8AdgAtAG0AcwBzAHQAMQAzAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAmL015IERyaXZlL1BhcGVycy9JLUovaW9ua292LW1zc3QxMy5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbwAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHd}}

@inproceedings{he:hpdc13,
	Abstract = {The I/O bottleneck in high-performance computing is becoming worse as application data continues to grow. In this work, we explore how patterns of I/O within these applications can significantly affect the effectiveness of the underlying storage systems and how these same patterns can be utilized to improve many aspects of the I/O stack and mitigate the I/O bottleneck. We offer three main contributions in this paper. First, we develop and evaluate algorithms by which I/O patterns can be efficiently discovered and described. Second, we implement one such algorithm to reduce the metadata quantity in a virtual parallel file system by up to several orders of magnitude, thereby increasing the performance of writes and reads by up to 40 and 480 percent respectively. Third, we build a prototype file system with pattern-aware prefetching and evaluate it to show a 46 percent reduction in I/O latency. Finally, we believe that efficient pattern discovery and description, coupled with the observed predictability of complex patterns within many high-performance applications, offers significant potential to enable many additional I/O optimizations.},
	Address = {New York City, NY},
	Author = {Jun He and John Bent and Aaron Torres and Gary Grider and Garth Gibson and Carlos Maltzahn and Xian-He Sun},
	Booktitle = {HPDC '13},
	Date-Added = {2013-03-26 23:25:38 +0000},
	Date-Modified = {2020-01-05 05:25:00 -0700},
	Keywords = {papers, compression, plfs, indexing, checkpointing, patterndetection},
	Month = {June 17-22},
	Title = {I/O Acceleration with Pattern Detection},
	Year = {2013},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBCLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSC9oZS1ocGRjMTMucGRmTxEBVAAAAAABVAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DWhlLWhwZGMxMy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFIAAACADUvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkg6aGUtaHBkYzEzLnBkZgAADgAcAA0AaABlAC0AaABwAGQAYwAxADMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACAvTXkgRHJpdmUvUGFwZXJzL0gvaGUtaHBkYzEzLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABpAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAcE=}}

@techreport{maltzahn:cutr99,
	Abstract = {The bandwidth usage due to HTTP traffic often varies considerably over the course of a day, requiring high network performance during peak periods while leaving network resources unused during off-peak periods. We show that using these extra network resources to prefetch web content during off-peak periods can significantly reduce peak bandwidth usage without compromising cache consistency. With large HTTP traffic variations it is therefore feasible to apply ``bandwidth smoothing'' to reduce the cost and the required capacity of a network infrastructure. In addition to reducing the peak network demand, bandwidth smoothing improves cache hit rates.
We calculate the potential reduction in bandwidth for a given bandwidth usage profile, and show that a simple hueristic has poor prefetch accuracy. We then apply machine learning techniques to automatically develop prefetch strategies that have high accuracy. Our results are based on web proxy traces generated at a large corporate Internet exchange point and data collected from recent scans of popular web sites.},
	Author = {Carlos Maltzahn and Kathy Richardson and Dirk Grunwald and James Martin},
	Date-Added = {2012-12-07 22:58:31 +0000},
	Date-Modified = {2020-01-05 05:26:05 -0700},
	Institution = {Dept. of Computer Science, University of Colorado at Boulder},
	Keywords = {papers, prefetching, caching, machinelearning, networking, intermediary},
	Month = {January},
	Number = {CU-CS-879-99},
	Title = {A Feasibility Study of Bandwidth Smoothing on the World-Wide Web Using Machine Learning},
	Type = {Technical Report},
	Year = {1999},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1jdXRyOTkucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E21hbHR6YWhuLWN1dHI5OS5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFNAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOk06bWFsdHphaG4tY3V0cjk5LnBkZgAADgAoABMAbQBhAGwAdAB6AGEAaABuAC0AYwB1AHQAcgA5ADkALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL00vbWFsdHphaG4tY3V0cjk5LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@phdthesis{maltzahn:phdthesis99,
	Abstract = {The resource utilization of enterprise-level Web proxy servers is primarily dependent on network and disk I/O latencies and is highly variable due to a diurnal workload pattern with very predictable peak and off-peak periods. Often, the cost of resources depends on the purchased resource capacity instead of the actual utilization. This motivates the use of off-peak periods to perform speculative work in the hope that this work will later reduce resource utilization during peak periods. We take two approaches to improve resource utilization.
In the first approach we reduce disk I/O by cache compaction during off-peak periods and by carefully designing the way a cache architecture utilizes operating system services such as the file system buffer cache and the virtual memory system. Evaluating our designs with workload generators on standard file systems we achieve disk I/O savings of over 70% compared to existing Web proxy server architectures.
In the second approach we reduce peak bandwidth levels by prefetching bandwidth dur- ing off-peak periods. Our analysis reveals that 40% of the cacheable miss bandwidth is prefetch- able. We found that 99% of this prefetchable bandwidth is based on objects that the Web proxy server under study has not accessed before. However, these objects originate from servers which the Web proxy server under study has accessed before. Using machine learning techniques we are able to automatically generate prefetch strategies of high accuracy and medium coverage. A test of these prefetch strategies on real workloads achieves a peak-level reduction of up to 12%.},
	Address = {Boulder, Co},
	Author = {Carlos Maltzahn},
	Date-Added = {2012-12-07 22:22:06 +0000},
	Date-Modified = {2020-01-05 05:26:52 -0700},
	Keywords = {papers, prefetching, networking, intermediary, caching, performance, machinelearning},
	School = {University of Colorado at Boulder},
	Title = {Improving Resource Utilization of Enterprise-Level World-Wide Web Proxy Servers},
	Year = {1999},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBNLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1waGR0aGVzaXM5OS5wZGZPEQGAAAAAAAGAAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8YbWFsdHphaG4tcGhkdGhlc2lzOTkucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAU0AAAIAQC86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6TTptYWx0emFobi1waGR0aGVzaXM5OS5wZGYADgAyABgAbQBhAGwAdAB6AGEAaABuAC0AcABoAGQAdABoAGUAcwBpAHMAOQA5AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgArL015IERyaXZlL1BhcGVycy9NL21hbHR6YWhuLXBoZHRoZXNpczk5LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAdAAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAH4}}

@inproceedings{watkins:pdsw12,
	Abstract = {As applications become more complex, and the level of concurrency in systems continue to rise, developers are struggling to scale complex data models on top of a traditional byte stream interface. Middleware tailored for specific data models is a common approach to dealing with these challenges, but middleware commonly reproduces scalable services already present in many distributed file systems.
We present DataMods, an abstraction over existing services found in large-scale storage systems that allows middleware to take advantage of existing, highly tuned services. Specifically, DataMods provides an abstraction for extending storage system services in order to implement native, domain-specific data models and interfaces throughout the storage hierarchy.},
	Address = {Salt Lake City, UT},
	Author = {Noah Watkins and Carlos Maltzahn and Scott A. Brandt and Adam Manzanares},
	Booktitle = {PDSW'12},
	Date-Added = {2012-11-02 06:03:40 +0000},
	Date-Modified = {2020-01-05 05:27:34 -0700},
	Keywords = {papers, filesystems, programming, datamanagement},
	Month = {November 12},
	Read = {1},
	Title = {DataMods: Programmable File System Services},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLXBkc3cxMi5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Sd2F0a2lucy1wZHN3MTIucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVcAAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Vzp3YXRraW5zLXBkc3cxMi5wZGYADgAmABIAdwBhAHQAawBpAG4AcwAtAHAAZABzAHcAMQAyAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9XL3dhdGtpbnMtcGRzdzEyLnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBOLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLXBkc3cxMi1zbGlkZXMucGRmTxEBhAAAAAABhAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////GXdhdGtpbnMtcGRzdzEyLXNsaWRlcy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFXAAACAEEvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlc6d2F0a2lucy1wZHN3MTItc2xpZGVzLnBkZgAADgA0ABkAdwBhAHQAawBpAG4AcwAtAHAAZABzAHcAMQAyAC0AcwBsAGkAZABlAHMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACwvTXkgRHJpdmUvUGFwZXJzL1cvd2F0a2lucy1wZHN3MTItc2xpZGVzLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB1AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAf0=}}

@inproceedings{crume:pdsw12,
	Abstract = {In Hadoop mappers send data to reducers in the form of key/value pairs. The default design of Hadoop's process for transmitting this intermediate data can cause a very high overhead, especially for scientific data containing multiple variables in a multi-dimensional space. For example, for a 3D scalar field of a variable ``windspeed1'' the size of keys was 6.75 times the size of values. Much of the disk and network bandwidth of ``shuffling'' this intermediate data is consumed by repeatedly transmitting the variable name for each value. This significant waste of resources is due to an assumption fundamental to Hadoop's design that all key/values are independent. This assumption is inadequate for scientific data which is often organized in regular grids, a structure that can be described in small, constant size.
Earlier we presented SciHadoop, a slightly modified version of Hadoop designed for processing scientific data. We reported on experiments with SciHadoop which confirm that the size of intermediate data has a significant impact on overall performance. Here we show preliminary designs of multiple lossless approaches to compressing intermediate data, one of which results in up to five orders of magnitude reduction the original key/value ratio.},
	Address = {Salt Lake City, UT},
	Author = {Adam Crume and Joe Buck and Carlos Maltzahn and Scott Brandt},
	Booktitle = {PDSW'12},
	Date-Added = {2012-11-02 06:02:29 +0000},
	Date-Modified = {2020-01-05 06:29:22 -0700},
	Keywords = {papers, mapreduce, compression, array},
	Month = {November 12},
	Title = {Compressing Intermediate Keys between Mappers and Reducers in SciHadoop},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBFLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQy9jcnVtZS1wZHN3MTIucGRmTxEBYAAAAAABYAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EGNydW1lLXBkc3cxMi5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFDAAACADgvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkM6Y3J1bWUtcGRzdzEyLnBkZgAOACIAEABjAHIAdQBtAGUALQBwAGQAcwB3ADEAMgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIy9NeSBEcml2ZS9QYXBlcnMvQy9jcnVtZS1wZHN3MTIucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABsAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAdA=},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBMLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQy9jcnVtZS1wZHN3MTItc2xpZGVzLnBkZk8RAXwAAAAAAXwAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xdjcnVtZS1wZHN3MTItc2xpZGVzLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABQwAAAgA/LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpDOmNydW1lLXBkc3cxMi1zbGlkZXMucGRmAAAOADAAFwBjAHIAdQBtAGUALQBwAGQAcwB3ADEAMgAtAHMAbABpAGQAZQBzAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAqL015IERyaXZlL1BhcGVycy9DL2NydW1lLXBkc3cxMi1zbGlkZXMucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHMAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB8w==}}

@inproceedings{he:pdsw12,
	Abstract = {Checkpointing is the predominant storage driver in today's petascale supercomputers and is expected to remain as such in tomorrow's exascale supercomputers. Users typically prefer to checkpoint into a shared file yet parallel file systems often perform poorly for shared file writing. A powerful technique to address this problem is to transparently transform shared file writing into many exclusively written as is done in ADIOS and PLFS. Unfortunately, the metadata to reconstruct the fragments into the original file grows with the number of writers. As such, the current approach cannot scale to exaflop supercomputers due to the large overhead of creating and reassembling the metadata.
In this paper, we develop and evaluate algorithms by which patterns in the PLFS metadata can be discovered and then used to replace the current metadata. Our evaluation shows that these patterns reduce the size of the metadata by several orders of magnitude, increase the performance of writes by up to 40 percent, and the performance of reads by up to 480 percent. This contribution therefore can allow current checkpointing models to survive the transition from peta- to exascale.},
	Address = {Salt Lake City, UT},
	Author = {Jun He and John Bent and Aaron Torres and Gary Grider and Garth Gibson and Carlos Maltzahn and Xian-He Sun},
	Booktitle = {PDSW'12},
	Date-Added = {2012-11-02 06:00:38 +0000},
	Date-Modified = {2020-01-05 05:28:43 -0700},
	Keywords = {papers, compression, indexing, plfs, patterndetection, checkpointing},
	Month = {November 12},
	Read = {1},
	Title = {Discovering Structure in Unstructured I/O},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBCLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSC9oZS1wZHN3MTIucGRmTxEBVAAAAAABVAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DWhlLXBkc3cxMi5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFIAAACADUvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkg6aGUtcGRzdzEyLnBkZgAADgAcAA0AaABlAC0AcABkAHMAdwAxADIALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACAvTXkgRHJpdmUvUGFwZXJzL0gvaGUtcGRzdzEyLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABpAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAcE=},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSC9oZS1wZHN3MTItc2xpZGVzLnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xRoZS1wZHN3MTItc2xpZGVzLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABSAAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpIOmhlLXBkc3cxMi1zbGlkZXMucGRmAA4AKgAUAGgAZQAtAHAAZABzAHcAMQAyAC0AcwBsAGkAZABlAHMALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL0gvaGUtcGRzdzEyLXNsaWRlcy5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@techreport{watkins:soetr12,
	Abstract = {Cloud-based services have become an attractive alternative to in-house data centers because of their flexible, on-demand availability of compute and storage resources. This is also true for scientific high-performance computing (HPC) applications that are currently being run on expensive, dedicated hardware. One important challenge of HPC applications is their need to perform periodic global checkpoints of execution state to stable storage in order to recover from failures, but the checkpoint process can dominate the total run-time of HPC applications even in the failure-free case! In HPC architectures, dedicated stable storage is highly tuned for this type of workload using locality and physical layout policies, which are generally unknown in typical cloud environments. In this paper we introduce DataMods, an extended version of the Ceph file system and associated distributed object store RADOS, which are widely used in open source cloud stacks. DataMods extends object-based storage with extended services take advantage of common cloud data center node hardware configurations (i.e. CPU and local storage resources), and that can be used to construct efficient, scalable middleware services that span the entire storage stack and utilize asynchronous services for offline data management services.},
	Address = {Santa Cruz, CA},
	Author = {Noah Watkins and Carlos Maltzahn and Scott A. Brandt and Adam Manzanares},
	Date-Added = {2012-07-21 11:39:45 +0000},
	Date-Modified = {2020-01-05 05:29:20 -0700},
	Institution = {University of California Santa Cruz},
	Keywords = {papers, filesystems, programming, datamanagement},
	Month = {July},
	Number = {UCSC-SOE-12-07},
	Title = {DataMods: Programmable File System Services},
	Type = {Technical Report},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YXRraW5zLXNvZXRyMTIucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E3dhdGtpbnMtc29ldHIxMi5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFXAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlc6d2F0a2lucy1zb2V0cjEyLnBkZgAADgAoABMAdwBhAHQAawBpAG4AcwAtAHMAbwBlAHQAcgAxADIALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL1cvd2F0a2lucy1zb2V0cjEyLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@inproceedings{bhagwan:spe12,
	Abstract = {In healthcare, de-identification is fast becoming a service that is indispensable when medical data needs to be used for research and secondary use purposes. Currently, this process is done either manually, by human agent, or by an automated software algorithm. Both approaches have shortcomings. Here, we introduce a framework for enhancing the outcome of the current modes of executing a de-identification service. This paper presents the steps taken in conceiving and building a privacy framework and tool that improves the service of de-identification. Further, we test the usefulness and applicability of this system through a study with HIPAA-trained experts.},
	Address = {Honolulu, HI},
	Author = {Varun Bhagwan and Tyrone Grandison and Carlos Maltzahn},
	Booktitle = {IEEE 2012 Services Workshop on Security and Privacy Engineering (SPE2012)},
	Date-Added = {2012-05-22 03:42:44 +0000},
	Date-Modified = {2020-01-05 05:29:59 -0700},
	Keywords = {papers, privacy, humancomputation, healthcare},
	Month = {June},
	Title = {Recommendation-based De-Identification | A Practical Systems Approach towards De-identification of Unstructured Text in Healthcare},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9iaGFnd2FuLXNwZTEyLnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFiaGFnd2FuLXNwZTEyLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABQgAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpCOmJoYWd3YW4tc3BlMTIucGRmAAAOACQAEQBiAGgAYQBnAHcAYQBuAC0AcwBwAGUAMQAyAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9CL2JoYWd3YW4tc3BlMTIucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@inproceedings{kato:usenix12,
	Abstract = {Graphics processing units (GPUs) have become a very powerful platform embracing a concept of heterogeneous many-core computing. However, application domains of GPUs are currently limited to specific systems, largely due to a lack of ``first-class'' GPU resource management for general-purpose multi-tasking systems.
We present Gdev, a new ecosystem of GPU resource management in the operating system (OS). It allows the user space as well as the OS itself to use GPUs as first-class computing resources. Specifically, Gdev's virtual memory manager supports data swapping for excessive memory resource demands, and also provides a shared device memory functionality that allows GPU contexts to communicate with other contexts. Gdev further provides a GPU scheduling scheme to virtualize a physical GPU into multiple logical GPUs, enhancing isolation among working sets of multi-tasking systems.
Our evaluation conducted on Linux and the NVIDIA GPU shows that the basic performance of our prototype implementation is reliable even compared to proprietary software. Further detailed experiments demonstrate that Gdev achieves a 2x speedup for an encrypted file system using the GPU in the OS. Gdev can also improve the makespan of dataflow programs by up to 49% exploiting shared device memory, while an error in the utilization of virtualized GPUs can be limited within only 7%.},
	Address = {Boston, MA},
	Author = {Shinpei Kato and Michael McThrow and Carlos Maltzahn and Scott A. Brandt},
	Booktitle = {USENIX ATC '12},
	Date-Added = {2012-04-06 22:55:09 +0000},
	Date-Modified = {2020-01-05 05:30:40 -0700},
	Keywords = {papers, gpgpu, kernel, linux, scheduling},
	Title = {Gdev: First-Class GPU Resource Management in the Operating System},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSy9rYXRvLXVzZW5peDEyLnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFrYXRvLXVzZW5peDEyLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABSwAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpLOmthdG8tdXNlbml4MTIucGRmAAAOACQAEQBrAGEAdABvAC0AdQBzAGUAbgBpAHgAMQAyAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9LL2thdG8tdXNlbml4MTIucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@inproceedings{liu:msst12,
	Abstract = {The largest-scale high-performance (HPC) systems are stretching parallel file systems to their limits in terms of aggregate bandwidth and numbers of clients. To further sustain the scalability of these file systems, researchers and HPC storage architects are exploring various storage system designs. One proposed storage system design integrates a tier of solid-state burst buffers into the storage system to absorb application I/O requests. In this paper, we simulate and explore this storage system design for use by large-scale HPC systems. First, we examine application I/O patterns on an existing large-scale HPC system to identify common burst patterns. Next, we describe enhancements to the CODES storage system simulator to enable our burst buffer simulations. These enhancements include the integration of a burst buffer model into the I/O forwarding layer of the simulator, the development of an I/O kernel description language and interpreter, the development of a suite of I/O kernels that are derived from observed I/O patterns, and fidelity improvements to the CODES models. We evaluate the I/O performance for a set of multiapplication I/O workloads and burst buffer configurations. We show that burst buffers can accelerate the application perceived throughput to the external storage system and can reduce the amount of external storage bandwidth required to meet a desired application perceived throughput goal.},
	Address = {Pacific Grove, CA},
	Author = {Ning Liu and Jason Cope and Philip Carns and Christopher Carothers and Robert Ross and Gary Grider and Adam Crume and Carlos Maltzahn},
	Booktitle = {MSST/SNAPI 2012},
	Date-Added = {2012-03-14 14:37:23 +0000},
	Date-Modified = {2020-01-05 05:31:12 -0700},
	Keywords = {papers, burstbuffer, simulation, hpc, distributed},
	Month = {April 16 - 20},
	Title = {On the Role of Burst Buffers in Leadership-class Storage Systems},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBDLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9saXUtbXNzdDEyLnBkZk8RAVgAAAAAAVgAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w5saXUtbXNzdDEyLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABTAAAAgA2LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpMOmxpdS1tc3N0MTIucGRmAA4AHgAOAGwAaQB1AC0AbQBzAHMAdAAxADIALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACEvTXkgRHJpdmUvUGFwZXJzL0wvbGl1LW1zc3QxMi5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAGoAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAABxg==},
	Bdsk-Url-1 = {http://www.mcs.anl.gov/uploads/cels/papers/P2070-0312.pdf}}

@inproceedings{crume:sc11poster,
	Address = {Seattle, WA},
	Author = {Adam Crume and Carlos Maltzahn and Jason Cope and Sam Lang and Rob Ross and Phil Carns and Chris Carothers and Ning Liu and Curtis L. Janssen and John Bent and Stephen Eidenbenz and Meghan Wingate},
	Booktitle = {Poster Session at SC 11},
	Date-Added = {2012-03-01 20:39:54 +0000},
	Date-Modified = {2020-01-05 05:31:34 -0700},
	Keywords = {shortpapers, machinelearning, simulation, performance},
	Month = {November 12-18},
	Title = {FLAMBES: Evolving Fast Performance Models},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQy9jcnVtZS1zYzExcG9zdGVyLnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xRjcnVtZS1zYzExcG9zdGVyLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABQwAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpDOmNydW1lLXNjMTFwb3N0ZXIucGRmAA4AKgAUAGMAcgB1AG0AZQAtAHMAYwAxADEAcABvAHMAdABlAHIALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL0MvY3J1bWUtc2MxMXBvc3Rlci5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@article{ames:peds12,
	Abstract = {File system metadata management has become a bottleneck for many data-intensive applications that rely on high-performance file systems. Part of the bottleneck is due to the limitations of an almost 50-year-old interface standard with metadata abstractions that were designed at a time when high-end file systems managed less than 100MB. Today's high-performance file systems store 7--9 orders of magnitude more data, resulting in a number of data items for which these metadata abstractions are inadequate, such as directory hierarchies unable to handle complex relationships among data. Users of file systems have attempted to work around these inadequacies by moving application-specific metadata management to relational databases to make metadata searchable. Splitting file system metadata management into two separate systems introduces inefficiencies and systems management problems. To address this problem, we propose QMDS: a file system metadata management service that integrates all file system metadata and uses a graph data model with attributes on nodes and edges. Our service uses a query language interface for file identification and attribute retrieval. We present our metadata management service design and architecture and study its performance using a text analysis benchmark application. Results from our QMDS prototype show the effectiveness of this approach. Compared to the use of a file system and relational database, the QMDS prototype shows superior performance for both ingest and query workloads.},
	Author = {Sasha Ames and Maya Gokhale and Carlos Maltzahn},
	Date-Added = {2012-02-27 18:02:43 +0000},
	Date-Modified = {2020-01-05 05:32:03 -0700},
	Journal = {International Journal of Parallel, Emergent and Distributed Systems},
	Keywords = {papers, metadata, management, graphs, filesystems, datamanagement},
	Number = {2},
	Title = {QMDS: a file system metadata management service supporting a graph data model-based query language},
	Volume = {27},
	Year = {2012},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBELi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQS9hbWVzLXBlZHMxMi5wZGZPEQFcAAAAAAFcAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8PYW1lcy1wZWRzMTIucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUEAAAIANy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6QTphbWVzLXBlZHMxMi5wZGYAAA4AIAAPAGEAbQBlAHMALQBwAGUAZABzADEAMgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIi9NeSBEcml2ZS9QYXBlcnMvQS9hbWVzLXBlZHMxMi5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAawAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHL}}

@techreport{ionkov:lanltr11,
	Author = {Ionkov, Latchesar and Lang, Michael and Maltzahn, Carlos},
	Date-Added = {2012-01-24 15:38:48 +0000},
	Date-Modified = {2012-01-24 15:38:48 +0000},
	Institution = {Los Alamos National Laboratory},
	Number = {LA-UR-11-11589},
	Title = {{DRepl: Optimizing Access to Application Data for Analysis and Visualization}},
	Type = {Technical Report},
	Year = {2011}}

@inproceedings{liu:ppam11,
	Abstract = {Exascale supercomputers will have the potential for billion-way parallelism. While physical implementations of these systems are currently not available, HPC system designers can develop models of exascale systems to evaluate system design points. Modeling these systems and associated subsystems is a significant challenge. In this paper, we present the Co-design of Exascale Storage System (CODES) framework for evaluating exascale storage system design points. As part of our early work with CODES, we discuss the use of the CODES framework to simulate leadership-scale storage systems in a tractable amount of time using parallel discrete-event simulation. We describe the current storage system models and protocols included with the CODES framework and demonstrate the use of CODES through simulations of an existing petascale storage system.
},
	Address = {Torun, Poland},
	Author = {Ning Liu and Christopher Carothers and Jason Cope and Philip Carns and Robert Ross and Adam Crume and Carlos Maltzahn},
	Booktitle = {PPAM 2011},
	Date-Added = {2012-01-17 01:13:05 +0000},
	Date-Modified = {2020-01-05 05:32:41 -0700},
	Keywords = {papers, simulation, exascale, storage, systems, parallel, filesystems, hpc},
	Month = {September 11-14},
	Title = {Modeling a Leadership-scale Storage System},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBDLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTC9saXUtcHBhbTExLnBkZk8RAVgAAAAAAVgAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w5saXUtcHBhbTExLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABTAAAAgA2LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpMOmxpdS1wcGFtMTEucGRmAA4AHgAOAGwAaQB1AC0AcABwAGEAbQAxADEALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACEvTXkgRHJpdmUvUGFwZXJzL0wvbGl1LXBwYW0xMS5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAGoAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAABxg==}}

@inproceedings{buck:sc11,
	Abstract = {Hadoop has become the de facto platform for large-scale data analysis in commercial applications, and increasingly so in scientific applications. However, Hadoop's byte stream data model causes inefficiencies when used to process scientific data that is commonly stored in highly-structured, array-based binary file formats resulting in limited scalability of Hadoop applications in science. We introduce SciHadoop, a Hadoop plugin allowing scientists to specify logical queries over array-based data models. SciHadoop executes queries as map/reduce programs defined over the logical data model. We describe the implementation of a SciHadoop prototype for NetCDF data sets and quantify the performance of five separate optimizations that address the following goals for several representative aggregate queries: reduce total data transfers, reduce remote reads, and reduce unnecessary reads. Two optimizations allow holistic aggregate queries to be evaluated opportunistically during the map phase; two additional optimizations intelligently partition input data to increase read locality, and one optimization avoids block scans by examining the data dependencies of an executing query to prune input partitions. Experiments involving a holistic function show run-time improvements of up to 8x, with drastic reductions of IO, both locally and over the network.},
	Address = {Seattle, WA},
	Author = {Joe Buck and Noah Watkins and Jeff LeFevre and Kleoni Ioannidou and Carlos Maltzahn and Neoklis Polyzotis and Scott A. Brandt},
	Booktitle = {SC '11},
	Date-Added = {2011-08-02 22:58:10 +0000},
	Date-Modified = {2020-01-05 05:34:48 -0700},
	Keywords = {papers, mapreduce, datamanagement, hpc, structured, netcdf},
	Month = {November},
	Read = {1},
	Title = {SciHadoop: Array-based Query Processing in Hadoop},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBCLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9idWNrLXNjMTEucGRmTxEBVAAAAAABVAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DWJ1Y2stc2MxMS5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFCAAACADUvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkI6YnVjay1zYzExLnBkZgAADgAcAA0AYgB1AGMAawAtAHMAYwAxADEALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACAvTXkgRHJpdmUvUGFwZXJzL0IvYnVjay1zYzExLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABpAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAcE=}}

@techreport{buck:tr0411,
	Author = {Joe Buck and Noah Watkins and Jeff LeFevre and Kleoni Ioannidou and Carlos Maltzahn and Neoklis Polyzotis and Scott A. Brandt},
	Date-Added = {2011-05-27 00:06:15 -0700},
	Date-Modified = {2011-05-27 00:15:42 -0700},
	Institution = {UCSC},
	Month = {April},
	Number = {UCSC-SOE-11-04},
	Title = {SciHadoop: Array-based Query Processing in Hadoop},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBELi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9idWNrLXRyMDQxMS5wZGZPEQFcAAAAAAFcAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8PYnVjay10cjA0MTEucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUIAAAIANy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6QjpidWNrLXRyMDQxMS5wZGYAAA4AIAAPAGIAdQBjAGsALQB0AHIAMAA0ADEAMQAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIi9NeSBEcml2ZS9QYXBlcnMvQi9idWNrLXRyMDQxMS5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAawAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHL}}

@inproceedings{estolano:nsdi10,
	Address = {San Jose, CA},
	Author = {Esteban Molina-Estolano and Carlos Maltzahn and Ben Reed and Scott A. Brandt},
	Booktitle = {Poster Session at NSDI 2010},
	Date-Added = {2011-05-26 23:31:27 -0700},
	Date-Modified = {2020-01-05 05:36:43 -0700},
	Keywords = {shortpapers, metadata, mapreduce, ceph},
	Month = {April 28-30},
	Title = {Haceph: Scalable Metadata Management for Hadoop using Ceph},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBTLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvRS1GL2Vlc3RvbGFuLW5zZGkxMC1hYnN0cmFjdC5wZGZPEQGWAAAAAAGWAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8cZWVzdG9sYW4tbnNkaTEwLWFic3RyYWN0LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA0UtRgAAAgBGLzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpFLUY6ZWVzdG9sYW4tbnNkaTEwLWFic3RyYWN0LnBkZgAOADoAHABlAGUAcwB0AG8AbABhAG4ALQBuAHMAZABpADEAMAAtAGEAYgBzAHQAcgBhAGMAdAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAMS9NeSBEcml2ZS9QYXBlcnMvRS1GL2Vlc3RvbGFuLW5zZGkxMC1hYnN0cmFjdC5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHoAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAACFA==},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBRLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvRS1GL2Vlc3RvbGFuLW5zZGkxMC1wb3N0ZXIucGRmTxEBjgAAAAABjgACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////GmVlc3RvbGFuLW5zZGkxMC1wb3N0ZXIucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAANFLUYAAAIARC86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6RS1GOmVlc3RvbGFuLW5zZGkxMC1wb3N0ZXIucGRmAA4ANgAaAGUAZQBzAHQAbwBsAGEAbgAtAG4AcwBkAGkAMQAwAC0AcABvAHMAdABlAHIALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASAC8vTXkgRHJpdmUvUGFwZXJzL0UtRi9lZXN0b2xhbi1uc2RpMTAtcG9zdGVyLnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAeAAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAIK}}

@inproceedings{wacha:eurosys10,
	Address = {Paris, France},
	Author = {Rosie Wacha and Scott A. Brandt and John Bent and Carlos Maltzahn},
	Booktitle = {Poster Session and Ph.D. Workshop at EuroSys 2010},
	Date-Added = {2011-05-26 23:29:21 -0700},
	Date-Modified = {2020-01-05 05:37:15 -0700},
	Keywords = {shortpapers, raid, flash},
	Month = {April 13-16},
	Title = {RAID4S: Adding SSDs to RAID Arrays},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBOLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93YWNoYS1ldXJvc3lzMTBwb3N0ZXIucGRmTxEBhAAAAAABhAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////GXdhY2hhLWV1cm9zeXMxMHBvc3Rlci5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFXAAACAEEvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlc6d2FjaGEtZXVyb3N5czEwcG9zdGVyLnBkZgAADgA0ABkAdwBhAGMAaABhAC0AZQB1AHIAbwBzAHkAcwAxADAAcABvAHMAdABlAHIALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACwvTXkgRHJpdmUvUGFwZXJzL1cvd2FjaGEtZXVyb3N5czEwcG9zdGVyLnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB1AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAf0=}}

@inproceedings{ames:nas11,
	Address = {Dalian, China},
	Author = {Sasha Ames and Maya B. Gokhale and Carlos Maltzahn},
	Booktitle = {NAS 2011},
	Date-Added = {2011-05-26 23:15:19 -0700},
	Date-Modified = {2011-05-26 23:17:11 -0700},
	Keywords = {papers, metadata, graphs, linking, filesystems},
	Month = {July 28-30},
	Title = {QMDS: A File System Metadata Management Service Supporting a Graph Data Model-based Query Language},
	Year = {2011}}

@inproceedings{pineiro:rtas11,
	Abstract = {Real-time systems and applications are becoming increasingly complex and often comprise multiple communicating tasks. The management of the individual tasks is well-understood, but the interaction of communicating tasks with different timing characteristics is less well-understood. We discuss several representative inter-task communication flows via reserved memory buffers (possibly interconnected via a real-time network) and present RAD-Flows, a model for managing these interactions. We provide proofs and simulation results demonstrating the correctness and effectiveness of RAD-Flows, allowing system designers to determine the amount of memory required based upon the characteristics of the interacting tasks and to guarantee real-time operation of the system as a whole.},
	Address = {Chicago, IL},
	Author = {Roberto Pineiro and Kleoni Ioannidou and Carlos Maltzahn and Scott A. Brandt},
	Booktitle = {RTAS 2011},
	Date-Added = {2010-12-15 12:11:43 -0800},
	Date-Modified = {2020-01-05 05:37:41 -0700},
	Keywords = {papers, memory, realtime, qos, performance, management},
	Month = {April 11-14},
	Title = {RAD-FLOWS: Buffering for Predictable Communication},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUC9waW5laXJvLXJ0YXMxMS5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8ScGluZWlyby1ydGFzMTEucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVAAAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6UDpwaW5laXJvLXJ0YXMxMS5wZGYADgAmABIAcABpAG4AZQBpAHIAbwAtAHIAdABhAHMAMQAxAC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9QL3BpbmVpcm8tcnRhczExLnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@article{maltzahn:login10,
	Abstract = {The Hadoop Distributed File System (HDFS) has a single metadata server that sets a hard limit on its maximum size. Ceph, a high-performance distributed file system under development since 2005 and now supported in Linux, bypasses the scaling limits of HDFS. We describe Ceph and its elements and provide instructions for installing a demonstration system that can be used with Hadoop.},
	Author = {Carlos Maltzahn and Esteban Molina-Estolano and Amandeep Khurana and Alex J. Nelson and Scott A. Brandt and Sage A. Weil},
	Date-Added = {2010-09-30 15:19:48 -0700},
	Date-Modified = {2020-01-05 05:43:26 -0700},
	Journal = {;login: The USENIX Magazine},
	Keywords = {papers, filesystems, parallel, hadoop, mapreduce, storage},
	Number = {4},
	Title = {Ceph as a Scalable Alternative to the Hadoop Distributed File System},
	Volume = {35},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1sb2dpbjEwLnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xRtYWx0emFobi1sb2dpbjEwLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABTQAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpNOm1hbHR6YWhuLWxvZ2luMTAucGRmAA4AKgAUAG0AYQBsAHQAegBhAGgAbgAtAGwAbwBnAGkAbgAxADAALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL00vbWFsdHphaG4tbG9naW4xMC5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==}}

@inproceedings{maltzahn:fast10,
	Address = {San Jose, CA},
	Author = {Carlos Maltzahn and Michael Mateas and Jim Whitehead},
	Booktitle = {Work-in-Progress and Poster Session at FAST'10},
	Date-Added = {2010-03-01 16:46:58 -0800},
	Date-Modified = {2020-01-05 05:44:34 -0700},
	Keywords = {shortpapers, casual, games, ir, datamanagement, pim},
	Month = {February 24-27},
	Title = {InfoGarden: A Casual-Game Approach to Digital Archive Management},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1mYXN0d2lwMTAucGRmTxEBeAAAAAABeAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////Fm1hbHR6YWhuLWZhc3R3aXAxMC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFNAAACAD4vOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOk06bWFsdHphaG4tZmFzdHdpcDEwLnBkZgAOAC4AFgBtAGEAbAB0AHoAYQBoAG4ALQBmAGEAcwB0AHcAaQBwADEAMAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1mYXN0d2lwMTAucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAByAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAe4=},
	Bdsk-File-2 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBRLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1mYXN0d2lwMTBzbGlkZXMucGRmTxEBkAAAAAABkAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////HG1hbHR6YWhuLWZhc3R3aXAxMHNsaWRlcy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFNAAACAEQvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOk06bWFsdHphaG4tZmFzdHdpcDEwc2xpZGVzLnBkZgAOADoAHABtAGEAbAB0AHoAYQBoAG4ALQBmAGEAcwB0AHcAaQBwADEAMABzAGwAaQBkAGUAcwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIALy9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1mYXN0d2lwMTBzbGlkZXMucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB4AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAgw=},
	Bdsk-File-3 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBRLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1mYXN0d2lwMTBwb3N0ZXIucGRmTxEBkAAAAAABkAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////HG1hbHR6YWhuLWZhc3R3aXAxMHBvc3Rlci5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFNAAACAEQvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOk06bWFsdHphaG4tZmFzdHdpcDEwcG9zdGVyLnBkZgAOADoAHABtAGEAbAB0AHoAYQBoAG4ALQBmAGEAcwB0AHcAaQBwADEAMABwAG8AcwB0AGUAcgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIALy9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1mYXN0d2lwMTBwb3N0ZXIucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB4AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAgw=},
	Bdsk-Url-1 = {http://www.cs.ucsc.edu/%7Ecarlosm/Infogarden/FAST_2010_WiP_Talk.html}}

@inproceedings{polte:fast10,
	Address = {San Jose, CA},
	Author = {Milo Polte and Esteban Molina-Estolano and John Bent and Scott A. Brandt and Garth A. Gibson and Maya Gokhale and Carlos Maltzahn and Meghan Wingate},
	Booktitle = {Work-in-Progress and Poster Session at FAST'10},
	Date-Added = {2010-03-01 16:40:17 -0800},
	Date-Modified = {2010-03-01 16:46:40 -0800},
	Month = {February 24-27},
	Title = {Enabling Scientific Application I/O on Cloud FileSystems},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBFLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUC9wb2x0ZS1mYXN0MTAucGRmTxEBYAAAAAABYAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EHBvbHRlLWZhc3QxMC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFQAAACADgvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlA6cG9sdGUtZmFzdDEwLnBkZgAOACIAEABwAG8AbAB0AGUALQBmAGEAcwB0ADEAMAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIy9NeSBEcml2ZS9QYXBlcnMvUC9wb2x0ZS1mYXN0MTAucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABsAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAdA=}}

@techreport{ames:tr0710,
	Author = {Sasha Ames and Maya B. Gokhale and Carlos Maltzahn},
	Date-Added = {2010-02-04 09:10:55 -0800},
	Date-Modified = {2010-02-04 09:13:17 -0800},
	Institution = {UCSC},
	Month = {February},
	Number = {UCSC-SOE-10-07},
	Title = {Design and Implementation of a Metadata-Rich File System},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxAuLi4vLi4vLi4vc3ZuL3Fmcy9tc3N0MTAtcWZzL1VDU0MtU09FLTEwLTA3LnBkZk8RAXIAAAAAAXIAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xJVQ1NDLVNPRS0xMC0wNy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAMABAAACiBjdQAAAAAAAAAAAAAAAAAKbXNzdDEwLXFmcwACADgvOlVzZXJzOmNhcmxvc21hbHQ6c3ZuOnFmczptc3N0MTAtcWZzOlVDU0MtU09FLTEwLTA3LnBkZgAOACYAEgBVAEMAUwBDAC0AUwBPAEUALQAxADAALQAwADcALgBwAGQAZgAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASADZVc2Vycy9jYXJsb3NtYWx0L3N2bi9xZnMvbXNzdDEwLXFmcy9VQ1NDLVNPRS0xMC0wNy5wZGYAEwABLwAAFQACABH//wAAAAgADQAaACQAVQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHL}}

@inproceedings{brandt:pdsw09,
	Abstract = {File systems are the backbone of large-scale data processing for scientific applications. Motivated by the need to provide an extensible and flexible framework beyond the abstractions provided by API libraries for files to manage and analyze large-scale data, we are developing Damasc, an enhanced file system where rich data management services for scientific computing are provided as a native part of the file system.
This paper presents our vision for Damasc, a performant file system that would allow scientists or even casual users to pose declarative queries and updates over views of underlying files that are stored in their native bytestream format. In Damasc, a configurable layer is added on top of the file system to expose the contents of files in a logical data model through which views can be defined and used for queries and updates. The logical data model and views are leveraged to optimize access to files through caching and self-organizing indexing. In addition, provenance capture and analysis to file access is also built into Damasc. We describe the salient features of our proposal and discuss how it can benefit the development of scientific code.
},
	Address = {Portland, OR},
	Author = {Scott A. Brandt and Carlos Maltzahn and Neoklis Polyzotis and Wang-Chiew Tan},
	Booktitle = {Proceedings of the 2009 ACM Petascale Data Storage Workshop (PDSW 09)},
	Date-Added = {2010-01-26 23:50:43 -0800},
	Date-Modified = {2020-01-05 05:49:01 -0700},
	Keywords = {papers, datamanagement, filesystems},
	Month = {November 15},
	Title = {Fusing Data Management Services with File Systems},
	Year = {2009},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9icmFuZHQtcGRzdzA5LnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFicmFuZHQtcGRzdzA5LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABQgAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpCOmJyYW5kdC1wZHN3MDkucGRmAAAOACQAEQBiAHIAYQBuAGQAdAAtAHAAZABzAHcAMAA5AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9CL2JyYW5kdC1wZHN3MDkucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@inproceedings{estolano:fast09,
	Address = {San Francisco, CA},
	Author = {Esteban Molina-Estolano and Carlos Maltzahn and Scott A. Brandt and John Bent},
	Booktitle = {WiP at FAST '09},
	Date-Added = {2010-01-13 22:52:32 -0800},
	Date-Modified = {2010-01-13 23:06:07 -0800},
	Month = {February 24-27},
	Title = {Comparing the Performance of Different Parallel File system Placement Strategies},
	Year = {2009},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvRS1GL2VzdG9sYW5vLWZhc3QwOS5wZGZPEQFyAAAAAAFyAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8TZXN0b2xhbm8tZmFzdDA5LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA0UtRgAAAgA9LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpFLUY6ZXN0b2xhbm8tZmFzdDA5LnBkZgAADgAoABMAZQBzAHQAbwBsAGEAbgBvAC0AZgBhAHMAdAAwADkALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACgvTXkgRHJpdmUvUGFwZXJzL0UtRi9lc3RvbGFuby1mYXN0MDkucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHEAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5w==}}

@inproceedings{estolano:pdsw09,
	Abstract = {MapReduce-tailored distributed filesystems---such as HDFS for Hadoop MapReduce---and parallel high-performance computing filesystems are tailored for considerably different workloads. The purpose of our work is to examine the performance of each filesystem when both sorts of workload run on it concurrently.
We examine two workloads on two filesystems. For the HPC workload, we use the IOR checkpointing benchmark and the Parallel Virtual File System, Version 2 (PVFS); for Hadoop, we use an HTTP attack classifier and the CloudStore filesystem. We analyze the performance of each file system when it concurrently runs its ``native'' workload as well as the non-native workload.},
	Address = {Portland, OR},
	Author = {Esteban Molina-Estolano and Maya Gokhale and Carlos Maltzahn and John May and John Bent and Scott Brandt},
	Booktitle = {Proceedings of the 2009 ACM Petascale Data Storage Workshop (PDSW 09)},
	Date-Added = {2010-01-03 23:04:09 -0800},
	Date-Modified = {2020-01-05 05:51:32 -0700},
	Keywords = {papers, performance, hpc, mapreduce, filesystems},
	Month = {November 15},
	Title = {Mixing Hadoop and HPC Workloads on Parallel Filesystems},
	Year = {2009},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvRS1GL2VzdG9sYW5vLXBkc3cwOS5wZGZPEQFyAAAAAAFyAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8TZXN0b2xhbm8tcGRzdzA5LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA0UtRgAAAgA9LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpFLUY6ZXN0b2xhbm8tcGRzdzA5LnBkZgAADgAoABMAZQBzAHQAbwBsAGEAbgBvAC0AcABkAHMAdwAwADkALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACgvTXkgRHJpdmUvUGFwZXJzL0UtRi9lc3RvbGFuby1wZHN3MDkucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHEAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5w==}}

@inproceedings{ames:sosp07,
	Address = {Stevenson, WA},
	Author = {Sasha Ames and Carlos Maltzahn and Ethan L. Miller},
	Booktitle = {Poster Session at the 21st Symposium on Operating Systems Principles (SOSP 2007)},
	Date-Added = {2009-09-29 12:08:09 -0700},
	Date-Modified = {2019-12-29 16:44:11 -0800},
	Keywords = {shortpapers, metadata, filesystems, querying},
	Month = {October},
	Title = {A File System Query Language},
	Year = {2007}}

@techreport{weil:tr-ucsc-ceph06,
	Author = {Sage A. Weil and Scott A. Brandt and Ethan L. Miller and Darrell D. E. Long and Carlos Maltzahn},
	Date-Added = {2009-09-29 12:08:09 -0700},
	Date-Modified = {2009-12-14 11:54:46 -0800},
	Institution = {University of California, Santa Cruz},
	Local-Url = {/Users/carlosmalt/Documents/Papers/weil-tr-ucsc-ceph06.pdf},
	Month = {Jan},
	Number = {SSRC-06-02},
	Title = {Ceph: A Scalable Object-based Storage System},
	Year = {2006},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBJLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93ZWlsLXBoZHRoZXNpczA3LnBkZk8RAXAAAAAAAXAAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xR3ZWlsLXBoZHRoZXNpczA3LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABVwAAAgA8LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpXOndlaWwtcGhkdGhlc2lzMDcucGRmAA4AKgAUAHcAZQBpAGwALQBwAGgAZAB0AGgAZQBzAGkAcwAwADcALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACcvTXkgRHJpdmUvUGFwZXJzL1cvd2VpbC1waGR0aGVzaXMwNy5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHAAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5A==},
	Bdsk-Url-1 = {http://ceph.newdream.net/weil-thesis.pdf}}

@techreport{weil:tr-ucsc-crush06,
	Author = {Sage A. Weil and Scott A. Brandt and Ethan L. Miller and Carlos Maltzahn},
	Date-Added = {2009-09-29 12:08:09 -0700},
	Date-Modified = {2009-12-14 11:54:46 -0800},
	Institution = {University of California, Santa Cruz},
	Local-Url = {/Users/carlosmalt/Documents/Papers/weil-tr-ucsc-crush06.pdf},
	Month = {Jan},
	Number = {SSRC-06-01},
	Title = {{CRUSH}: Controlled, Scalable, Decentralized Placement of Replicated Data},
	Year = {2006},
	Bdsk-Url-1 = {http://www.ssrc.ucsc.edu/Papers/weil-tr-crush06.pdf}}

@inproceedings{bigelow:pdsw07,
	Abstract = {Many applications---for example, scientific simulation, real-time data acquisition, and distributed reservation systems---have I/O performance requirements, yet most large, distributed storage systems lack the ability to guarantee I/O performance. We are working on end-to-end performance management in scalable, distributed storage systems. The kinds of storage systems we are targeting include large high-performance computing (HPC) clusters, which require both large data volumes and high I/O rates, as well as large-scale general-purpose storage systems.},
	Address = {Reno, NV},
	Author = {David Bigelow and Suresh Iyer and Tim Kaldewey and Roberto Pineiro and Anna Povzner and Scott A. Brandt and Richard Golding and Theodore Wong and Carlos Maltzahn},
	Booktitle = {Proceedings of the 2007 ACM Petascale Data Storage Workshop (PDSW 07)},
	Date-Added = {2009-09-29 12:08:09 -0700},
	Date-Modified = {2020-01-05 05:56:32 -0700},
	Keywords = {papers, performance, management, distributed, storage, scalable},
	Title = {End-to-end Performance Management for Scalable Distributed Storage},
	Year = {2007},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9iaWdlbG93LXBkc3cwNy5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8SYmlnZWxvdy1wZHN3MDcucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUIAAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6QjpiaWdlbG93LXBkc3cwNy5wZGYADgAmABIAYgBpAGcAZQBsAG8AdwAtAHAAZABzAHcAMAA3AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9CL2JpZ2Vsb3ctcGRzdzA3LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@inproceedings{bobb:wdas06,
	Address = {San Jose, CA},
	Author = {Nikhil Bobb and Damian Eads and Mark W. Storer and Scott A. Brandt and Carlos Maltzahn and Ethan L. Miller},
	Booktitle = {Proceedings of the 7th International Workshop on Distributed Data and Structures (WDAS 2006)},
	Date-Added = {2009-09-29 12:08:09 -0700},
	Date-Modified = {2020-01-05 05:57:37 -0700},
	Local-Url = {/Users/carlosmalt/Documents/Papers/bobb-wdas06.pdf},
	Month = {January},
	Title = {{Graffiti}: A Framework for Testing Collaborative Distributed Metadata},
	Year = {2006},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBELi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9ib2JiLXdkYXMwNi5wZGZPEQFcAAAAAAFcAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8PYm9iYi13ZGFzMDYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUIAAAIANy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Qjpib2JiLXdkYXMwNi5wZGYAAA4AIAAPAGIAbwBiAGIALQB3AGQAYQBzADAANgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIi9NeSBEcml2ZS9QYXBlcnMvQi9ib2JiLXdkYXMwNi5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAawAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHL}}

@inproceedings{storer:sisw05,
	Author = {Mark Storer and Kevin Greenan and Ethan L. Miller and Carlos Maltzahn},
	Booktitle = {Proceedings of the 3rd International IEEE Security in Storage Workshop},
	Date-Added = {2009-09-29 12:08:09 -0700},
	Date-Modified = {2009-12-14 11:54:42 -0800},
	Local-Url = {/Users/carlosmalt/Documents/Papers/storer-sisw05.pdf},
	Month = dec,
	Title = {POTSHARDS: Storing Data for the Long-term Without Encryption},
	Year = 2005,
	Bdsk-Url-1 = {http://www.ssrc.ucsc.edu/Papers/storer-sisw05.pdf}}

@techreport{weil:tr-ucsc-rados07,
	Author = {Sage Weil and Carlos Maltzahn and Scott A. Brandt},
	Date-Added = {2009-09-29 12:08:09 -0700},
	Date-Modified = {2009-12-14 11:54:46 -0800},
	Institution = {University of California, Santa Cruz},
	Local-Url = {/Users/carlosmalt/Documents/Papers/weil-tr-ucsc-rados07.pdf},
	Month = {Jan},
	Note = {Please notify the authors when citing this tech report in a paper for publication},
	Number = {SSRC-07-01},
	Title = {RADOS: A Reliable Autonomic Distributed Object Store},
	Year = {2007},
	Bdsk-Url-1 = {http://www.ssrc.ucsc.edu/Papers/weil-tr-rados07.pdf}}

@inproceedings{buck:dadc09,
	Abstract = {High-end computing is increasingly I/O bound as computations become more data-intensive, and data transport technologies struggle to keep pace with the demands of large-scale, distributed computations. One approach to avoiding unnecessary I/O is to move the processing to the data, as seen in Google's successful, but relatively specialized, MapReduce system. This paper discusses our investigation towards a general solution for enabling in-situ computation in a peta-scale storage system. We believe our work with flexible, application-specific structured storage is the key to addressing the I/O overhead caused by data partitioning across storage nodes. In order to manage competing workloads on storage nodes, our research in system performance management is leveraged. Our ultimate goal is a general framework for in-situ data-intensive processing, indexing, and searching, which we expect to provide orders of magnitude performance increases for data-intensive workloads.},
	Address = {Munich, Germany},
	Author = {Joe Buck and Noah Watkins and Carlos Maltzahn and Scott A. Brandt},
	Booktitle = {2nd International Workshop on Data-Aware Distributed Computing (in conjunction with HPDC-18)},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:01:11 -0700},
	Keywords = {papers, filesystems, programmable},
	Month = {June 9},
	Title = {Abstract Storage: Moving file format-specific abstractions into petabyte-scale storage systems},
	Year = {2009},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBELi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9idWNrLWRhZGMwOS5wZGZPEQFcAAAAAAFcAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8PYnVjay1kYWRjMDkucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAUIAAAIANy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6QjpidWNrLWRhZGMwOS5wZGYAAA4AIAAPAGIAdQBjAGsALQBkAGEAZABjADAAOQAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIi9NeSBEcml2ZS9QYXBlcnMvQi9idWNrLWRhZGMwOS5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAawAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHL}}

@inproceedings{brandt:ospert08,
	Abstract = {Real-time systems are growing in size and complexity and must often manage multiple competing tasks in environments where CPU is not the only limited shared resource. Memory, network, and other devices may also be shared and system-wide performance guarantees may require the allocation and scheduling of many diverse resources. We present our on-going work on performance management in a representative distributed real-time system---a distributed storage system with performance requirements---and discuss our integrated model for managing diverse resources to provide end-to-end performance guarantees.
},
	Address = {Prague, Czech Republic},
	Author = {Scott A. Brandt and Carlos Maltzahn and Anna Povzner and Roberto Pineiro and Andrew Shewmaker and Tim Kaldewey},
	Booktitle = {OSPERT 2008},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:01:44 -0700},
	Keywords = {papers, storage, systems, distributed, performance, management, qos, realtime},
	Month = {July},
	Title = {An Integrated Model for Performance Management in a Distributed System},
	Year = {2008},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQi9icmFuZHQtb3NwZXJ0MDgucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E2JyYW5kdC1vc3BlcnQwOC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFCAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOkI6YnJhbmR0LW9zcGVydDA4LnBkZgAADgAoABMAYgByAGEAbgBkAHQALQBvAHMAcABlAHIAdAAwADgALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL0IvYnJhbmR0LW9zcGVydDA4LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@article{estolano:jpcs09,
	Abstract = {Parallel file systems are gaining in popularity in high-end computing centers as well as commercial data centers. High-end computing systems are expected to scale exponentially and to pose new challenges to their storage scalability in terms of cost and power. To address these challenges scientists and file system designers will need a thorough understanding of the design space of parallel file systems. Yet there exist few systematic studies of parallel file system behavior at petabyte- and exabyte scale. An important reason is the significant cost of getting access to large-scale hardware to test parallel file systems. To contribute to this understanding we are building a parallel file system simulator that can simulate parallel file systems at very large scale. Our goal is to simulate petabyte-scale parallel file systems on a small cluster or even a single machine in reasonable time and fidelity. With this simulator, file system experts will be able to tune existing file systems for specific workloads, scientists and file system deployment engineers will be able to better communicate workload requirements, file system designers and researchers will be able to try out design alternatives and innovations at scale, and instructors will be able to study very large-scale parallel file system behavior in the class room. In this paper we describe our approach and provide preliminary results that are encouraging both in terms of fidelity and simulation scalability.},
	Author = {Esteban Molina-Estolano and Carlos Maltzahn and John Bent and Scott A. Brandt},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:02:20 -0700},
	Journal = {J. Phys.: Conf. Ser.},
	Keywords = {papers, performance, simulation, filesystems},
	Number = {012050},
	Title = {Building a Parallel File System Simulator},
	Volume = {126},
	Year = {2009},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvRS1GL2VzdG9sYW5vLWpwY3MwOS5wZGZPEQFyAAAAAAFyAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8TZXN0b2xhbm8tanBjczA5LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA0UtRgAAAgA9LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpFLUY6ZXN0b2xhbm8tanBjczA5LnBkZgAADgAoABMAZQBzAHQAbwBsAGEAbgBvAC0AagBwAGMAcwAwADkALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACgvTXkgRHJpdmUvUGFwZXJzL0UtRi9lc3RvbGFuby1qcGNzMDkucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAHEAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB5w==}}

@inproceedings{weil:osdi06,
	Abstract = {provides excellent performance, reliability, and scalability. Ceph maximizes the separation between data and metadata management by replacing allocation tables with a pseudo-random data distribution function (CRUSH) designed for heterogeneous and dynamic clusters of unreliable object storage devices (OSDs). We leverage device intelligence by distributing data replication, failure detection and recovery to semi-autonomous OSDs running a specialized local object file system. A dynamic distributed metadata cluster provides extremely efficient metadata management and seamlessly adapts to a wide range of general purpose and scientific computing file system workloads. Performance measurements under a variety of workloads show that Ceph has excellent I/O performance and scalable metadata management, supporting more than 250,000 metadata operations per second.
},
	Address = {Seattle, WA},
	Author = {Sage A. Weil and Scott A. Brandt and Ethan L. Miller and Darrell D. E. Long and Carlos Maltzahn},
	Booktitle = {OSDI'06},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:03:57 -0700},
	Keywords = {papers, parallel, filesystems, distributed, storage, systems, obsd, p2p},
	Month = {November},
	Read = {1},
	Title = {{Ceph}: A Scalable, High-Performance Distributed File System},
	Year = 2006,
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBELi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93ZWlsLW9zZGkwNi5wZGZPEQFcAAAAAAFcAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Pd2VpbC1vc2RpMDYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVcAAAIANy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Vzp3ZWlsLW9zZGkwNi5wZGYAAA4AIAAPAHcAZQBpAGwALQBvAHMAZABpADAANgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIi9NeSBEcml2ZS9QYXBlcnMvVy93ZWlsLW9zZGkwNi5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAawAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHL}}

@inproceedings{maltzahn:chi95,
	Abstract = {In a research community each research er knows only a small fraction of the vast number of tools offered in the continually changing environment of local computer networks. Since the on-line or off-line documentation for these tools poorly support people in finding the best tool for a given task, users prefer to ask colleagues. however, finding the right person to ask can be time consuming and asking questions can reveal incompetence. In this paper we present an architecture to a community sensitive help system which actively collects information about Unix tools by tapping into accounting information generated by the operating system and by interviewing users that are selected on the basis of collected information. The result is a help system that continually seeks to update itself, that contains information  that is entirely based on the community's perspective on tools, and that consequently grows with the community and its dynamic environments.},
	Address = {Denver, CO},
	Author = {Carlos Maltzahn},
	Booktitle = {CHI '95},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:06:12 -0700},
	Keywords = {papers, cscw},
	Month = {May},
	Title = {Community Help: Discovering Tools and Locating Experts in a Dynamic Environment},
	Year = {1995},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1jaGk5NS5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8SbWFsdHphaG4tY2hpOTUucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAU0AAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6TTptYWx0emFobi1jaGk5NS5wZGYADgAmABIAbQBhAGwAdAB6AGEAaABuAC0AYwBoAGkAOQA1AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9NL21hbHR6YWhuLWNoaTk1LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@inproceedings{weil:sc06,
	Abstract = {Emerging large-scale distributed storage systems are faced with the task of distributing petabytes of data among tens or hundreds of thousands of storage devices. Such systems must evenly distribute data and workload to efficiently utilize available resources and maximize system performance, while facilitating system growth and managing hardware failures. We have developed CRUSH, a scalable pseudo-random data distribution function designed for distributed object-based storage systems that efficiently maps data objects to storage devices without relying on a central directory. Because large systems are inherently dynamic, CRUSH is designed to facilitate the addition and removal of storage while minimizing unnecessary data movement. The algorithm accommodates a wide variety of data replication and reliability mechanisms and distributes data in terms of user-defined policies that enforce separation of replicas across failure domains.},
	Address = {Tampa, FL},
	Author = {Sage A. Weil and Scott A. Brandt and Ethan L. Miller and Carlos Maltzahn},
	Booktitle = {SC '06},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:10:11 -0700},
	Keywords = {papers, hashing, parallel, filesystems, placement, related:ceph, obsd},
	Month = {November},
	Publisher = {ACM},
	Title = {{CRUSH}: Controlled, Scalable, Decentralized Placement of Replicated Data},
	Year = {2006},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBCLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93ZWlsLXNjMDYucGRmTxEBVAAAAAABVAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////DXdlaWwtc2MwNi5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFXAAACADUvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOlc6d2VpbC1zYzA2LnBkZgAADgAcAA0AdwBlAGkAbAAtAHMAYwAwADYALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACAvTXkgRHJpdmUvUGFwZXJzL1cvd2VpbC1zYzA2LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABpAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAcE=}}

@unpublished{kroeger:unpublished96,
	Author = {Thomas M. Kroeger and Jeff Mogul and Carlos Maltzahn},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2009-12-14 11:55:00 -0800},
	Local-Url = {/Users/carlosmalt/Documents/Papers/kroeger-unpublished96.pdf},
	Note = {ftp://ftp.digital.com/pub/DEC/traces/proxy/webtraces.v1.2.html},
	Title = {{D}igital's {W}eb Proxy Traces},
	Year = {1996}}

@article{povzner:osr08,
	Abstract = {Guaranteed I/O performance is needed for a variety of applications ranging from real-time data collection to desktop multimedia to large-scale scientific simulations. Reservations on throughput, the standard measure of disk performance, fail to effectively manage disk performance due to the orders of magnitude difference between best-, average-, and worst-case response times, allowing reservation of less than 0.01% of the achievable bandwidth. We show that by reserving disk resources in terms of utilization it is possible to create a disk scheduler that supports reservation of nearly 100% of the disk resources, provides arbitrarily hard or soft guarantees depending upon application needs, and yields efficiency as good or better than best-effort disk schedulers tuned for performance. We present the architecture of our scheduler, prove the correctness of its algorithms, and provide results demonstrating its effectiveness.},
	Author = {Anna Povzner and Tim Kaldewey and Scott A. Brandt and Richard Golding and Theodore Wong and Carlos Maltzahn},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:12:06 -0700},
	Journal = {Operating Systems Review},
	Keywords = {papers, predictable, performance, storage, media, realtime},
	Month = {May},
	Number = {4},
	Pages = {13-25},
	Title = {Efficient Guaranteed Disk Request Scheduling with Fahrrad},
	Volume = {42},
	Year = {2008},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBGLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUC9wb3Z6bmVyLW9zcjA4LnBkZk8RAWQAAAAAAWQAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xFwb3Z6bmVyLW9zcjA4LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABUAAAAgA5LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpQOnBvdnpuZXItb3NyMDgucGRmAAAOACQAEQBwAG8AdgB6AG4AZQByAC0AbwBzAHIAMAA4AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAkL015IERyaXZlL1BhcGVycy9QL3BvdnpuZXItb3NyMDgucGRmABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG0AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB1Q==}}

@inproceedings{povzner:eurosys08,
	Abstract = {Guaranteed I/O performance is needed for a variety of applications ranging from real-time data collection to desktop multimedia to large-scale scientific simulations. Reservations on throughput, the standard measure of disk performance, fail to effectively manage disk performance due to the orders of magnitude difference between best-, average-, and worst-case response times, allowing reservation of less than 0.01% of the achievable bandwidth. We show that by reserving disk resources in terms of utilization it is possible to create a disk scheduler that supports reservation of nearly 100% of the disk resources, provides arbitrarily hard or soft guarantees depending upon application needs, and yields efficiency as good or better than best-effort disk schedulers tuned for performance. We present the architecture of our scheduler, prove the correctness of its algorithms, and provide results demonstrating its effectiveness.},
	Address = {Glasgow, Scottland},
	Author = {Anna Povzner and Tim Kaldewey and Scott A. Brandt and Richard Golding and Theodore Wong and Carlos Maltzahn},
	Booktitle = {Eurosys 2008},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:12:26 -0700},
	Keywords = {papers, performance, management, storage, systems, fahrrad, rbed, realtime, qos},
	Month = {March 31 - April 4},
	Title = {Efficient Guaranteed Disk Request Scheduling with Fahrrad},
	Year = {2008},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUC9wb3Z6bmVyLWV1cm9zeXMwOC5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8VcG92em5lci1ldXJvc3lzMDgucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVAAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6UDpwb3Z6bmVyLWV1cm9zeXMwOC5wZGYAAA4ALAAVAHAAbwB2AHoAbgBlAHIALQBlAHUAcgBvAHMAeQBzADAAOAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvUC9wb3Z6bmVyLWV1cm9zeXMwOC5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp}}

@article{maltzahn:ddas07,
	Abstract = {Managing storage in the face of relentless growth in the number and variety of files on storage systems creates demand for rich file system metadata as is made evident by the recent emergence of rich metadata support in many applications as well as file systems. Yet, little support exists for sharing metadata across file systems even though it is not uncommon for users to manage multiple file systems and to frequently share copies of files across devices and with other users. Encouraged by the surge in popularity for collaborative bookmarking sites that share the burden of creating metadata for online content [21] we present Graffiti, a distributed organization layer for collaboratively sharing rich metadata across heterogeneous file systems. The primary purpose of Graffiti is to provide a research and rapid prototyping platform for managing metadata across file systems and users.},
	Author = {Carlos Maltzahn and Nikhil Bobb and Mark W. Storer and Damian Eads and Scott A. Brandt and Ethan L. Miller},
	Booktitle = {Distributed Data \& Structures 7},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:13:12 -0700},
	Editor = {Thomas Schwarz},
	Journal = {Proceedings in Informatics},
	Keywords = {papers, pim, tagging, distributed, naming, linking, metadata},
	Pages = {97-111},
	Publisher = {Carleton Scientific},
	Read = {Yes},
	Title = {Graffiti: A Framework for Testing Collaborative Distributed Metadata},
	Volume = {21},
	Year = {2007},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1kZGFzMDcucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E21hbHR6YWhuLWRkYXMwNy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFNAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOk06bWFsdHphaG4tZGRhczA3LnBkZgAADgAoABMAbQBhAGwAdAB6AGEAaABuAC0AZABkAGEAcwAwADcALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL00vbWFsdHphaG4tZGRhczA3LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@inproceedings{rose:caise92,
	Abstract = {Repositories provide the information system's support to layer software environments. Initially, repository technology has been dominated by object representation issues. Teams are not part of the ball game. In this paper, we propose the concept of sharing processes which supports distribution and sharing of objects and tasks by teams. Sharing processes are formally specified as classes of non-deterministic f'mite automata connected to each other by deduction rules. They are intended to coordinate object access and communication for task distribution in large development projects. In particular, we show how interactions between both sharings improve object management.},
	Address = {Manchester, UK},
	Author = {Thomas Rose and Carlos Maltzahn and Matthias Jarke},
	Booktitle = {Advanced Information Systems Engineering (CAiSE'92)},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:14:53 -0700},
	Editor = {Pericles Loucopoulos},
	Keywords = {papers, sharing, cscw, datamanagement},
	Month = {May 12--15},
	Pages = {17--32},
	Publisher = {Springer Berlin / Heidelberg},
	Series = {Lecture Notes in Computer Science},
	Title = {Integrating object and agent worlds},
	Volume = {593},
	Year = {1992},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUS1SL3Jvc2UtY2Fpc2U5Mi5wZGZPEQFmAAAAAAFmAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Qcm9zZS1jYWlzZTkyLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAA1EtUgAAAgA6LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpRLVI6cm9zZS1jYWlzZTkyLnBkZgAOACIAEAByAG8AcwBlAC0AYwBhAGkAcwBlADkAMgAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAJS9NeSBEcml2ZS9QYXBlcnMvUS1SL3Jvc2UtY2Fpc2U5Mi5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAG4AAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAB2A==}}

@inproceedings{ames:mss06,
	Abstract = {As the number and variety of files stored and accessed by a typical user has dramatically increased, existing file system structures have begun to fail as a mechanism for managing all of the information contained in those files. Many applications---email clients, multimedia management applications, and desktop search engines are examples--- have been forced to develop their own richer metadata infrastructures. While effective, these solutions are generally non-standard, non-portable, non-sharable across applications, users or platforms, proprietary, and potentially inefficient. In the interest of providing a rich, efficient, shared file system metadata infrastructure, we have developed the Linking File System (LiFS). Taking advantage of non-volatile storage class memories, LiFS supports a wide variety of user and application metadata needs while efficiently supporting traditional file system operations.},
	Address = {College Park, MD},
	Author = {Sasha Ames and Nikhil Bobb and Kevin M. Greenan and Owen S. Hofmann and Mark W. Storer and Carlos Maltzahn and Ethan L. Miller and Scott A. Brandt},
	Booktitle = {MSST '06},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:15:24 -0700},
	Keywords = {papers, linking, systems, storage, metadata, storagemedium, related:quasar, filesystems},
	Local-Url = {/Users/carlosmalt/Documents/Papers/ames-mss06.pdf},
	Month = {May},
	Organization = {IEEE},
	Title = {{LiFS}: An Attribute-Rich File System for Storage Class Memories},
	Year = {2006},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBDLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQS9hbWVzLW1zczA2LnBkZk8RAVgAAAAAAVgAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w5hbWVzLW1zczA2LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABQQAAAgA2LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpBOmFtZXMtbXNzMDYucGRmAA4AHgAOAGEAbQBlAHMALQBtAHMAcwAwADYALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACEvTXkgRHJpdmUvUGFwZXJzL0EvYW1lcy1tc3MwNi5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAGoAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAABxg==}}

@inproceedings{maltzahn:wcw99,
	Abstract = {The bandwidth usage due to HTTP traffic often varies considerably over the course of a day, requiring high network performance during peak periods while leaving network resources unused during off-peak periods. We show that using these extra network resources to prefetch web content during off-peak periods can significantly reduce peak bandwidth usage without compromising cache consistency. With large HTTP traffic variations it is therefore feasible to apply ``bandwidth smoothing'' to reduce the cost and the required capacity of a network infrastructure. In addition to reducing the peak network demand, bandwidth smoothing improves cache hit rates. We apply machine learning techniques to automatically develop prefetch strategies that have high accuracy. Our results are based on web proxy traces generated at a large corporate Internet exchange point and data collected from recent scans of popular web sites},
	Address = {San Diego, CA},
	Author = {Carlos Maltzahn and Kathy Richardson and Dirk Grunwald and James Martin},
	Booktitle = {4th International Web Caching Workshop (WCW'99)},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:17:30 -0700},
	Keywords = {papers, networking, intermediary, machinelearning, webcaching},
	Month = {March 31 - April 2},
	Title = {On Bandwidth Smoothing},
	Year = {1999},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi13Y3c5OS5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8SbWFsdHphaG4td2N3OTkucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAU0AAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6TTptYWx0emFobi13Y3c5OS5wZGYADgAmABIAbQBhAGwAdAB6AGEAaABuAC0AdwBjAHcAOQA5AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9NL21hbHR6YWhuLXdjdzk5LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@article{maltzahn:per97,
	Abstract = {Enterprise level web proxies relay world-wide web traffic between private networks and the Internet. They improve security, save network bandwidth, and reduce network latency. While the performance of web proxies has been analyzed based on synthetic workloads, little is known about their performance on real workloads. In this paper we present a study of two web proxies (CERN and Squid) executing real workloads on Digital's Palo Alto Gateway. We demonstrate that the simple CERN proxy architecture outperforms all but the latest version of Squid and continues to outperform cacheless configurations. For the measured load levels the Squid proxy used at least as many CPU, memory, and disk resources as CERN, in some configurations significantly more resources. At higher load levels the resource utilization requirements will cross and Squid will be the one using fewer resources. Lastly we found that cache hit rates of around 30% had very little effect on the requests service time.},
	Author = {Carlos Maltzahn and Kathy Richardson and Dirk Grunwald},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:18:29 -0700},
	Journal = {ACM SIGMETRICS Performance Evaluation Review},
	Keywords = {papers, performance, webcaching, networking, intermediary},
	Month = {June},
	Number = {1},
	Pages = {13-23},
	Title = {Performance Issues of Enterprise Level Web Proxies},
	Volume = {25},
	Year = {1997},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBOLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1zaWdtZXRyaWNzOTcucGRmTxEBhAAAAAABhAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////GW1hbHR6YWhuLXNpZ21ldHJpY3M5Ny5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFNAAACAEEvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOk06bWFsdHphaG4tc2lnbWV0cmljczk3LnBkZgAADgA0ABkAbQBhAGwAdAB6AGEAaABuAC0AcwBpAGcAbQBlAHQAcgBpAGMAcwA5ADcALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACwvTXkgRHJpdmUvUGFwZXJzL00vbWFsdHphaG4tc2lnbWV0cmljczk3LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB1AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAf0=}}

@inproceedings{maltzahn:sigmetrics97,
	Abstract = {Enterprise level web proxies relay world-wide web traffic between private networks and the Internet. They improve security, save network bandwidth, and reduce network latency. While the performance of web proxies has been analyzed based on synthetic workloads, little is known about their performance on real workloads. In this paper we present a study of two web proxies (CERN and Squid) executing real workloads on Digital's Palo Alto Gateway. We demonstrate that the simple CERN proxy architecture outperforms all but the latest version of Squid and continues to outperform cacheless configurations. For the measured load levels the Squid proxy used at least as many CPU, memory, and disk resources as CERN, in some configurations significantly more resources. At higher load levels the resource utilization requirements will cross and Squid will be the one using fewer resources. Lastly we found that cache hit rates of around 30% had very little effect on the requests service time.},
	Address = {Seattle, WA},
	Author = {Carlos Maltzahn and Kathy Richardson and Dirk Grunwald},
	Booktitle = {SIGMETRICS 1997},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:19:28 -0700},
	Keywords = {papers, performance, tracing, networking, intermediary, webcaching},
	Month = {June 15-18},
	Pages = {13--23},
	Read = {Yes},
	Title = {Performance Issues of Enterprise Level Web Proxies},
	Year = {1997},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBOLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi1zaWdtZXRyaWNzOTcucGRmTxEBhAAAAAABhAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////GW1hbHR6YWhuLXNpZ21ldHJpY3M5Ny5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFNAAACAEEvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOk06bWFsdHphaG4tc2lnbWV0cmljczk3LnBkZgAADgA0ABkAbQBhAGwAdAB6AGEAaABuAC0AcwBpAGcAbQBlAHQAcgBpAGMAcwA5ADcALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACwvTXkgRHJpdmUvUGFwZXJzL00vbWFsdHphaG4tc2lnbWV0cmljczk3LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAB1AAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAf0=}}

@inproceedings{kaldewey:fast08wip,
	Address = {San Jose, CA},
	Author = {Tim Kaldewey and Andrew Shewmaker and Richard Golding and Carlos Maltzahn and Theodore Wong and Scott A. Brandt},
	Booktitle = {Work in Progress at 6th USENIX Conference on File and Storage Technologies (FAST '08)},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2019-12-29 16:42:04 -0800},
	Keywords = {shortpapers, qos, networking, storage},
	Month = {February 26-29},
	Title = {RADoN: QoS in Storage Networks},
	Year = {2008},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBLLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSy9rYWxkZXdleS1mYXN0MDh3aXAucGRmTxEBeAAAAAABeAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////FmthbGRld2V5LWZhc3QwOHdpcC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFLAAACAD4vOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOks6a2FsZGV3ZXktZmFzdDA4d2lwLnBkZgAOAC4AFgBrAGEAbABkAGUAdwBlAHkALQBmAGEAcwB0ADAAOAB3AGkAcAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKS9NeSBEcml2ZS9QYXBlcnMvSy9rYWxkZXdleS1mYXN0MDh3aXAucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJAByAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAe4=}}

@inproceedings{weil:pdsw07,
	Abstract = {Brick and object-based storage architectures have emerged as a means of improving the scalability of storage clusters. However, existing systems continue to treat storage nodes as passive devices, despite their ability to exhibit significant intelligence and autonomy. We present the design and implementation of RADOS, a reliable object storage service that can scales to many thousands of devices by leveraging the intelligence present in individual storage nodes. RADOS preserves consistent data access and strong safety semantics while allowing nodes to act semi-autonomously to self-manage replication, failure detection, and failure recovery through the use of a small cluster map. Our implementation offers excellent performance, reliability, and scalability while providing clients with the illusion of a single logical object store.},
	Address = {Reno, NV},
	Author = {Sage A. Weil and Andrew Leung and Scott A. Brandt and Carlos Maltzahn},
	Booktitle = {Proceedings of the 2007 ACM Petascale Data Storage Workshop (PDSW 07)},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:20:07 -0700},
	Keywords = {papers, obsd, distributed, storage, systems, related:x10},
	Local-Url = {/Users/carlosmalt/Documents/Papers/weil-pdsw07.pdf},
	Month = {November},
	Title = {RADOS: A Fast, Scalable, and Reliable Storage Service for Petabyte-scale Storage Clusters},
	Year = {2007},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBELi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvVy93ZWlsLXBkc3cwNy5wZGZPEQFcAAAAAAFcAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8Pd2VpbC1wZHN3MDcucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVcAAAIANy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6Vzp3ZWlsLXBkc3cwNy5wZGYAAA4AIAAPAHcAZQBpAGwALQBwAGQAcwB3ADAANwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIi9NeSBEcml2ZS9QYXBlcnMvVy93ZWlsLXBkc3cwNy5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAawAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHL}}

@inproceedings{maltzahn:usenix99,
	Abstract = {The dramatic increase of HTTP traffic on the Internet has resulted in wide-spread use of large caching proxy servers as critical Internet infrastructure components. With continued growth the demand for larger caches and higher performance proxies grows as well. The common bottleneck of large caching proxy servers is disk I/O. In this paper we evaluate ways to reduce the amount of required disk I/O. First we compare the file system interactions of two existing web proxy servers, CERN and SQUID. Then we show how design adjustments to the current SQUID cache architecture can dramatically reduce disk I/O. Our findings suggest two that strategies can significantly reduce disk I/O: (1) preserve locality of the HTTP reference stream while translating these references into cache references, and (2) use virtual memory instead of the file system for objects smaller than the system page size. The evaluated techniques reduced disk I/O by 50% to 70%.},
	Address = {Monterey, CA},
	Author = {Carlos Maltzahn and Kathy Richardson and Dirk Grunwald},
	Booktitle = {USENIX ATC '99},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:20:58 -0700},
	Keywords = {papers, networking, intermediary, storage, webcaching},
	Month = {June 6-11},
	Read = {Yes},
	Title = {Reducing the Disk I/O of Web Proxy Server Caches},
	Year = {1999},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi11c2VuaXg5OS5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8VbWFsdHphaG4tdXNlbml4OTkucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAU0AAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6TTptYWx0emFobi11c2VuaXg5OS5wZGYAAA4ALAAVAG0AYQBsAHQAegBhAGgAbgAtAHUAcwBlAG4AaQB4ADkAOQAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvTS9tYWx0emFobi11c2VuaXg5OS5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp}}

@inproceedings{ames:mss05,
	Abstract = {Traditional file systems provide a weak and inadequate structure for meaningful representations of file interrelationships and other context-providing metadata. Existing designs, which store additional file-oriented metadata either in a database, on disk, or both are limited by the technologies upon which they depend. Moreover, they do not provide for user-defined relationships among files. To address these issues, we created the Linking File System (LiFS), a file system design in which files may have both arbitrary user- or application-specified attributes, and attributed links between files. In order to assure performance when accessing links and attributes, the system is designed to store metadata in non-volatile memory. This paper discusses several use cases that take advantage of this approach and describes the user-space prototype we developed to test the concepts presented.
},
	Address = {Monterey, CA},
	Author = {Alexander Ames and Nikhil Bobb and Scott A. Brandt and Adam Hiatt and Carlos Maltzahn and Ethan L. Miller and Alisa Neeman and Deepa Tuteja},
	Booktitle = {MSST '05},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:21:32 -0700},
	Keywords = {papers, ssrc, metadata, filesystems, linking},
	Local-Url = {/Users/carlosmalt/Documents/Papers/ames-mss05.pdf},
	Month = {April},
	Title = {Richer File System Metadata Using Links and Attributes},
	Year = {2005},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBDLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvQS9hbWVzLW1zczA1LnBkZk8RAVgAAAAAAVgAAgAADEdvb2dsZSBEcml2ZQAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////w5hbWVzLW1zczA1LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAA/////wAACgBjdQAAAAAAAAAAAAAAAAABQQAAAgA2LzpWb2x1bWVzOkdvb2dsZURyaXZlOk15IERyaXZlOlBhcGVyczpBOmFtZXMtbXNzMDUucGRmAA4AHgAOAGEAbQBlAHMALQBtAHMAcwAwADUALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACEvTXkgRHJpdmUvUGFwZXJzL0EvYW1lcy1tc3MwNS5wZGYAABMAFC9Wb2x1bWVzL0dvb2dsZURyaXZl//8AAAAIAA0AGgAkAGoAAAAAAAACAQAAAAAAAAAFAAAAAAAAAAAAAAAAAAABxg==}}

@inproceedings{koren:pdsw07,
	Abstract = {As users interact with file systems of ever increasing size, it is becoming more difficult for them to familiarize themselves with the entire contents of the file system. In petabyte-scale systems, users must navigate a pool of billions of shared files in order to find the information they are looking for. One way to help alleviate this problem is to integrate navigation and search into a common framework.
One such method is faceted search. This method originated within the information retrieval community, and has proved popular for navigating large repositories, such as those in e-commerce sites and digital libraries. This paper introduces faceted search and outlines several current research directions in adapting faceted search techniques to petabyte-scale file systems.},
	Address = {Reno, NV},
	Author = {Jonathan Koren and Yi Zhang and Sasha Ames and Andrew Leung and Carlos Maltzahn and Ethan L. Miller},
	Booktitle = {Proceedings of the 2007 ACM Petascale Data Storage Workshop (PDSW 07)},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:24:17 -0700},
	Keywords = {papers, ir, filesystems, metadata, facets, search},
	Month = {November},
	Title = {Searching and Navigating Petabyte Scale File Systems Based on Facets},
	Year = {2007},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBFLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSy9rb3Jlbi1wZHN3MDcucGRmTxEBYAAAAAABYAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EGtvcmVuLXBkc3cwNy5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFLAAACADgvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOks6a29yZW4tcGRzdzA3LnBkZgAOACIAEABrAG8AcgBlAG4ALQBwAGQAcwB3ADAANwAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAIy9NeSBEcml2ZS9QYXBlcnMvSy9rb3Jlbi1wZHN3MDcucGRmAAATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABsAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAdA=}}

@article{jarke:ijicis92,
	Abstract = {Information systems support for design environments emphasizes object management and tends to neglect the growing demand for team support. Process management is often tackled by rigid technological protocols which are likely to get in the way of group productivity and quality. Group tools must be introduced in an unobtrusive way which extends current practice yet provides structure and documentation of development experiences. The concept of sharing processes allows agents to coordinate the sharing of ideas, tasks, and results by interacting protocol automata which can be dynamically adapted to situational requirements. Inconsistency is managed with equal emphasis as consistency. The sharing process approach has been implemented in a system called ConceptTalk which has been experimentally integrated with design environments for information and hypertext systems.},
	Author = {Matthias Jarke and Carlos Maltzahn and Thomas Rose},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:25:27 -0700},
	Journal = {International Journal of Intelligent and Cooperative Information Systems},
	Keywords = {papers, sharing, cscw, datamanagement},
	Number = {1},
	Pages = {145--167},
	Title = {Sharing Processes: Team Coordination in Design Repositories},
	Volume = {1},
	Year = {1992},
	Bdsk-Url-1 = {https://www.worldscientific.com/doi/abs/10.1142/S0218215792000076}}

@inproceedings{ellis:hicss97,
	Abstract = {Chautauqua is an exploratory workflow management system designed and implemented within the Collaboration Technology Research group (CTRG) at the University of Colorado. This system represents a tightly knit merger of workflow technology and groupware technology. Chautauqua has been in test usage at the University of Colorado since 1995. This document discusses Chautauqua - its motivation, its design, and its implementation. Our emphasis here is on its novel features, and the techniques for implementing these features.},
	Address = {Wailea, Maui, HI},
	Author = {Clarence E. Ellis and Carlos Maltzahn},
	Booktitle = {30th Hawaii International Conference on System Sciences, Information System Track},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:26:44 -0700},
	Keywords = {papers, workflow, cscw},
	Month = {January},
	Title = {The Chautauqua Workflow System},
	Year = {1997},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvRS1GL2VsbGlzLWhpY3NzOTcucGRmTxEBagAAAAABagACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////EWVsbGlzLWhpY3NzOTcucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAANFLUYAAAIAOy86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6RS1GOmVsbGlzLWhpY3NzOTcucGRmAAAOACQAEQBlAGwAbABpAHMALQBoAGkAYwBzAHMAOQA3AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAmL015IERyaXZlL1BhcGVycy9FLUYvZWxsaXMtaGljc3M5Ny5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbwAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHd}}

@misc{mowat:netapp07,
	Author = {J. Eric Mowat and Yee-Peng Wang and Carlos Maltzahn and Raghu C. Mallena},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2019-12-29 16:52:04 -0800},
	Keywords = {patents, caching, webcaching},
	Month = {July},
	Title = {United States Patent 7,249,219: Method and Apparatus to Improve Buffer Cache Hit Rate},
	Year = {2007},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBHLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvTS9tb3dhdC1uZXRhcHAwNy5wZGZPEQFoAAAAAAFoAAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8SbW93YXQtbmV0YXBwMDcucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAU0AAAIAOi86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6TTptb3dhdC1uZXRhcHAwNy5wZGYADgAmABIAbQBvAHcAYQB0AC0AbgBlAHQAYQBwAHAAMAA3AC4AcABkAGYADwAaAAwARwBvAG8AZwBsAGUAIABEAHIAaQB2AGUAEgAlL015IERyaXZlL1BhcGVycy9NL21vd2F0LW5ldGFwcDA3LnBkZgAAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAbgAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHa}}

@inproceedings{kaldewey:rtas08,
	Abstract = {Large- and small-scale storage systems frequently serve a mixture of workloads, an increasing number of which require some form of performance guarantee. Providing guaranteed disk performance---the equivalent of a ``virtual disk''---is challenging because disk requests are non-preemptible and their execution times are stateful, partially non-deterministic, and can vary by orders of magnitude. Guaranteeing throughput, the standard measure of disk performance, requires worst-case I/O time assumptions orders of magnitude greater than average I/O times, with correspondingly low performance and poor control of the resource allocation. We show that disk time utilization--- analogous to CPU utilization in CPU scheduling and the only fully provisionable aspect of disk performance---yields greater control, more efficient use of disk resources, and better isolation between request streams than bandwidth or I/O rate when used as the basis for disk reservation and scheduling.},
	Address = {St. Louis, Missouri},
	Annote = {Springer Journal of Real-Time Systems Award for Best Student Paper},
	Author = {Tim Kaldewey and Anna Povzner and Theodore Wong and Richard Golding and Scott A. Brandt and Carlos Maltzahn},
	Booktitle = {RTAS 2008},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2020-01-05 06:27:49 -0700},
	Keywords = {papers, performance, management, storage, systems, fahrrad, rbed, qos},
	Month = {April},
	Title = {Virtualizing Disk Performance},
	Year = {2008},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBILi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvSy9rYWxkZXdleS1ydGFzMDgucGRmTxEBbAAAAAABbAACAAAMR29vZ2xlIERyaXZlAAAAAAAAAAAAAAAAAAAAAAAAAEJEAAH/////E2thbGRld2V5LXJ0YXMwOC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////8AAAAAAAAAAAAAAAD/////AAAKAGN1AAAAAAAAAAAAAAAAAAFLAAACADsvOlZvbHVtZXM6R29vZ2xlRHJpdmU6TXkgRHJpdmU6UGFwZXJzOks6a2FsZGV3ZXktcnRhczA4LnBkZgAADgAoABMAawBhAGwAZABlAHcAZQB5AC0AcgB0AGEAcwAwADgALgBwAGQAZgAPABoADABHAG8AbwBnAGwAZQAgAEQAcgBpAHYAZQASACYvTXkgRHJpdmUvUGFwZXJzL0sva2FsZGV3ZXktcnRhczA4LnBkZgATABQvVm9sdW1lcy9Hb29nbGVEcml2Zf//AAAACAANABoAJABvAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAd8=}}

@inproceedings{povzner:fast08wip,
	Author = {Anna Povzner and Scott A. Brandt and Richard Golding and Theodore Wong and Carlos Maltzahn},
	Booktitle = {Work in Progress at 6th USENIX Conference on File and Storage Technologies (FAST '08)},
	Date-Added = {2009-09-29 12:06:25 -0700},
	Date-Modified = {2019-12-29 16:55:18 -0800},
	Keywords = {shortpapers, predictable, performance, storage},
	Title = {Virtualizing Disk Performance with Fahrrad},
	Year = {2008},
	Bdsk-File-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBKLi4vLi4vLi4vLi4vLi4vVm9sdW1lcy9Hb29nbGVEcml2ZS9NeSBEcml2ZS9QYXBlcnMvUC9wb3Z6bmVyLWZhc3QwOHdpcC5wZGZPEQF0AAAAAAF0AAIAAAxHb29nbGUgRHJpdmUAAAAAAAAAAAAAAAAAAAAAAAAAQkQAAf////8VcG92em5lci1mYXN0MDh3aXAucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAP////8AAAoAY3UAAAAAAAAAAAAAAAAAAVAAAAIAPS86Vm9sdW1lczpHb29nbGVEcml2ZTpNeSBEcml2ZTpQYXBlcnM6UDpwb3Z6bmVyLWZhc3QwOHdpcC5wZGYAAA4ALAAVAHAAbwB2AHoAbgBlAHIALQBmAGEAcwB0ADAAOAB3AGkAcAAuAHAAZABmAA8AGgAMAEcAbwBvAGcAbABlACAARAByAGkAdgBlABIAKC9NeSBEcml2ZS9QYXBlcnMvUC9wb3Z6bmVyLWZhc3QwOHdpcC5wZGYAEwAUL1ZvbHVtZXMvR29vZ2xlRHJpdmX//wAAAAgADQAaACQAcQAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAHp}}
